name: tests

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "v*.*.*"
  pull_request:
  workflow_call:
  workflow_dispatch:

jobs:
  tests:
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
    runs-on: ubuntu-20.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - 3.11
          - 3.12
          - 3.13
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}-${{ matrix.python-version }}
            uv-${{ runner.os }}

      - name: Run tests
        run: uv run pytest

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Minimize uv cache
        run: uv cache prune --ci
