[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "npycomp"
version = "0.0.0"
description = "A Python library for NP-complete reductions."
authors = [
    { name = "Hassan Andrabi", email = "hrs.andrabi@gmail.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12"
keywords = ["knapsack", "optimisation", "sampling", "algorithms"]
classifiers = [
	"Intended Audience :: Science/Research",
	"Intended Audience :: Developers",
	"License :: OSI Approved :: MIT License",
	"Programming Language :: Python :: 3.12",
	"Operating System :: OS Independent",
	"Topic :: Scientific/Engineering",
	"Topic :: Scientific/Engineering :: Mathematics",
	"Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = []

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-timeout",
]
dev = [
	"ruff",
]
doc = [
    "Sphinx==8.1.3",
	"sphinx-autobuild==2024.10.3",
	"sphinx-copybutton==0.5.2",
	"sphinx-favicon==1.0.1",
	"sphinx-sitemap==2.6.0",
	"sphinx_design==0.6.1",
	"pydata-sphinx-theme==0.16.1",
    "numpydoc",
]

[project.urls]
Homepage = "https://github.com/HRSAndrabi/npycomp"
Documentation = "https://github.com/HRSAndrabi/npycomp"
Repository = "https://github.com/HRSAndrabi/npycomp"
Issues = "https://github.com/HRSAndrabi/npycomp/issues"

[tool.semantic_release]
version_variables = ["pyproject.toml:version"]
assets = []
build_command = """
	python -m pip install build
	python -m build
"""
build_command_env = []
commit_message = "{version}\n\nBumping version."
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "./"
no_git_verify = false
tag_format = "{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
upload_to_vcs_release = true

[tool.ruff]
line-length = 79

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
select = ["E501", "D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"  
