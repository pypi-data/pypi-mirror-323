# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import typing
from .tool_rule_type import ToolRuleType
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ChildToolRule(UncheckedBaseModel):
    """
    A ToolRule represents a tool that can be invoked by the agent.
    """

    tool_name: str = pydantic.Field()
    """
    The name of the tool. Must exist in the database for the user's organization.
    """

    type: typing.Optional[ToolRuleType] = None
    children: typing.List[str] = pydantic.Field()
    """
    The children tools that can be invoked.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
