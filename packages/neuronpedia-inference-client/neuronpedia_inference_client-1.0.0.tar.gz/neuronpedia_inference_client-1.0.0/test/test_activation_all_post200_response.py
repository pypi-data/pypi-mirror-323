# coding: utf-8

"""
    Neuronpedia - Inference Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: johnny@neuronpedia.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neuronpedia_inference_client.models.activation_all_post200_response import ActivationAllPost200Response

class TestActivationAllPost200Response(unittest.TestCase):
    """ActivationAllPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActivationAllPost200Response:
        """Test ActivationAllPost200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActivationAllPost200Response`
        """
        model = ActivationAllPost200Response()
        if include_optional:
            return ActivationAllPost200Response(
                activations = [
                    neuronpedia_inference_client.models._activation_all_post_200_response_activations_inner._activation_all_post_200_response_activations_inner(
                        source = '', 
                        index = 56, 
                        values = [
                            1.337
                            ], 
                        sum_values = 1.337, 
                        max_value = 1.337, 
                        max_value_index = 1.337, 
                        dfa_values = [
                            1.337
                            ], 
                        dfa_target_index = 56, 
                        dfa_max_value = 1.337, )
                    ],
                tokens = [
                    ''
                    ],
                counts = [
                    [
                        1.337
                        ]
                    ]
            )
        else:
            return ActivationAllPost200Response(
                activations = [
                    neuronpedia_inference_client.models._activation_all_post_200_response_activations_inner._activation_all_post_200_response_activations_inner(
                        source = '', 
                        index = 56, 
                        values = [
                            1.337
                            ], 
                        sum_values = 1.337, 
                        max_value = 1.337, 
                        max_value_index = 1.337, 
                        dfa_values = [
                            1.337
                            ], 
                        dfa_target_index = 56, 
                        dfa_max_value = 1.337, )
                    ],
                tokens = [
                    ''
                    ],
        )
        """

    def testActivationAllPost200Response(self):
        """Test ActivationAllPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
