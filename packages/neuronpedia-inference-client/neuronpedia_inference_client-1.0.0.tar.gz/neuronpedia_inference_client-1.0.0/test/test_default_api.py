# coding: utf-8

"""
    Neuronpedia - Inference Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: johnny@neuronpedia.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neuronpedia_inference_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_activation_all_post(self) -> None:
        """Test case for activation_all_post

        For a given prompt, get the top activating features for a set of SAEs (eg gemmascope-res-65k), or specific SAEs in the set of SAEs (eg 0-gemmascope-res-65k, 5-gemmascope-res-65k). Also has other customization options.
        """
        pass

    def test_activation_single_post(self) -> None:
        """Test case for activation_single_post

        Given a text prompt, returns the activation values for a single SAE latent or custom vector+hook.
        """
        pass

    def test_activation_topk_by_token_post(self) -> None:
        """Test case for activation_topk_by_token_post

        For a given prompt, get the top activating features at each token position for a single SAE.
        """
        pass

    def test_steer_completion_chat_post(self) -> None:
        """Test case for steer_completion_chat_post

        For a given prompt, complete it by steering with the given feature or vector
        """
        pass

    def test_steer_completion_post(self) -> None:
        """Test case for steer_completion_post

        For a given prompt, complete it by steering with the given feature or vector
        """
        pass

    def test_util_sae_topk_by_decoder_cossim_post(self) -> None:
        """Test case for util_sae_topk_by_decoder_cossim_post

        Given a specific SAE feature, return the top features by cosine similarity in the same SAE
        """
        pass

    def test_util_sae_vector_post(self) -> None:
        """Test case for util_sae_vector_post

        Get the raw vector for an SAE feature
        """
        pass


if __name__ == '__main__':
    unittest.main()
