# coding: utf-8

"""
    Neuronpedia - Inference Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: johnny@neuronpedia.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neuronpedia_inference_client.models.steer_completion_request import SteerCompletionRequest

class TestSteerCompletionRequest(unittest.TestCase):
    """SteerCompletionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SteerCompletionRequest:
        """Test SteerCompletionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SteerCompletionRequest`
        """
        model = SteerCompletionRequest()
        if include_optional:
            return SteerCompletionRequest(
                prompt = '',
                model = '',
                steer_method = 'SIMPLE_ADDITIVE',
                normalize_steering = True,
                types = [
                    'STEERED'
                    ],
                features = [
                    null
                    ],
                vectors = [
                    neuronpedia_inference_client.models.np_steer_vector.NPSteerVector(
                        steering_vector = [
                            1.337
                            ], 
                        strength = 1.337, 
                        hook = 'blocks.0.hook_resid_pre', )
                    ],
                n_completion_tokens = 1,
                temperature = 0,
                strength_multiplier = 1.337,
                freq_penalty = 1.337,
                seed = 1.337
            )
        else:
            return SteerCompletionRequest(
                prompt = '',
                model = '',
                steer_method = 'SIMPLE_ADDITIVE',
                normalize_steering = True,
                types = [
                    'STEERED'
                    ],
                n_completion_tokens = 1,
                temperature = 0,
                strength_multiplier = 1.337,
                freq_penalty = 1.337,
                seed = 1.337,
        )
        """

    def testSteerCompletionRequest(self):
        """Test SteerCompletionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
