# coding: utf-8

"""
    Neuronpedia - Inference Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: johnny@neuronpedia.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neuronpedia_inference_client.models.activation_topk_by_token_post200_response_results_inner import ActivationTopkByTokenPost200ResponseResultsInner

class TestActivationTopkByTokenPost200ResponseResultsInner(unittest.TestCase):
    """ActivationTopkByTokenPost200ResponseResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActivationTopkByTokenPost200ResponseResultsInner:
        """Test ActivationTopkByTokenPost200ResponseResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActivationTopkByTokenPost200ResponseResultsInner`
        """
        model = ActivationTopkByTokenPost200ResponseResultsInner()
        if include_optional:
            return ActivationTopkByTokenPost200ResponseResultsInner(
                token_position = 56,
                token = '',
                top_features = [
                    neuronpedia_inference_client.models._activation_topk_by_token_post_200_response_results_inner_top_features_inner._activation_topk_by_token_post_200_response_results_inner_top_features_inner(
                        feature_index = 56, 
                        activation_value = 1.337, )
                    ]
            )
        else:
            return ActivationTopkByTokenPost200ResponseResultsInner(
                token_position = 56,
                token = '',
                top_features = [
                    neuronpedia_inference_client.models._activation_topk_by_token_post_200_response_results_inner_top_features_inner._activation_topk_by_token_post_200_response_results_inner_top_features_inner(
                        feature_index = 56, 
                        activation_value = 1.337, )
                    ],
        )
        """

    def testActivationTopkByTokenPost200ResponseResultsInner(self):
        """Test ActivationTopkByTokenPost200ResponseResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
