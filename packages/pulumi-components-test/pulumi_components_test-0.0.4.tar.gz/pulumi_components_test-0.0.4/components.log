[01/24/2025 11:18] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:18] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:18] analyzing pem=pulumi.output.Output[str]
[01/24/2025 11:18] analyzing private_key=pulumi.output.Output[str]
[01/24/2025 11:18] analyzing ca_cert=pulumi.output.Output[str]
[01/24/2025 11:18] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:18] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:18] analyzing subject=typing.Union[component_file.Subject, typing.Awaitable[component_file.Subject], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:18] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:18] analyzing pem=pulumi.output.Output[str]
[01/24/2025 11:18] analyzing private_key=pulumi.output.Output[str]
[01/24/2025 11:18] analyzing ca_cert=pulumi.output.Output[str]
[01/24/2025 11:18] analyzing subject=pulumi.output.Output[component_file.Subject]
[01/24/2025 11:18] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:18] component=ComponentSchema(inputs={'algorithm': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The algorithm to use for the key.'), 'ecdsaCurve': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The curve to use for ECDSA keys.'), 'subject': SchemaProperty(optional=True, type_=None, ref='#/types/my-component:index:Subject', description=None)}, outputs={'pem': SchemaProperty(optional=False, type_=<class 'str'>, ref=None, description=None), 'privateKey': SchemaProperty(optional=False, type_=<class 'str'>, ref=None, description='The private key.'), 'caCert': SchemaProperty(optional=False, type_=<class 'str'>, ref=None, description=None), 'subject': SchemaProperty(optional=False, type_=None, ref='#/types/my-component:index:Subject', description='The subject.')}, description='A self-signed certificate.')
[01/24/2025 11:18] analyzing algorithm=typing.Optional[str]
[01/24/2025 11:18] analyzing algorithm=pulumi.output.Output[str]
[01/24/2025 11:18] analyzing ecdsa_curve=typing.Optional[pulumi.output.Output[str]]
[01/24/2025 11:18] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:18] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:18] analyzing subject=typing.Union[test_analyzer.test_analyze_type_definition.<locals>.Subject, typing.Awaitable[test_analyzer.test_analyze_type_definition.<locals>.Subject], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:18] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:18] analyzing subjectRequired=typing.Union[test_analyzer.test_analyze_type_definition.<locals>.Subject, typing.Awaitable[test_analyzer.test_analyze_type_definition.<locals>.Subject], ForwardRef('Output[T]')]
[01/24/2025 11:18] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:18] analyzing subject=pulumi.output.Output[test_analyzer.test_analyze_type_definition.<locals>.Subject]
[01/24/2025 11:18] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:19] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:19] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:19] analyzing pem=pulumi.output.Output[str]
[01/24/2025 11:19] analyzing private_key=pulumi.output.Output[str]
[01/24/2025 11:19] analyzing ca_cert=pulumi.output.Output[str]
[01/24/2025 11:19] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:19] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:19] analyzing subject=typing.Union[component_file.Subject, typing.Awaitable[component_file.Subject], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:19] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:19] analyzing pem=pulumi.output.Output[str]
[01/24/2025 11:19] analyzing private_key=typing.Optional[pulumi.output.Output[str]]
[01/24/2025 11:19] analyzing ca_cert=pulumi.output.Output[str]
[01/24/2025 11:19] analyzing subject=pulumi.output.Output[component_file.Subject]
[01/24/2025 11:19] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:19] component=ComponentSchema(inputs={'algorithm': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The algorithm to use for the key.'), 'ecdsaCurve': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The curve to use for ECDSA keys.'), 'subject': SchemaProperty(optional=True, type_=None, ref='#/types/my-component:index:Subject', description=None)}, outputs={'pem': SchemaProperty(optional=False, type_=<class 'str'>, ref=None, description=None), 'privateKey': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The private key.'), 'caCert': SchemaProperty(optional=False, type_=<class 'str'>, ref=None, description=None), 'subject': SchemaProperty(optional=False, type_=None, ref='#/types/my-component:index:Subject', description='The subject.')}, description='A self-signed certificate.')
[01/24/2025 11:19] analyzing algorithm=typing.Optional[str]
[01/24/2025 11:19] analyzing algorithm=pulumi.output.Output[str]
[01/24/2025 11:19] analyzing ecdsa_curve=typing.Optional[pulumi.output.Output[str]]
[01/24/2025 11:19] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:19] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:19] analyzing subject=typing.Union[test_analyzer.test_analyze_type_definition.<locals>.Subject, typing.Awaitable[test_analyzer.test_analyze_type_definition.<locals>.Subject], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:19] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:19] analyzing subjectRequired=typing.Union[test_analyzer.test_analyze_type_definition.<locals>.Subject, typing.Awaitable[test_analyzer.test_analyze_type_definition.<locals>.Subject], ForwardRef('Output[T]')]
[01/24/2025 11:19] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:19] analyzing subject=pulumi.output.Output[test_analyzer.test_analyze_type_definition.<locals>.Subject]
[01/24/2025 11:19] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:20] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:20] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:20] analyzing pem=pulumi.output.Output[str]
[01/24/2025 11:20] analyzing private_key=pulumi.output.Output[str]
[01/24/2025 11:20] analyzing ca_cert=pulumi.output.Output[str]
[01/24/2025 11:20] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:20] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:20] analyzing subject=typing.Union[component_file.Subject, typing.Awaitable[component_file.Subject], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:20] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:20] analyzing pem=pulumi.output.Output[str]
[01/24/2025 11:20] analyzing private_key=typing.Optional[pulumi.output.Output[str]]
[01/24/2025 11:20] analyzing ca_cert=pulumi.output.Output[str]
[01/24/2025 11:20] analyzing subject=pulumi.output.Output[component_file.Subject]
[01/24/2025 11:20] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:20] component=ComponentSchema(inputs={'algorithm': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The algorithm to use for the key.'), 'ecdsaCurve': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The curve to use for ECDSA keys.'), 'subject': SchemaProperty(optional=True, type_=None, ref='#/types/my-component:index:Subject', description=None)}, outputs={'pem': SchemaProperty(optional=False, type_=<class 'str'>, ref=None, description=None), 'privateKey': SchemaProperty(optional=True, type_=<class 'str'>, ref=None, description='The private key.'), 'caCert': SchemaProperty(optional=False, type_=<class 'str'>, ref=None, description=None), 'subject': SchemaProperty(optional=False, type_=None, ref='#/types/my-component:index:Subject', description='The subject.')}, description='A self-signed certificate.')
[01/24/2025 11:20] analyzing algorithm=typing.Optional[str]
[01/24/2025 11:20] analyzing algorithm=pulumi.output.Output[str]
[01/24/2025 11:20] analyzing ecdsa_curve=typing.Optional[pulumi.output.Output[str]]
[01/24/2025 11:20] analyzing algorithm=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:20] analyzing ecdsa_curve=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:20] analyzing subject=typing.Union[test_analyzer.test_analyze_type_definition.<locals>.Subject, typing.Awaitable[test_analyzer.test_analyze_type_definition.<locals>.Subject], ForwardRef('Output[T]'), NoneType]
[01/24/2025 11:20] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:20] analyzing subjectRequired=typing.Union[test_analyzer.test_analyze_type_definition.<locals>.Subject, typing.Awaitable[test_analyzer.test_analyze_type_definition.<locals>.Subject], ForwardRef('Output[T]')]
[01/24/2025 11:20] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
[01/24/2025 11:20] analyzing subject=pulumi.output.Output[test_analyzer.test_analyze_type_definition.<locals>.Subject]
[01/24/2025 11:20] analyzing cn=typing.Union[str, typing.Awaitable[str], ForwardRef('Output[T]')]
