[tool.poetry]
name = "placements-io"
version = "0.0.2"
license = "MIT"
description = "Placements.io Python Software Development Kit"
homepage = "https://placements.io"
repository = "https://github.com/placementsapp/pio-python-sdk"
documentation = "https://api.placements.io/doc/#resources"
authors = [
    "Placements.io",
    "Andrew Bowman <abowman@placements.io>",
]
readme = "readme.md"
packages = [{include = "pio"}]

[tool.poetry.dependencies]
python = "^3.12"
httpx = "^0.27.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-httpx = "^0.32.0"
black = "^24.8.0"
tox = "^4.23.2"
coverage = "^7.6.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


#
# Pytest
#

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore:.*to upload raw bytes/text content."
]


#
# Tox
#

[tool.tox]
requires = [
  "tox>=4",
  "virtualenv>20.2",
]
env_list = ["report"]

[tool.tox.env_run_base]
description = "Run test under {base_python}"
deps = [
    "poetry", 
    "pytest", 
    "pytest_httpx", 
    "pytest_asyncio",
    "pytest_cov",
]
pre_commands = [
    ["poetry", "install", "--dev"]
]

[tool.tox.env.pytest]
commands = [
    ["poetry", "run", "pytest", "--verbose"]
]

[tool.tox.env.report]
commands = [
    ["poetry", "run", "pytest", "--verbose", "--cov=pio", "--cov-report", "term-missing"]
]