# coding: utf-8

"""
    Ephor.ai

    Collaborative AI

    The version of the OpenAPI document: 1.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ephor_server_ti_client.models.project import Project

class TestProject(unittest.TestCase):
    """Project unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Project:
        """Test Project
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Project`
        """
        model = Project()
        if include_optional:
            return Project(
                project_id = '',
                name = '',
                description = '',
                collection = [
                    None
                    ],
                owner_id = '',
                users = ephor_server_ti_client.models.users.Users(),
                invite_link_id = '',
                invitations = None,
                predefined_queries = [
                    ''
                    ],
                custom_instructions = '',
                model = '',
                comments = [
                    None
                    ],
                library = ephor_server_ti_client.models.library.Library(
                    library_id = '', 
                    items = [
                        ephor_server_ti_client.models.library_item.LibraryItem(
                            index_reference = '', 
                            name = '', 
                            manifest = [
                                ephor_server_ti_client.models.manifest_item.ManifestItem(
                                    id = '', 
                                    mime_type = '', 
                                    name = '', 
                                    web_view_link = '', 
                                    starred = True, 
                                    priority = 56, 
                                    ingested = True, 
                                    ingestion_status = '', 
                                    ingestion_error = '', 
                                    updated_at = '', 
                                    content_hash = '', 
                                    type = '', )
                                ], 
                            is_multipart = True, 
                            last_part = 56, )
                        ], ),
                updated_at = ''
            )
        else:
            return Project(
                project_id = '',
                name = '',
                description = '',
                collection = [
                    None
                    ],
                owner_id = '',
                users = ephor_server_ti_client.models.users.Users(),
                predefined_queries = [
                    ''
                    ],
                custom_instructions = '',
                model = '',
                comments = [
                    None
                    ],
                library = ephor_server_ti_client.models.library.Library(
                    library_id = '', 
                    items = [
                        ephor_server_ti_client.models.library_item.LibraryItem(
                            index_reference = '', 
                            name = '', 
                            manifest = [
                                ephor_server_ti_client.models.manifest_item.ManifestItem(
                                    id = '', 
                                    mime_type = '', 
                                    name = '', 
                                    web_view_link = '', 
                                    starred = True, 
                                    priority = 56, 
                                    ingested = True, 
                                    ingestion_status = '', 
                                    ingestion_error = '', 
                                    updated_at = '', 
                                    content_hash = '', 
                                    type = '', )
                                ], 
                            is_multipart = True, 
                            last_part = 56, )
                        ], ),
        )
        """

    def testProject(self):
        """Test Project"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
