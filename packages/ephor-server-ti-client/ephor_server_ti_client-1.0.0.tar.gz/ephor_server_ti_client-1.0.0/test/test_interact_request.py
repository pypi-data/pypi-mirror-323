# coding: utf-8

"""
    Ephor.ai

    Collaborative AI

    The version of the OpenAPI document: 1.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ephor_server_ti_client.models.interact_request import InteractRequest

class TestInteractRequest(unittest.TestCase):
    """InteractRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InteractRequest:
        """Test InteractRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InteractRequest`
        """
        model = InteractRequest()
        if include_optional:
            return InteractRequest(
                channel_id = '',
                message_id = '',
                interested_users = [
                    ''
                    ],
                parent_id = '',
                query = '',
                top_k = 56,
                past_messages = [
                    {
                        'key' : ''
                        }
                    ],
                attachments = [
                    None
                    ],
                lm_type = 'groq-70',
                expert_type = '',
                metadata = None,
                account_id = '',
                project_id = '',
                library_id = '',
                shared_context = True,
                custom_instructions = '',
                profile_context = '',
                spov_context = '',
                search_on_x_options = None,
                expert_mode = True,
                pro_mode = True,
                selected_mode = '',
                selected_sources = [
                    ''
                    ],
                selected_models = [
                    ''
                    ],
                generate_expert_comments = True,
                selected_expert_comments = [
                    ''
                    ],
                debate_mode = True,
                debate_options = None
            )
        else:
            return InteractRequest(
                channel_id = '',
                message_id = '',
                interested_users = [
                    ''
                    ],
                parent_id = '',
                query = '',
        )
        """

    def testInteractRequest(self):
        """Test InteractRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
