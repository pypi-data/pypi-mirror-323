# pyproject.toml
[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gotstate"
version = "1.0.4"
description = "A hierarchical finite state machine library"
readme = "README.md"
authors = [
    {name = "Brad Edwards", email = "brad@keplerops.com"},
]
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["state-machine", "hsm", "finite-state-machine", "hierarchical-state-machine"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pydantic>=2.9.2",
    "typing_extensions>=4.12.2"
]

[project.urls]
Homepage = "https://github.com/Brad-Edwards/gotstate"
Repository = "https://github.com/Brad-Edwards/gotstate"
Documentation = "https://github.com/Brad-Edwards/gotstate#readme"
Changelog = "https://github.com/Brad-Edwards/gotstate/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["gotstate*"]
exclude = ["tests*"]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310"]
include = '\.pyi?$'
extend-exclude = '''
^/tests/fixtures
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [
    "tests/fixtures",
    "__init__.py",
    "setup.py",
    ".venv",
    "venv",
    "env",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    ".tox",
    ".pytest_cache"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -v --cov=gotstate --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["gotstate"]
branch = true
omit = [
    "tests/*",
    "*/__init__.py",
    "setup.py",
    "*/.venv/*",
    "*/venv/*",
    "*/env/*",
    "*/__pycache__/*",
    "*/build/*",
    "*/dist/*",
    "*/.eggs/*",
    "*/.tox/*",
    "*/.pytest_cache/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "def main\\(\\):",
    "@abstract"
]
fail_under = 80
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "coverage-reports/html"

[tool.coverage.xml]
output = "coverage-reports/coverage.xml"

[tool.bandit]
exclude_dirs = ["tests/**"]
skips = ["B101"]  # Skip assert warnings globally
targets = ["gotstate"]
