from ghostos.libraries.terminal.abcd import Terminal

import subprocess
import shlex


class SystemTerminal(Terminal):
    """
    generated by deepseek-reasoner
    """

    def __init__(self, safe_mode: bool = True):
        self.safe_mode = safe_mode  # 保持安全模式配置项

    def _sanitize_command(self, command: str) -> str:
        """防御性命令处理策略"""
        if self.safe_mode:
            # 移除危险字符并限制命令长度
            cleaned = command.strip().replace(';', '').replace('&', '')[:500]
            return shlex.quote(cleaned)
        return command

    def exec(self, command: str, timeout: float) -> Terminal.CommandResult:
        try:
            # 安全预处理流程
            sanitized_cmd = self._sanitize_command(command)

            # 执行带超时控制的命令
            process = subprocess.run(
                sanitized_cmd,
                shell=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True,
                encoding='utf-8',
                errors='replace',  # 错误字符替换策略
                timeout=timeout,
                check=False,
            )

            return self.CommandResult(
                exit_code=process.returncode,
                stdout=process.stdout.strip(),
                stderr=process.stderr.strip(),
            )

        except subprocess.TimeoutExpired:
            # 专用超时处理
            return self.CommandResult(
                exit_code=-1,
                stdout="",
                stderr=f"Command timed out after {timeout} seconds",
            )
        except Exception as e:
            # 通用异常处理
            return self.CommandResult(
                exit_code=-2,
                stdout="",
                stderr=f"Execution failed: {str(e)}",
            )
