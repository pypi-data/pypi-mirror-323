!!from ..models import %(name_cap)sModel
!!from ..serializers.%(file_name)s import Retrieve%(name_cap)sSerializer, List%(name_cap)sSerializer, Create%(name_cap)sSerializer  
##from rest_framework.viewsets import ReadOnlyModelViewSet
##from typing import Any
##from rest_framework.permissions import AllowAny
##from drf_spectacular.utils import extend_schema
##from django_core.mixins import BaseViewSetMixin
##

@extend_schema(tags=["%(name)s"])
class %(class_name)s(BaseViewSetMixin, ReadOnlyModelViewSet):
    queryset = %(name_cap)sModel.objects.all()

    def get_serializer_class(self) -> Any:
        match self.action:
            case "list":
                return List%(name_cap)sSerializer
            case "retrieve":
                return Retrieve%(name_cap)sSerializer
            case "create":
                return Create%(name_cap)sSerializer
            case _:
                return List%(name_cap)sSerializer

    def get_permissions(self) -> Any:
        perms = []
        match self.action:
            case _:
                perms.extend([AllowAny])
        self.permission_classes = perms
        return super().get_permissions()