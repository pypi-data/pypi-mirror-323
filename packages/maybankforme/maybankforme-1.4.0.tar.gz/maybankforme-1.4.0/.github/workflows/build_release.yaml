name: Release and Publish Image

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release and Publish Image
    runs-on: ubuntu-latest
    permissions:
      contents: write   # Required for semantic-release to push changes
      packages: write   # Required to push to GHCR
      id-token: write   # Required for GHCR authentication
      pull-requests: write   # Required for semantic-release to push changes
      issues: write   # Required for semantic-release to push changes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for semantic-release to analyze commit history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.6' 

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @semantic-release/git

      - name: Build Python package
        if: steps.semantic-release.outputs.new_release_published == 'true'
        run: python -m build

      - name: Publish Python package
        if: steps.semantic-release.outputs.new_release_published == 'true'
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Pull latest changes (if version updated)
        if: steps.semantic-release.outputs.new_release_published == 'true'
        run: git pull

      - name: Login to GHCR
        if: steps.semantic-release.outputs.new_release_published == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.semantic-release.outputs.new_release_published == 'true'
        env:
          VERSION: ${{ steps.semantic-release.outputs.new_release_version }}
        run: |
          # Build and push versioned image
          docker build -t ghcr.io/${{ github.repository }}:$VERSION .
          docker push ghcr.io/${{ github.repository }}:$VERSION
          
          # Also tag as latest and push
          docker tag ghcr.io/${{ github.repository }}:$VERSION ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest