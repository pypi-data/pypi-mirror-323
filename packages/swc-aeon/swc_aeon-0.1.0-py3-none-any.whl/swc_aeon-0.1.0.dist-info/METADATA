Metadata-Version: 2.2
Name: swc-aeon
Version: 0.1.0
Summary: A package for interfacing with acquired data from Project Aeon experiments.
Author-email: Jai Bhagat <jkbhagatio@gmail.com>, Goncalo Lopes <g.lopes@neurogears.org>, Thinh Nguyen <thinh@datajoint.com>, Chang Huan Lo <changhuan.lo@ucl.ac.uk>, Joseph Burling <joseph@datajoint.com>, Jaerong Ahn <jaerong.ahn@datajoint.com>, Milagros Marin <milagros@datajoint.com>
License: BSD 3-Clause License
        
        Copyright (c) 2023-2025, University College London
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: Homepage, https://sainsburywellcomecentre.github.io/aeon_docs/
Project-URL: Repository, https://github.com/sainsburyWellcomeCentre/aeon_api
Project-URL: Documentation, https://sainsburywellcomecentre.github.io/aeon_docs/
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: license.md
Requires-Dist: dotmap
Requires-Dist: matplotlib
Requires-Dist: numpy<2,>=1.21.0
Requires-Dist: opencv-python
Requires-Dist: pandas>=1.3
Provides-Extra: dev
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pyright; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: ruff; extra == "dev"

# aeon_api

![aeon_api_env_build_and_tests](https://github.com/SainsburyWellcomeCentre/aeon_api/actions/workflows/build_env_run_tests.yml/badge.svg?branch=main)
[![aeon_api_tests_code_coverage](https://codecov.io/gh/SainsburyWellcomeCentre/aeon_api/branch/main/graph/badge.svg?token=973EC1CG03)](https://codecov.io/gh/SainsburyWellcomeCentre/aeon_api)

Project Aeon low-level library for interfacing with acquired data. Contains modules for loading and processing raw data.

## Set-up Instructions

We recommend [uv](https://docs.astral.sh/uv/) for python version, environment, and package dependency management. However, any other tool compatible with the `pyproject.toml` standard should work.

### Install from PyPI

```
uv pip install swc-aeon
```

### Install from source

```
git clone https://github.com/SainsburyWellcomeCentre/aeon_api
cd aeon_api
uv sync --all-extras
```

## Repository Contents

- `.github/workflows/` : GitHub actions workflows for building the environment and running tests 
- `aeon/` : Source code for the Aeon Python package 
    - `aeon/analysis`: Source code for processing and plotting the raw data
    - `aeon/io`: Source code for loading raw data
    - `aeon/schema`: Core modules for defining data schemas used to load raw data from particular experiments
- `tests/` : API unit tests
    - `tests/data` : Data used by tests
    - `tests/io` : Unit tests for the low-level raw data access API.
    - `tests/schema` : Schemas used to load sample data in test functions.

## Citation Policy

If you use this software, please cite it as below:

Sainsbury Wellcome Centre Foraging Behaviour Working Group. (2023). Aeon: An open-source platform to study the neural basis of ethological behaviours over naturalistic timescales,  https://doi.org/10.5281/zenodo.8411157

[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.8411157.svg)](https://zenodo.org/doi/10.5281/zenodo.8411157)
