Metadata-Version: 2.2
Name: django-celery-beat-rrule
Version: 0.0.3
Summary: Add a RruleDatabaseScheduler, automatically execute tasks based on custom rrule schedules
Author-email: Vlad Tabakov <contact@vladtabakov.com>
License: The BSD 3-Clause License The following is a BSD 3-Clause ("BSD New" or "BSD Simplified") license template. To generate your own license, change the values of OWNER, ORGANIZATION and YEAR from their original values as given here, and substitute your own.
        
        Note: You may omit clause 3 and still be OSD-conformant. Despite its colloquial name "BSD New", this is not the newest version of the BSD license; it was followed by the even newer BSD-2-Clause version, sometimes known as the "Simplified BSD License". On January 9th, 2008 the OSI Board approved BSD-2-Clause, which is used by FreeBSD and others. It omits the final "no-endorsement" clause and is thus roughly equivalent to the MIT License.
        
        Historical Background: The original license used on BSD Unix had four clauses. The advertising clause (the third of four clauses) required you to acknowledge use of U.C. Berkeley code in your advertising of any product using that code. It was officially rescinded by the Director of the Office of Technology Licensing of the University of California on July 22nd, 1999. He states that clause 3 is "hereby deleted in its entirety." The four clause license has not been approved by OSI. The license below does not contain the advertising clause.
        
        This prelude is not part of the license.
        
        OWNER = Regents of the University of California
        
        ORGANIZATION = University of California, Berkeley
        
        YEAR = 1998
        
        In the original BSD license, both occurrences of the phrase "COPYRIGHT HOLDERS AND CONTRIBUTORS" in the disclaimer read "REGENTS AND CONTRIBUTORS".
        
        License template
        Copyright (c) $YEAR $OWNER, All rights reserved.
        
        Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        
        Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
        Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
        Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
Project-URL: Homepage, https://github.com/Wattabak/django-celery-beat-rrule
Keywords: django-celery-beat,rrule,dateutil
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: dateutils>=0.6.12
Requires-Dist: django-celery-beat>=2.0.0
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: tox; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: pytest; extra == "dev"

# django-celery-beat-rrule

A [django-celery-beat](https://pypi.org/project/django-celery-beat/) plugin that adds a `RruleScheduler`.
It is based on the django-celery-beat's database scheduler and allows running tasks by just creating dateutil's rrule schedules.

# THIS PROJECT IS IN BETA, USE AT YOUR DISCRETION.

# Why?

`Django-celery-beat` is a wonderful library that already includes powerful schedulers like `crontab`, `interval` or `solar`.
But what if your schedule includes irregularities?
If you schedule an event on your calendar you are usually presented with a complex planner that allows you to schedule an event with multiple exceptions, breaks, 
different time intervals that are too complicated to be handled by crontab. This is where `dateutil`'s rrule package comes in,
it allows to easily create complex schedules with groups and exceptions that cover much more ground than crontab.

This project is intended to make this integrating this package easier for running custom events on small to medium scale.

# How it works

A custom rrule-based `DatabaseScheduler` implementation uses an extended periodic task,
that adds a new JSON field storing the serialized rrule schedule. 
Scheduler then is able to pick these tasks up as a regular celery-beat schedule and calculate the next execution date using rrule.after().


## Known issues

1. Potentially poor performance because of the `rrule.after()`'s computational overhead, specifically in complex rules with several exceptions.
2. Underlying issues with how rrule performs validation. There are several issues open on github describing how an RRULE can be created  excluding ALL dates from execution and making their computation take too long.

# Installation

You can install django-celery-beat-rrule either via the Python Package Index (PyPI)
or from source.

To install using `pip`:

```bash
   $ pip install --upgrade django-celery-beat-rrule
```

## Configuration

Add django_celery_beat_rrule to the list of installed apps

```python
INSTALLED_APPS = [
    ...,
    'django_celery_beat_rrule',
]
```

Run django-celery-beat-rrule migrations

```bash
    # make sure you have already installed django-celery-beat's migrations before you run this
    $ python manage.py migrate django_celery_beat_rrule
```

If you change the Django `TIME_ZONE` setting your periodic task schedule
will still be based on the old timezone.

To fix that you would have to reset the "last run time" for each periodic task.
