[build-system]
requires = ["setuptools >= 64"]
build-backend = "setuptools.build_meta"

[project]
name = "neuro-api-tony"
dynamic = ["version"]
authors = [
  { name="Pasu4", email="pascalwieckhorst02@gmail.com" },
]
description = "Graphical implementation of the Neuro API in Python"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Games/Entertainment",
    "Topic :: Games/Entertainment :: Turn Based Strategy",
    "Topic :: Internet",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Mocking",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
keywords = ["ai", "neuro-sama", "integration"]
dependencies = [
    "attrs~=24.3.0",
    "Faker~=33.1.3",
    "jsf~=0.11.2",
    "jsonschema~=4.23.0",
    "outcome~=1.3.0.post0",
    "requests~=2.32.3",
    "semver~=3.0.2",
    "trio~=0.28.0",
    "trio-websocket~=0.11.1",
    "wxPython~=4.2.2",
]

[tool.setuptools.dynamic]
version = {attr = "neuro_api_tony.constants.VERSION"}

[project.urls]
"Source" = "https://github.com/Pasu4/neuro-api-tony"
"Bug Tracker" = "https://github.com/Pasu4/neuro-api-tony/issues"

[project.gui-scripts]
neuro-api-tony = "neuro_api_tony.cli:cli_run"

[project.optional-dependencies]
tests = [
    "pytest>=5.0",
    "pytest-cov>=6.0",
    "pytest-trio>=0.8.0",
    "coverage>=7.2.5",
    "uv>=0.5.21",
    "mypy>=1.14.1",
    "types-requests>=2.32.0.20241016",
]
tools = [
    'black>=24.10.0; implementation_name == "cpython"',
    "ruff>=0.9.2",
    "codespell>=2.3.0",
]

[tool.setuptools.package-data]
neuro_api_tony = ["py.typed"]

[tool.uv]
package = true

[tool.mypy]
files = ["src/neuro_api_tony/"]
show_column_numbers = true
show_error_codes = true
show_traceback = true
# wxPython does not have type annotations and there are errors
# left and right from wxPython types resolving to Any
disallow_any_unimported = false
ignore_missing_imports = true
local_partial_types = true
no_implicit_optional = true
strict = true
warn_unreachable = true


[tool.pytest.ini_options]
addopts = "--cov-report=xml --cov-report=term-missing --cov=neuro_api_tony"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source_pkgs = ["neuro_api_tony"]
omit = [
    "__init__.py",
]
parallel = true
relative_files = true
source = ["."]

[tool.coverage.report]
precision = 1
skip_covered = true
exclude_also = [
    "pragma: no cover",
    "abc.abstractmethod",
    "if TYPE_CHECKING.*:",
    "if _t.TYPE_CHECKING:",
    "if t.TYPE_CHECKING:",
    "@overload",
    'class .*\bProtocol\b.*\):',
    "raise NotImplementedError",
]
partial_branches = [
    "pragma: no branch",
    "if not TYPE_CHECKING:",
    "if not _t.TYPE_CHECKING:",
    "if not t.TYPE_CHECKING:",
    "if .* or not TYPE_CHECKING:",
    "if .* or not _t.TYPE_CHECKING:",
    "if .* or not t.TYPE_CHECKING:",
]
