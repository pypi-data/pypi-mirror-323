# generated by resources_codegen:
#   URL:  https://api.nersc.gov/api/v1.2/status
#   timestamp: 2023-05-11 09:04:43.496473

from enum import Enum


class Resource(str, Enum):
    perlmutter = "perlmutter"
    """ compute: Perlmutter"""
    cori = "cori"
    """ compute: Cori"""
    dna = "dna"
    """ filesystem: DNA"""
    dtns = "dtns"
    """ filesystem: Data Transfer Nodes"""
    global_homes = "global_homes"
    """ filesystem: Global Homes"""
    global_common = "global_common"
    """ filesystem: Global Common"""
    community_filesystem = "community_filesystem"
    """ filesystem: Community File System (CFS)"""
    iris = "iris"
    """ service: IRIS"""
    globus = "globus"
    """ service: Globus"""
    jupyter = "jupyter"
    """ service: Jupyter"""
    nersc_center = "nersc_center"
    """ service: NERSC Center"""
    helpportal = "helpportal"
    """ service: Help Portal"""
    website = "website"
    """ service: NERSC Website"""
    rstudio = "rstudio"
    """ service: R Studio"""
    sgns = "sgns"
    """ service: Science Gateway Services"""
    network = "network"
    """ service: Network"""
    ldap = "ldap"
    """ service: LDAP"""
    integ_datalanguage = "integ_datalanguage"
    """ service: Integrated Data Language"""
    mathematica = "mathematica"
    """ service: Mathematica"""
    spin = "spin"
    """ service: Spin"""
    mongodb = "mongodb"
    """ service: MongoDB"""
    matlab = "matlab"
    """ service: MATLAB"""
    jgi_int_webservers = "jgi_int_webservers"
    """ service: JGI db, int, and web servers"""
    jgidb = "jgidb"
    """ service: JGI db"""
    _int = "int"
    """ service: int"""
    webservers = "webservers"
    """ service: web servers"""
    ssh_proxy = "ssh-proxy"
    """ service: ssh-proxy"""
    sciencedatabases = "sciencedatabases"
    """ service: Science Databases"""
    myproxy = "myproxy"
    """ service: MyProxy"""
    nomachine = "nomachine"
    """ service: NoMachine"""
    newt = "newt"
    """ service: NEWT"""
    regent = "regent"
    """ storage: HPSS Regent (Backup)"""
    archive = "archive"
    """ storage: HPSS Archive (User)"""


Resource.__str__ = lambda self: self.value
