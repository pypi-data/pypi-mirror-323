使下 std::游戏
使下 系统
使下 随机数

介紹返 =>
    |大小| 係 畀个tuple(640, 480)
    |吃咗| 係 1
    |初始方向| 係 "右"
    |方向| 係 |初始方向|
    |食物总数| 係 1
先啦

|校色| 下 -> |畀个tuple(255, 0, 0)| 就係 |红色|
|校色| 下 -> |畀个tuple(0, 0, 0)| 就係 |黑色|
|校色| 下 -> |畀个tuple(255, 255, 255)| 就係 |白色|

|屏幕老作| 下 -> |大小, "贪吃蛇"| 就係 |屏幕|

|[100, 100]| 拍住上 => |初始位置|
|[[100, 100], [80, 100], [60, 100], [40, 100], [20, 100]]| 拍住上 => |蛇身|
|[300, 300]| 拍住上 => |目标位置|
|[300, 300]| 拍住上 => |食物位置|

介紹返 $揿掣 
    |e| 點部署
        Share下 初始位置
        Share下 方向
        Share下 初始方向

        如果 |摞掣(e) 係 100| 嘅话 => {
            介紹返 |方向| 係 "右"
        }

        如果 |摞掣(e) 係 97| 嘅话 => {
            介紹返 |方向| 係 "左"
        }

        如果 |摞掣(e) 係 119| 嘅话 => {
            介紹返 |方向| 係 "上"
        }

        如果 |摞掣(e) 係 115| 嘅话 => {
            介紹返 |方向| 係 "下"
        }

    搞掂

介紹返 $游戏结束 
    點部署
        收工
    搞掂

有条仆街叫 |事件|
顶你 => |事件|  |['KEYDOWN', 揿掣]|

落操场玩跑步
    介紹返 |时间| 係 |计时器()|
    |上画| 下 -> |屏幕 = 屏幕, event = 事件| 啦

     /*
     *  判断是否输入了反方向运动
    */

    如果 |方向 係 "右" 同埋 初始方向 != "左"| 嘅话 => {
        介紹返 |初始方向| 係 |方向|
    }

    如果 |方向 係 "左" 同埋 初始方向 != "右"| 嘅话 => {
        介紹返 |初始方向| 係 |方向|
    }

    如果 |方向 係 "上" 同埋 初始方向 != "下"| 嘅话 => {
        介紹返 |初始方向| 係 |方向|
    }

    如果 |方向 係 "下" 同埋 初始方向 != "上"| 嘅话 => {
        介紹返 |初始方向| 係 |方向|
    }

    如果 |初始方向 係 "右"| 嘅话 => {
        介紹返 |初始位置[0]| 係 |初始位置[0] + 20|
    }

    如果 |初始方向 係 "左"| 嘅话 => {
        介紹返 |初始位置[0]| 係 |初始位置[0] - 20|
    }

    如果 |初始方向 係 "上"| 嘅话 => {
        介紹返 |初始位置[1]| 係 |初始位置[1] - 20|
    }

    如果 |初始方向 係 "下"| 嘅话 => {
        介紹返 |初始位置[1]| 係 |初始位置[1] + 20|
    }

    /* 增加蛇的长度 */
    |挜位(蛇身, 0, list(初始位置))| 啦

    如果 |初始位置[0] 係 食物位置[0] 同埋 初始位置[1] 係 食物位置[1]| 嘅话 => {
        畀我睇下 "好好味" 點樣先??
        介紹返 |食物总数| 係 0
    }

    唔係 嘅话 => {
        蛇身->pop() 啦
    }

    如果 |食物总数 係 0| 嘅话 => {
        介紹返 =>
            x 係 |求其嚟个(1, 32)|
            y 係 |求其嚟个(1, 24)|
            食物总数 係 1
        先啦
        [int(x * 20), int(y * 20)] 拍住上 => |食物位置|
    }

    |屏幕校色| 下 -> |屏幕, 黑色| 啦

    |位置| 从 0 行到 |蛇身 嘅 长度|
        矩形老作 下 -> |屏幕, 白色, 蛇身[位置][0], 蛇身[位置][1]| 啦
        矩形老作 下 -> |屏幕, 红色, 食物位置[0], 食物位置[1]| 啦
    到步

    |刷新| 下 -> || 啦

    /*
     * 判断游戏是否结束
     */
    如果 |初始位置[0] > 620 或者 初始位置[0] < 0| 嘅话 => {
        畀我睇下 "撞墙啦!" 點樣先??
        游戏结束() 啦
    }

    定係 |初始位置[1] > 420 或者 初始位置[1] < 0| 嘅话 => {
        畀我睇下 "撞墙啦!" 點樣先??
        游戏结束() 啦
    }
    
    睇表(时间, 5) 啦

玩到 |唔啱| 为止