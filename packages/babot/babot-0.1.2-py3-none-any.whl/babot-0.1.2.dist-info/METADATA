Metadata-Version: 2.2
Name: babot
Version: 0.1.2
Summary: Un framework para crear y gestionar agentes inteligentes
Author: Kevin Turkienich - Excel-ente
Author-email: Kevin Turquiñich <turkienich@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Kevin A. Turkienich
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: rich
Requires-Dist: langchain_ollama
Requires-Dist: pytesseract
Requires-Dist: pdf2image
Requires-Dist: pypdf
Requires-Dist: python-dotenv
Dynamic: author

Babot es un framework para crear agentes inteligentes personalizados, integrados con modelos de lenguaje como Llama 2, 
y diseñados para ejecutarse en infraestructura local o en la nube. Ofrece herramientas para inicializar proyectos, 
crear agentes desde cero, clonar agentes predefinidos desde un repositorio, y ejecutar tareas complejas como búsqueda 
en internet o análisis de imágenes.

Características
--------------
- **Fácil Inicialización:** Crea rápidamente un proyecto base con la CLI.
- **Agentes Personalizados:** Diseña agentes con prompts y capacidades específicas.
- **Integración con Ollama:** Utiliza modelos como Llama 2 para respuestas inteligentes.
- **Soporte Modular:** Añade agentes o funcionalidades según las necesidades del negocio.
- **Escalabilidad:** Perfecto para proyectos pequeños o despliegues empresariales.

Instalación
-----------

1. Instala el framework:
pip install babot

2. Verifica que Babot esté instalado:
babot --version


Uso
---
1. **Inicializar un Proyecto**
Para comenzar un nuevo proyecto:
babot init <nombre_proyecto>

Ejemplo:
babot init mi_proyecto

Esto generará una estructura base en el directorio `mi_proyecto`.

2. **Ejecutar un Agente Existente**
Dirígete al directorio del proyecto:
cd <nombre_proyecto>

Ejecuta el agente predeterminado (`babot`):
babot run babot

3. **Modificar el Prompt de un Agente**

Ejecuta el agente nuevamente:
babot run babot

4. **Crear un Nuevo Agente**
Puedes crear un agente desde cero con:
babot create <nombre_agente>

Ejemplo:
babot create agente_ventas

Esto generará:
- Un archivo Python: `agentes/agente_ventas.py`.
- Un archivo de configuración: `config/agente_ventas.yaml`.

Edítalos según tus necesidades y ejecuta el nuevo agente:
babot run agente_ventas

5. **Clonar un Agente desde la Web**
Si deseas usar un agente predefinido de nuestro repositorio, puedes clonarlo:
babot clone <nombre_agente>

Ejemplo:
babot clone agente_marketing

Esto descargará el código del agente y su configuración en tu proyecto.

Ejemplo Completo
----------------
1. Inicializa un nuevo proyecto:
babot init tienda_adema cd tienda_adema

2. Ejecuta el agente predeterminado:
babot run babot

3. Modifica el prompt de Babot para que actúe como un asistente técnico. Edita `config/babot.yaml`:
descripcion: "Asistente técnico para soporte al cliente." prompt_inicial: | Actúa como un soporte técnico para una empresa de tecnología. - Responde preguntas sobre el uso de productos tecnológicos. - Ayuda a los clientes a solucionar problemas comunes. - Mantén un tono claro, amigable y profesional.

4. Ejecuta el agente modificado:
babot run babot

Espero les sirva!

Contribuir
----------
¡Agradecemos tus contribuciones!  
Por favor, abre un issue o un pull request en el repositorio.

Licencia
--------
Este proyecto está bajo la Licencia MIT. Consulta el archivo `LICENSE` para más detalles.
