{"version":3,"file":"main.LinoWebCam_LinoDialog.04561eba3cb44f47d892.js","mappings":"kXAAO,MAAMA,EAAO,qBASpB,IAAIC,EAA6BA,EAAK,CAClCC,WAAY,oCACZC,YAAa,wDACbC,WAAY,0GACZC,YAAa,uFAIV,SAASC,EAAmBC,EAAMC,GACrC,IAAIC,EACoBA,OAAXC,IAATH,EAA0BA,EACnBI,KACX,IAAIC,EAAOC,OAAOD,KAAKH,EAAIK,aACIJ,IAAVF,EAAsBI,EAAKG,SAAWP,EAAQI,EAAKG,OAAS,IAE7EH,EAAKI,SAAQC,IACT,IAAIC,EAAMC,SAASC,eAAeH,GAC7BI,uBAAuB,eAC5B,GAAmB,IAAfH,EAAIH,OAAc,EAClBG,EAAMA,EAAI,IACMI,wBAAwBC,MAAQJ,SAC3CE,uBAAuB,iBAAiB,GACxCC,wBAAwBC,MACjBd,EAAIK,MAAMG,IAClBO,MAAMC,KAAKP,EAAIQ,iBACX,uBAAuBV,SAAQW,IACvBH,MAAMC,KAAKE,EAAGC,WAAWC,KAAK,KAC7BC,SAAS,gBAAgBH,EAAGI,MACxBC,YAAY,eAAgB,OAAO,GAG5D,IAGZ,EA7BEC,EAAAA,EAAAA,oBAAmBhC,GAgCd,MAAMiC,EAAUA,EACnBC,QAAO5B,OAAM6B,WACbC,cAAY,EACZC,YAAU,MAEV,MAAMC,GAAUC,EAAAA,EAAAA,YAAWvC,EAAI,CAAC,eAEhC,OADAkC,EAAQA,GAAS5B,EAAK4B,MACdI,EAAQE,OAAeC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAP,SAAA,EACxCC,GAAcF,IAASO,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAP,SAAA,EACpCM,EAAAA,EAAAA,MAAA,SACIE,UAAWL,EAAQrC,WAAW2C,QAC1B,UAAW,mBACX,CAAC,qBAAsBP,IAE3BQ,MACIjC,OAAOkC,OAAO,CAAC,EAAGxC,EAAKyC,OAAS,CAAC,GAAGC,UACjC1C,EAAK2C,UAAUd,SAAA,CAAED,EAAM,QAClCgB,EAAAA,EAAAA,KAAA,YAEHf,KAZmB,IAaP,EAIrBF,EAAQkB,UAAY,CAChBjB,MAAOkB,IAAAA,OACP9C,KAAM8C,IAAAA,OAAiBC,WACvBjB,WAAYgB,IAAAA,KACZf,SAAUe,IAAAA,KACVjB,SAAUiB,IAAAA,QAAkBC,YAQzB,MAAMC,EACT,qBAAOC,EAAe,KAACxD,EAAI,MAAEyD,EAAK,QAAEC,IAChC,OAAID,EAAME,EAAAA,yBAAqCA,EAAAA,mBACpCD,EAAQE,aAAa5D,GACzByD,EAAME,EAAAA,yBAAqCA,EAAAA,kBAC5CD,EAAQG,KAAKJ,EAAMK,OAAOC,UAAU/D,GACpCyD,EAAME,EAAAA,yBAAqCA,EAAAA,kBACvCD,EAAQ1D,GAAQ0D,EAAQM,KAAKhE,EAC3C,EAIG,MAAMiE,UAA0BC,EAAAA,UAgCnCC,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAcjBY,OAAS,KAAQ,CAAC,GAAI,UAAM3D,GAAWoB,SAASnB,KAAK2D,YAbjD3D,KAAK4D,eAAiB,GACtB5D,KAAK6D,QAAUf,EAAME,EAAAA,yBAAqCA,EAAAA,kBACpDF,EAAMlD,KAAKkE,aAAehB,EAAMlD,KAAKP,KAC3CW,KAAK+D,aAAejB,EAAMkB,UAAUC,WACpCjE,KAAKkE,EAAIpB,EAAMkB,UAAUC,WAEzBjE,KAAK0D,OAAS1D,KAAK0D,OAAOS,KAAKnE,MAC/BA,KAAK2D,SAAW3D,KAAK2D,SAASQ,KAAKnE,MACnCA,KAAK6C,eAAiB7C,KAAK6C,eAAesB,KAAKnE,MAC/CA,KAAKoE,UAAYpE,KAAKoE,UAAUD,KAAKnE,MACrCA,KAAKqE,WAAarE,KAAKqE,WAAWF,KAAKnE,KAC3C,CAIA6C,cAAAA,CAAexD,GACX,OAAOuD,EAAaC,eAAe,CAC/BxD,KAAMA,EAAMyD,MAAO9C,KAAK8C,MAAOC,QAAS/C,KAAK+C,SACrD,CAEAY,QAAAA,GACI,OAAO3D,KAAK6C,eAAe7C,KAAK6D,QACpC,CAEAO,SAAAA,CAAUE,EAAWlD,EAAM,CAAC,GACxB,IAAImD,EAAIvE,KAAK2D,YAAc,IAE3B,OADIY,aAAarE,SAAQqE,EAAIC,KAAKC,UAAUF,IACxCD,GACO9B,EAAAA,EAAAA,KAAA,OAAKpB,MAAOA,EAAOsD,wBAAyB,CAACC,OAAQJ,MAErD/B,EAAAA,EAAAA,KAAA,OAAKpB,MAAOA,EAAMK,SAAE8C,GAEnC,CAEAF,UAAAA,EAAW,MAACO,GAAM,EAAK,KAAEC,EAAK,IAAM,CAAC,GAC7B7E,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAChDhD,KAAK+D,aAAae,YAAYT,WAAW,CACrChF,KAAe,UAATwF,EAAmB7E,KAAK+E,QACxB/E,KAAK8C,MAAMlD,KAAKP,KAAM2F,IAAKhF,KAAM4E,MAAOA,EAAOC,KAAMA,GACvE,EAzESvB,EACF2B,gBAAkB,CAAC,cADjB3B,EAEF4B,MAAQ5F,EAFNgE,EAGF6B,YAAcC,EAAAA,gBAHZ9B,EAIF+B,wBAA0B,CAC7BlC,OAAQT,IAAAA,OACR4C,aAAc5C,IAAAA,KACdhB,WAAYgB,IAAAA,KACZ,CAACM,EAAAA,uBAAkCN,IAAAA,MAAgB,CAC/CM,EAAAA,kBACAA,EAAAA,mBACAA,EAAAA,kBACAA,EAAAA,qBACAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,sBAEJuC,SAAU7C,IAAAA,OAAiBC,YAjBtBW,EAoBFb,UAAY,IACZa,EAAkB+B,wBACrBzF,KAAM8C,IAAAA,OAAiBC,WACvBqB,UAAWtB,IAAAA,OAAiBC,YAvBvBW,EA0BFkC,aAAe,CAClBF,cAAc,EACd5D,YAAY,EACZ,CAACsB,EAAAA,uBAAkCA,EAAAA,qBAgDpC,MAAMyC,UAAkCnC,EAU3CE,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAgEjB4C,WAAcC,KACQ,OAAdA,EAAOC,IACND,EAAOC,KAAO5F,KAAK6F,MAAMD,IAAMD,EAAOG,KAAO9F,KAAK6F,MAAMC,KAC3D9F,KAAK+F,QAAQ,EAlEf,MAAMC,EAAe,CAAC,EACjBlD,EAAMmD,eAAe/F,OAAOkC,OAAO4D,EACpChG,KAAK+D,aAAamC,cAAcC,wBACpCnG,KAAK6F,MAAQ,IACN7F,KAAK6F,MAAOxD,MAAO,KAAM+D,SAAU,QAASJ,GACnDhG,KAAK+E,QAAUjC,EAAMlD,KAAKyG,WAAavD,EAAMlD,KAAKP,KAAK8B,SAAS,KAC1D2B,EAAMlD,KAAKP,KAAO,GAAGyD,EAAMkB,UAAUsC,UAAUxD,EAAMlD,KAAKP,QAEhEW,KAAKuG,sBAAwBvG,KAAKuG,sBAAsBpC,KAAKnE,MAC7DA,KAAKwG,QAAUxG,KAAKwG,QAAQrC,KAAKnE,MACjCA,KAAK2D,SAAW3D,KAAK2D,SAASQ,KAAKnE,MACnCA,KAAK+F,OAAS/F,KAAK+F,OAAO5B,KAAKnE,KACnC,CAEA,aAAMyG,SACIhD,MAAMgD,UACZ,IAAIC,EAAMjD,MAAME,WACX3D,KAAK+D,aAAaL,OAAOgD,KAC9B1G,KAAK2G,QAAUD,EAAIE,eAAe,qBACtC,CAEAC,OAAAA,GACI,IAAIH,EAAMjD,MAAME,WACZ3D,KAAK2G,SACA3G,KAAK8C,MAAMmD,eAAejG,KAAKqE,WAAW,CAACQ,KAAM,UACtD7E,KAAKwG,QAAQE,EAAII,mBACjB9G,KAAK+D,aAAagD,QAAQC,OAAOhH,KAAK+E,SAAW/E,MAEjDA,KAAKiH,SAAS,CAAC5E,MAAOqE,GAE9B,CAEAH,qBAAAA,CAAsBW,EAAWC,EAAWpE,GACxC,OAAK/C,KAAK2G,QACH3G,KAAK6F,MAAMxD,QAAU8E,EAAU9E,OAA+B,OAArBrC,KAAK6F,MAAMxD,OACvDoB,MAAME,WAAWmD,oBAAsB9G,KAAK6F,MAAMO,SAF5BpG,KAAK6F,MAAMxD,QAAU8E,EAAU9E,KAG7D,CAEA+E,kBAAAA,CAAmBC,EAAWC,GACtBtH,KAAK2G,QACD3G,KAAK6F,MAAMO,WAAa3C,MAAME,WAAWmD,oBACzC9G,KAAKiH,SAAS,CAAC5E,MAAO,OACtBrC,KAAK+F,UAEN/F,KAAKiH,SAAS,CAAC5E,MAAOoB,MAAME,YACvC,CAEA4D,oBAAAA,UACWvH,KAAK+D,aAAagD,QAAQC,OAAOhH,KAAK+E,QACjD,CAEApB,QAAAA,GACI,OAAO3D,KAAK6F,MAAMxD,KACtB,CAEAmE,OAAAA,CAAQJ,GACJpG,KAAK+D,aAAamC,cAAcsB,YAAY,CACxCC,KAAM,GAAGrB,KAAYpG,KAAKV,GAAGE,YAAY0C,QAAQuC,UAAUzE,KAAK+D,aAAamC,cAAcwB,qBAC5FC,MAAMtE,IACLrD,KAAKiH,SAAS,CAAC5E,MAAOgB,EAAKA,KAAM+C,SAAUA,GAAU,GAE7D,CAQAL,MAAAA,GACI/F,KAAKwG,QAAQ/C,MAAME,WAAWmD,kBAClC,EAnFSrB,EACFR,gBAAkB,CAAC,eAAe2C,OAAOtE,EAAkB2B,iBADzDQ,EAEFhD,UAAY,IACZa,EAAkBb,UACrBwD,cAAevD,IAAAA,KAAeC,YAJzB8C,EAMFD,aAAe,IACflC,EAAkBkC,aACrBS,eAAe,GA+EhB,MAAM4B,UAA2BvE,EAEpCE,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAwGjBgF,UAAaC,GAAU,KAvGnB/H,KAAKgI,aAAe,CAChB,iBACA,SACA,wBAGJhI,KAAKiI,SAAWjI,KAAKiI,SAAS9D,KAAKnE,MACnCA,KAAK0D,OAAS1D,KAAK0D,OAAOS,KAAKnE,MAC/BA,KAAKkI,MAAQlI,KAAKkI,MAAM/D,KAAKnE,MAC7BA,KAAKmI,oBAAsBnI,KAAKmI,oBAAoBhE,KAAKnE,MACzDA,KAAKoI,SAAWpI,KAAKoI,SAASjE,KAAKnE,MACnCA,KAAKqI,eAAiBrI,KAAKqI,eAAelE,KAAKnE,MAC/CA,KAAKsI,WAAatI,KAAKsI,WAAWnE,KAAKnE,MACvCA,KAAKuI,MAAQvI,KAAKuI,MAAMpE,KAAKnE,MAC7BA,KAAKwI,aAAexI,KAAKwI,aAAarE,KAAKnE,MAC3CA,KAAKyI,OAASzI,KAAKyI,OAAOtE,KAAKnE,MAC/BA,KAAK0I,cAAgB1I,KAAK0I,cAAcvE,KAAKnE,MAC7CA,KAAK+F,OAAS/F,KAAK+F,OAAO5B,KAAKnE,KACnC,CAEA,aAAMyG,GACFzG,KAAK2I,WAAa,CACdC,eAAgB5I,KAAKV,GAAGI,YAAYmJ,UACpCC,WAAW,EACXC,WAAY,CAAC,EACbC,qBAAuBjB,IAAW,EAClCkB,aAAelB,GAAW,KAElC,CAEAE,QAAAA,GACI,GAAIjI,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,kBAChD,OAAO,EACX,GAAIhD,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChD,OAAO,EACX,IAAKhD,KAAK8C,MAAMlD,KAAKsJ,SAAU,OAAO,EACtC,GAAIlJ,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,kBAA6B,CAC7E,IAAImG,EAAMnJ,KAAK+C,QAAQG,KAAKlD,KAAK8C,MAAMK,OAAOC,UAC1CgG,EAAYD,EAAIA,EAAI/I,OAAS,GAGjC,SAAKgJ,IAAcA,EAAUC,UAEzBF,EAAIA,EAAI/I,OAAS,KAEd+I,EAAIA,EAAI/I,OAAS,GAAGJ,KAAK8C,MAAMlD,KAAKP,QAAS,GACxD,CACI,QAAIW,KAAK+C,QAAQM,KAAKiG,kBACftJ,KAAK+C,QAAQM,KAAKkG,gBAAgBvJ,KAAK8C,MAAMlD,KAAKP,QAAS,EAE1E,CAEA6I,KAAAA,GACI,IAAIlD,EAAMhF,KAAKwJ,QACXxE,EAAIkD,MAAOlD,EAAIkD,QACVlD,EAAIyE,WAAYzE,EAAIyE,WAAWvB,QAC/BlD,EAAI0E,UAAU1E,EAAI0E,SAASC,QAAQzB,OAChD,CAEAC,mBAAAA,GACI,IAAIH,EAAe,GAenB,OAdIhI,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,kBAC5ChD,KAAK+C,QAAQ6G,aAAa5J,KAAK8C,MAAMK,OAAOC,UAAUjC,SACtDnB,KAAK8C,MAAMlD,KAAKkE,eAEhBkE,EAAa6B,KAAK,yBAGtB7B,EAAa6B,KAAK,UACd7J,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAC5ChD,KAAKiI,WAAYD,EAAa6B,KAAK,kBAC9B7J,KAAK+C,QAAQ+G,SAAS3I,SAASnB,KAAK8C,MAAMlD,KAAKP,OACpD2I,EAAa6B,KAAK,0BAGvB7B,CACX,CAEAI,QAAAA,GACI,OAAO5F,EAAAA,EAAAA,KAAA,KAAMmG,WAAWC,eAAc,CAElCmB,SAAWC,IACFhK,KAAK2I,WAAWK,qBAAqBgB,KAC1ChK,KAAKqI,eAAe2B,GACpBhK,KAAK2I,WAAWM,aAAae,GAAE,EAEnChF,IAAKhF,KAAKsI,WACVlH,MAAO,CAACR,MAAO,QACf2E,SAAUvF,KAAK8C,MAAMyC,SACrBlD,MAAOrC,KAAK2D,YAAc,MACtB3D,KAAK2I,WAAWI,YAC5B,CAEAV,cAAAA,CAAe2B,GACXhK,KAAK+F,OAAO,CAAC,CAAC/F,KAAK6D,SAAUmG,EAAEC,OAAO5H,QACtCrC,KAAKiH,SAAS,CAAC,EACnB,CAEAqB,UAAAA,CAAWtD,GACPhF,KAAKwJ,QAAUxE,EACXA,GAAOhF,KAAK0I,iBAAiB1I,KAAKkI,OAC1C,CAIAK,KAAAA,CAAMvD,GACF,MAAMkF,EAAUA,KACZlK,KAAKmK,UAAUC,QAAWrC,IACjB/H,KAAKiI,aACN/H,OAAOkC,OAAOpC,KAAK+D,aAAagD,QAAS,CACrCsD,qBAAsBnK,OAAOkC,OAAO,CAACgB,SAAU,GAAIpD,KAAK8C,MAAMK,QAAQC,SACtEkH,qBAAsBtK,KAAK8C,MAAMyC,SACjCgF,uBAAwBvK,KAAK8C,MAAME,EAAAA,uBACnCwH,sBAAuBxK,KAAK+D,aAAamC,cAAcuE,UAEvDzK,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAC5ChD,KAAK8C,MAAMwC,cACjBtF,KAAK+D,aAAa2G,QAAQC,aAAa,CAACrF,cAAc,IAC5D,CACH,EAEDN,IACAhF,KAAKmK,UAAYnF,EACbhF,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChDhD,KAAKmK,UAAYnF,EAAI4F,QAAQ,MAC7BV,KAGAlK,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAChDhD,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAClDkH,KAENlK,KAAKwI,aAAaxI,KAAKmK,UAC3B,CAEA3B,YAAAA,CAAaxD,GACT,GAAIA,EAAK,CACL,IAAI6F,EAAU7K,KAAKmI,sBACnBnI,KAAKgI,aAAa3H,SAAQyK,IAAS9F,EAAI/D,UAAU8J,OAAOD,EAAK,IAC7DD,EAAQxK,SAAQyK,IAAS9F,EAAI/D,UAAU+J,IAAIF,EAAK,GACpD,CACJ,CAEArC,MAAAA,GACIzI,KAAK+D,aAAamC,cAAcuC,OAAO,CACnCwC,SAAU,CAAC7H,SAAUpD,KAAK8C,MAAMK,OAAOC,WAC/C,CAEAsF,aAAAA,GACI,OACI1I,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChDhD,KAAK8C,MAAMK,OAAOC,WAAapD,KAAK+D,aAAagD,QAAQsD,wBAGzDrK,KAAK8C,MAAME,EAAAA,yBAAqChD,KAAK+D,aAAagD,QAAQwD,wBAC1EvK,KAAK+D,aAAamC,cAAcuE,UAAYzK,KAAK+D,aAAagD,QAAQyD,uBACtExK,KAAK8C,MAAMyC,WAAavF,KAAK+D,aAAagD,QAAQuD,qBAG1D,CAEAvE,MAAAA,CAAOmF,GACHlL,KAAK+D,aAAamC,cAAcH,OAAO,CACnCmF,OAAQA,EAAQtL,KAAMI,KAAK8C,MAAMlD,KAAMuL,IAAKnL,KAAK8C,MAAMK,OACvDiI,WAAYpL,KAAK8C,MAAME,EAAAA,wBAC/B,CAEAqI,MAAAA,CAAO3J,EAAW1B,KAAK8C,MAAMpB,YACzB,OAAK1B,KAAK6F,MAAM/D,OACZ9B,KAAKmK,WAAWnK,KAAKwI,aAAaxI,KAAKmK,YACpC3H,EAAAA,EAAAA,KAACjB,EAAO,IAAKvB,KAAK8C,MACrBpB,WAAYA,GAAc1B,KAAK8C,MAAMpB,WACrC9B,KAAMI,KAAK8C,MAAMlD,KAAM+B,SAAU3B,KAAK0D,SAASjC,UAC/Ce,EAAAA,EAAAA,KAAA,OACIP,UAAWjC,KAAKV,GAAGC,WAAW2C,QAAQlC,KAAK4D,gBAC3CkE,UAAW9H,KAAK8H,UAChB9C,IAAKhF,KAAKuI,MAAM9G,SACXzB,KAAK2I,WAAWG,WACb9I,KAAK8C,MAAMwC,eAAiBtF,KAAKiI,WADRjI,KAAKoI,WAERpI,KAAKoE,iBAXb,IAclC,EA1LSyD,EACF5C,gBAAkB,CAAC,eAAe2C,OAAOtE,EAAkB2B,iBA6L/D,MAAMqG,UAAkCzD,EAE3CrE,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAgBjBgF,UAAakC,IACK,UAAVA,EAAE1J,KAAmBN,KAAKwJ,QAAQ+B,cAAcvB,EAAEwB,iBAAiB,EAhBvExL,KAAK4D,eAAeiG,KAAK,4BACzB7J,KAAK6F,MAAQ,IACN7F,KAAK6F,MACR4F,aAAc,MAGlBzL,KAAK0L,cAAgB5I,EAAME,EAAAA,yBAAqCA,EAAAA,kBAC1DF,EAAMlD,KAAK+L,oBACX7I,EAAMlD,KAAKP,KAAO,SAExBW,KAAKoI,SAAWpI,KAAKoI,SAASjE,KAAKnE,MACnCA,KAAK2D,SAAW3D,KAAK2D,SAASQ,KAAKnE,MACnCA,KAAKoE,UAAYpE,KAAKoE,UAAUD,KAAKnE,KACzC,CAMA2D,QAAAA,GACI,MAAO,CACHiI,KAAMnI,MAAME,WACZtB,MAAOrC,KAAK6C,eAAe7C,KAAK0L,eACxC,CAEAtD,QAAAA,GACI,OAAO5F,EAAAA,EAAAA,KAAA,KAAMlD,GAAGG,WAAWoM,SAAQ,CAC/B9B,SAAWC,IACHA,EAAE8B,cAAcC,SAAW/B,EAAE8B,cAAcE,SAC/ChM,KAAK+F,OAAO,CAAC,CAAC/F,KAAK6D,SAAUmG,EAAE3H,MAC3B,CAACrC,KAAK0L,eAAgB1B,EAAE3H,QACxBrC,KAAKiH,SAAS,CAAC,GAAE,EAEzBgF,YAAY,OACZC,QAASlM,KAAKkM,QACdlH,IAAKhF,KAAKsI,WACV6D,UAAWnM,KAAK8C,MAAMlD,KAAKwM,cAAcC,WACzCjL,MAAO,CAACR,MAAO,QACf2E,SAAUvF,KAAK8C,MAAMyC,SACrBlD,MAAOrC,KAAK2D,WAAWtB,OAC/B,CAEA+B,SAAAA,GACI,IAAIG,EAAId,MAAME,YAAc,IAC5B,OAAOnB,EAAAA,EAAAA,KAAA,OAAKpB,MAAO,CAACkL,WAAY,UAAU7K,SAAE8C,GAChD,EAjDS+G,EACFrG,gBAAkB,CAAC,cAAc2C,OAAOC,EAAmB5C,gB,qHC3b/D,MAAMsH,EAAYA,CAACxJ,EAASyJ,KAC/B,MAAMC,EAAW,IAAIC,EAAAA,EACrBD,EAASE,YAAY,CACjBtN,KAAM,uBACNuN,OAASV,GACEnJ,EAAQV,MAAMwK,EAAAA,yBAEzBC,iBAAAA,CAAkBC,EAAKb,GACnBnJ,EAAQiK,gBAAgBC,EAAAA,kBAAmBJ,EAAAA,wBAAyBE,GACpEhK,EAAQ2H,QAAQwC,cAAc,CAAC,CAACL,EAAAA,yBAA0BE,GACtDE,EAAAA,mBAAmB,GAAO,EAClC,IAGJE,EAAAA,GAAAA,IACKC,EAAAA,GACJC,IAAIZ,GACJY,IAAIC,EAAAA,kBACJC,KAAK,CACFC,OAAO,EACPC,KAAM,eACNC,YAAaC,OAAOC,KAAKC,gBACzBC,cAAc,EACdC,cAAe,CACbC,aAAa,GAEfC,MAAO,CACHC,aAAa,GAEjBC,QAAS,CACLC,SAAU,6CAGdC,UAAW,CACPC,MAAO,CAAC,cAAe,SAAU,uBAAwB,gBACzDC,kBAAmB1B,EAAAA,wBACnB2B,aAAc3B,EAAAA,wBACd4B,mBAAoB5B,EAAAA,wBAEpB6B,OAAQ,CAAC,uBAAwB,eAAgB,aAIzDlC,EAAKW,EAAAA,GAAK,EAId,EAAeA,EAAI,E,+8BCnDN,EAAA9N,KAAe,aAG5B,mBAEA,aAEA,UAGA,aAEA,IAAIC,EAA6BA,EAAK,CAElCqP,SAAU,QAAF,wBAAsD,SAE9DC,eAAgB,QAAF,wBAA4D,SAE1EC,cAAe,QAAF,wBAA2D,SAExEC,cAAe,QAAF,wBAA2D,SAExEC,IAAK,QAAF,wBAAgE,SAEnE5B,KAAM,QAAF,wBAAkD,WACxD,IAAA7L,oBAAmBhC,GA0BrB,MAAM0P,EAyBF,WAAAxL,CAAYyL,GACRjP,KAAKiP,MAAQA,EACbjP,KAAKkP,uBACT,CAEA,qBAAAA,GACI,MAAMC,EAAqC,CAAC,EAe5C,OAdAnP,KAAKoP,SAAWzB,OAAO0B,IAAIC,cAAcC,YACnBxP,IAAlBC,KAAKoP,UACLD,EAAYK,OAASxP,KAAKoP,SAASI,OACnCL,EAAYvO,MAAQZ,KAAKoP,SAASxO,QAElCuO,EAAYK,OAASxP,KAAKiP,MAAMnM,MAAM0M,OAASC,iBAC/CN,EAAYvO,MAAQZ,KAAKiP,MAAMnM,MAAMlC,MAAQ6O,iBAC7CzP,KAAKoP,SAAWlP,OAAOkC,OAAO,CAAC,EAAG+M,EAAiC,CAACO,WAAYD,iBAAkBE,UAAU,IAC5GhC,OAAO0B,IAAIO,YAAY,CAACL,OAAQvP,KAAKoP,YAEzCpP,KAAK6P,YAAc,IAAI7P,KAAKoP,UACxBpP,KAAKiP,MAAMpJ,MAAMiK,SAAUX,EAAYW,SAAW9P,KAAKiP,MAAMpJ,MAAMiK,SAClEX,EAAYY,WAAa,cAC9B/P,KAAKgQ,sBAAwBb,EACtBA,CACX,EA9CO,EAAAc,gBAAmBhB,IACtBA,EAAMiB,UAAYlO,EAAMmO,OAAO,MAC/BlB,EAAMmB,QAAUpO,EAAMqO,aACjBtI,IACGkH,EAAMnM,MAAMwN,YAAYrB,EAAMiB,UAAUvG,QAAQ4G,gBAAgB,GAExE,CAACtB,EAAMiB,YAEP,MAAOrK,EAAOoB,GAAYjF,EAAMwO,SAAsB,CAClDC,QAAS,KAAMX,SAAU,KAAMY,QAAS,KAY5C,OAVAzB,EAAMpJ,MAAQA,EACdoJ,EAAMhI,SAAWjF,EAAMqO,aAAaM,GAChC1J,GAAU2J,GAAqB1Q,OAAOkC,OAAO,CAAC,EAAGwO,EAAKD,MAAM,IAEhE1B,EAAM4B,aAAe7O,EAAMqO,aACvBtI,IACI,IAAI+I,GAAKjL,EAAM6K,QAAQK,QAAQlL,EAAMiK,UAAY,GAAKjK,EAAM6K,QAAQtQ,OACpE6O,EAAMhI,SAAS,CAAC6I,SAAUjK,EAAM6K,QAAQI,IAAI,GAEpD,IACO7B,CAAK,EAoCpB,MAAM+B,EAA2ClO,IAC7C,MAAM,SAACsM,EAAQ,YAAES,GAAe/M,EAAMmO,IAC/BtB,EAAUuB,GAAelP,EAAMwO,SAAkBpB,EAASO,UAC3D/N,GAAU,IAAAC,YAAWvC,EAAI,CAAC,gBAAiB,gBAAiB,MAAO,SACnE8I,EAAWpG,EAAMqO,aACnB,EAAE7O,QAAO2P,MAAM,KAAMC,MAAKC,gBAAeC,SAAQjP,WAAY,2BACzD,gBAACT,EAAQmN,IAAIxN,QAAO,CAAC3B,KAAM,CAAC4B,MAAOA,IAC/B,gBAACI,EAAQiN,cAAc0C,YAAW,CAACC,aAAa,aAC5CL,IAAKA,EAAKC,IAAKA,EAAKC,cAAeA,EACnCI,aAAa,EAAMH,OAAQA,EAAQjP,MAAOA,OACnB,CAACT,IACxC,OAAQA,EAAQE,MAAe,gCAEvBsG,EAAS,CAAC5G,MAAO,mBAAoB2P,IAAKrO,EAAMmO,GAAGhC,MAAMnM,MAAM0M,OAC/D4B,IAAK,IAAKC,cAAgBrH,GAAM9J,OAAOkC,OAAOyN,EAC1C,CAACL,OAAQxF,EAAE3H,MAAQwN,EAAYH,aACnC4B,OAAQ,KAAMjP,MAAO+M,EAASI,OAASJ,EAASM,aACpD,2BACCtH,EAAS,CAAC5G,MAAO,kBAAmB2P,IAAKrO,EAAMmO,GAAGhC,MAAMnM,MAAMlC,MAC3DwQ,IAAK,IAAKC,cAAgBrH,GAAM9J,OAAOkC,OAAOyN,EAC1C,CAACjP,MAAOoJ,EAAE3H,MAAQwN,EAAYH,aAClC4B,OAAQ,KAAMjP,MAAO+M,EAASxO,MAAQwO,EAASM,aACnD,2BACCtH,EAAS,CAAC5G,MAAO,sBAAuB4P,IAAK,EAAGC,cAAgBrH,IACzD9J,OAAOkC,OAAOyN,EAAa,CACvBL,OAASK,EAAYL,OAASK,EAAYH,WAAc1F,EAAE3H,MAC1DzB,MAAQiP,EAAYjP,MAAQiP,EAAYH,WAAc1F,EAAE3H,MACxDqN,WAAY1F,EAAE3H,OAAO,EAC1BiP,OAAQ,MAAOjP,MAAO+M,EAASM,aACtC,2BACA,2BACI,gBAAC9N,EAAQmN,IAAIxN,QAAO,CAAC3B,KAAM,CAAC4B,MAAOI,EAAQuL,KAAKuE,EAAE,cAC9C,gBAAC9P,EAAQkN,cAAc6C,YAAW,CAC9BC,QAASjC,EACT5F,SAAUC,IACNkH,EAAYlH,EAAE3H,OACdnC,OAAOkC,OAAOyN,EAAa,CAACF,SAAU3F,EAAE3H,OAAO,OAzB3C,IA6BrB,EACL2O,EAAYvO,UAAY,CAACwO,GAAI,UAAUY,WAAW7C,GAAerM,YAInE,MAAMmP,EAAyChP,IAC3C,MAAMiP,EAAQ/P,EAAMmO,OAAO,MACrB6B,EAAc,CAACC,WAAY,QAASC,MAAO,QAC7CC,aAAc,MAAOvR,MAAO,MAAO4O,OAAQ,MAAO4C,OAAQ,OACxDxQ,GAAU,IAAAC,YAAWvC,EAAI,CAAC,WAAY,mBAC5C,OAAQsC,EAAQE,MAAe,gCAAE,gBAACF,EAAQ+M,SAAS0D,OAAM,CACrDC,KAAK,eACLpI,QAASpH,EAAMmO,GAAGhC,MAAMmB,QACxBhP,MAAO4Q,IACVlP,EAAMmO,GAAGhC,MAAMpJ,MAAM6K,QAAQtQ,OAAS,GACnC,gBAACwB,EAAQ+M,SAAS0D,OAAM,CACpBC,KAAK,aACLpI,QAASpH,EAAMmO,GAAGhC,MAAM4B,aACxBzP,MAAO4Q,IACf,gBAACpQ,EAAQ+M,SAAS0D,OAAM,CACpBC,KAAK,YACLpI,QAASF,GAAK+H,EAAMpI,QAAQ4I,OAAOvI,GACnC5I,MAAO4Q,IACX,uBAAKlK,UAAWkC,GAAKA,EAAEwB,mBACnB,gBAAC5J,EAAQgN,eAAe4D,aAAY,CAChCC,OAAQzI,IAEJxJ,SAASkS,cAAcC,OACvBhF,OAAO0B,IAAIO,YAAY,CAACL,OAAQzM,EAAMmO,GAAGpB,cACzC/M,EAAMmO,GAAG/B,wBACTpM,EAAMmO,GAAGhC,MAAMhI,SAAS,CAAC,EAAE,EAE/B2L,OAAQ5I,GAAK+H,EAAMpI,QAAQkJ,QAC3B7N,IAAK+M,EACLe,eAAe,GACf,gBAAC9B,EAAW,CAACC,GAAInO,EAAMmO,QAzBP,IA2Bf,EACXa,EAAWrP,UAAY,CAACwO,GAAI,UAAUY,WAAW7C,GAAerM,YAErD,EAAAoQ,WAAwBjQ,IACjC,MAAMmM,EAAuCjN,EAAMmO,OAAO,CAACrN,MAAOA,IAClEkM,EAAciB,gBAAgBhB,EAAMtF,SAEpC,MAAM,MAAE9D,EAAK,SAAEoB,GAAagI,EAAMtF,QAElC3H,EAAMgR,WAAU,KAEZxS,SAASkS,cAAcC,OACvB1D,EAAMtF,QAAQsJ,KAAO,IAAIjE,EAAcC,EAAMtF,SAC7CuJ,UAAUC,aAAaC,mBAAmBzL,MAAK0L,GAAQpM,EACnD,CAACyJ,QAAS2C,EAAKC,QACX,EAAEC,UAAmB,eAATA,IAAuBC,KAAIC,GAAKA,EAAE3D,cAAY,GACnE,IAEH,MAAM,KAAEmD,GAAShE,EAAMtF,QAEvB,OAAQ9D,EAAM6K,QAAQtQ,OAAgB,gCAClC,uBAAKgB,MAAO,CAACsS,SAAU,aAAc7N,EAAM4K,SAC3C,gBAAC,UAAM,CACHkD,OAAO,EACPC,2BAA2B,EAC3BpE,OAAQyD,EAAK7D,SAASI,OAASyD,EAAK7D,SAASM,WAC7CC,SAAUsD,EAAK7D,SAASO,SACxBkE,YAAaC,IACc,OAAnBjO,EAAMiK,UACN7I,EAAS,CAAC6I,SAAUgE,EAAGC,iBAAiB,GAAGzE,cAAcQ,UAAU,EAC3EkE,iBAAkBC,IACQ,OAAlBpO,EAAM4K,SAAkBxJ,EAAS,CAACwJ,QAClC,+CAA+C,EACvDzL,IAAKiK,EAAMtF,QAAQuG,UACnBgE,iBAAiB,aACjBC,iBAAkBlB,EAAKjD,sBACvBpP,MAAOqS,EAAK7D,SAASxO,MAAQqS,EAAK7D,SAASM,aAE/C,uBACItO,MAAO,CAACsS,SAAU,WAAYU,OAAQ,OAAQC,KAAM,MAChDC,UAAW,uBACf,gBAACxC,EAAU,CAACb,GAAIgC,MArBO,IAuB5B,EAIP,EAAAF,WAAA,UAAuB,CACnBvD,OAAQ,UAAU+E,OAAO5R,WACzB/B,MAAO,UAAU2T,OAAO5R,WACxB2N,YAAa,UAAUkE,KAAK7R,W","sources":["webpack://lino_react/./lino_react/react/components/LinoComponentUtils.jsx","webpack://lino_react/./lino_react/react/components/i18n.js","webpack://lino_react/./lino_react/react/components/LinoWebCam.tsx"],"sourcesContent":["export const name = \"LinoComponentUtils\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { RegisterImportPool, getExReady, Component, DataContextType } from \"./Base\";\n\nimport * as constants from \"./constants\";\n\n\nlet ex; const exModulePromises = ex = {\n    classNames: import(/* webpackChunkName: \"classNames_LinoComponentUtils\" */\"classnames\"),\n    queryString: import(/* webpackChunkName: \"queryString_LinoComponentUtils\" */\"query-string\"),\n    prDropdown: import(/* webpackChunkName: \"prDropdown_LinoComponentUtils\" */\"primereact/dropdown\"),\n    prInputText: import(/* webpackChunkName: \"prInputText_LinoComponentUtils\" */\"primereact/inputtext\"),\n};RegisterImportPool(ex);\n\n\nexport function maintainTableWidth(elem, count) {\n    let ctx;\n    if (elem !== undefined) ctx = elem\n    else ctx = this;\n    let keys = Object.keys(ctx.flexs),\n        fo_conditional = count !== undefined ? keys.length === count : keys.length > 1;\n    if (fo_conditional) {\n        keys.forEach(key => {\n            var tbl = document.getElementById(key)\n                .getElementsByClassName('p-datatable');\n            if (tbl.length === 1) {\n                tbl = tbl[0]\n                let width = tbl.getBoundingClientRect().width / document\n                    .getElementsByClassName('layout-topbar')[0]\n                    .getBoundingClientRect().width;\n                if (width > ctx.flexs[key]) {\n                    Array.from(tbl.querySelectorAll(\n                        '.p-datatable table')).forEach(el => {\n                            if (Array.from(el.classList).join(' ')\n                                .includes('p-datatable')) el.style\n                                    .setProperty('table-layout', 'auto');\n                        });\n                }\n            }\n        });\n    }\n}\n\n// export const Labeled = (props) => {\nexport const Labeled = ({\n    label, elem, children,\n    hide_label= false,\n    isFilled= false,\n}) => {\n    const localEx = getExReady(ex, ['classNames']);\n    label = label || elem.label;\n    return !localEx.ready ? null : <React.Fragment>\n        {!hide_label && label && <React.Fragment>\n            <label\n                className={localEx.classNames.default(\n                    \"l-label\", \"l-span-clickable\",\n                    {\"l-label--unfilled\": !isFilled},\n                )}\n                title={\n                    Object.assign({}, elem.value || {}).quicktip\n                    || elem.help_text}>{label}:</label>\n            <br/>\n        </React.Fragment>}\n        {children}\n    </React.Fragment>\n}\n\n\nLabeled.propTypes = {\n    label: PropTypes.string,\n    elem: PropTypes.object.isRequired,\n    hide_label: PropTypes.bool,\n    isFilled: PropTypes.bool,\n    children: PropTypes.element.isRequired,\n}\n// Labeled.defaultProps = {\n//     hide_label: false,\n//     isFilled: false,\n// }\n\n\nexport class ABCComponent {\n    static getValueByName({name, props, context}) {\n        if (props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return context.param_values[name];\n        return props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? context.rows[props.column.rowIndex][name]\n            : props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS\n                ? context[name] : context.data[name];\n    }\n}\n\n\nexport class LeafComponentBase extends Component {\n    static requiredModules = [\"classNames\"];\n    static iPool = ex;\n    static contextType = DataContextType;\n    static propTypesFromLinoLayout = {\n        column: PropTypes.object,\n        editing_mode: PropTypes.bool,\n        hide_label: PropTypes.bool,\n        [constants.URL_PARAM_WINDOW_TYPE]: PropTypes.oneOf([\n            constants.WINDOW_TYPE_TABLE,\n            constants.WINDOW_TYPE_DETAIL,\n            constants.WINDOW_TYPE_CARDS,\n            constants.WINDOW_TYPE_GALLERIA,\n            constants.WINDOW_TYPE_INSERT,\n            constants.WINDOW_TYPE_PARAMS,\n            constants.WINDOW_TYPE_UNKNOWN,\n        ]),\n        tabIndex: PropTypes.number.isRequired,\n    }\n\n    static propTypes = {\n        ...LeafComponentBase.propTypesFromLinoLayout,\n        elem: PropTypes.object.isRequired,\n        urlParams: PropTypes.object.isRequired,\n    }\n\n    static defaultProps = {\n        editing_mode: false,\n        hide_label: false,\n        [constants.URL_PARAM_WINDOW_TYPE]: constants.WINDOW_TYPE_UNKNOWN,\n    }\n\n    constructor(props) {\n        super(props);\n        this.wrapperClasses = []\n        this.dataKey = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index : props.elem.name;\n        this.upController = props.urlParams.controller;\n        this.c = props.urlParams.controller;\n\n        this.filled = this.filled.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.getValueByName = this.getValueByName.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n        this.setLeafRef = this.setLeafRef.bind(this);\n    }\n\n    filled = () => (![\"\", null, undefined].includes(this.getValue()));\n\n    getValueByName(name) {\n        return ABCComponent.getValueByName({\n            name: name, props: this.props, context: this.context});\n    }\n\n    getValue() {\n        return this.getValueByName(this.dataKey);\n    }\n\n    innerHTML(dangerous, style={}) {\n        let v = this.getValue() || \"\\u00a0\";\n        if (v instanceof Object) v = JSON.stringify(v);\n        if (dangerous) {\n            return <div style={style} dangerouslySetInnerHTML={{__html: v}}/>\n        } else {\n            return <div style={style}>{v}</div>\n        }\n    }\n\n    setLeafRef({input=false, type=\"\"} = {}) {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL)\n            this.upController.dataContext.setLeafRef({\n                name: type === 'slave' ? this.actorID\n                    : this.props.elem.name, ref: this, input: input, type: type});\n    }\n}\n\n\nexport class LeafComponentDelayedValue extends LeafComponentBase {\n    static requiredModules = [\"queryString\"].concat(LeafComponentBase.requiredModules);\n    static propTypes = {\n        ...LeafComponentBase.propTypes,\n        hasOwnContext: PropTypes.bool.isRequired\n    }\n    static defaultProps = {\n        ...LeafComponentBase.defaultProps,\n        hasOwnContext: false\n    }\n    constructor(props) {\n        super(props);\n        const masterRelate = {}\n        if (!props.hasOwnContext) Object.assign(masterRelate,\n            this.upController.actionHandler.masterRelateForSlave());\n        this.state = {\n            ...this.state, value: null, data_url: null, ...masterRelate}\n        this.actorID = props.elem.actor_id || (props.elem.name.includes('.')\n            ? props.elem.name : `${props.urlParams.packId}.${props.elem.name}`);\n\n        this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n        this.getData = this.getData.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        await super.prepare();\n        let val = super.getValue();\n        if (!this.upController.filled(val)) return;\n        this.delayed = val.hasOwnProperty('delayed_value_url');\n    }\n\n    onReady() {\n        let val = super.getValue();\n        if (this.delayed) {\n            if (!this.props.hasOwnContext) this.setLeafRef({type: \"slave\"});\n            this.getData(val.delayed_value_url);\n            this.upController.globals.panels[this.actorID] = this;\n        } else {\n            this.setState({value: val});\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, context) {\n        if (!this.delayed) return this.state.value !== nextState.value;\n        return this.state.value !== nextState.value || (this.state.value !== null &&\n            super.getValue().delayed_value_url !== this.state.data_url);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.delayed) {\n            if (this.state.data_url !== super.getValue().delayed_value_url) {\n                this.setState({value: null});\n                this.update();\n            }\n        } else this.setState({value: super.getValue()});\n    }\n\n    componentWillUnmount() {\n        delete this.upController.globals.panels[this.actorID];\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    getData(data_url) {\n        this.upController.actionHandler.silentFetch({\n            path: `${data_url}?${this.ex.queryString.default.stringify(this.upController.actionHandler.defaultParams())}`\n        }).then((data) => {\n            this.setState({value: data.data, data_url: data_url});\n        });\n    }\n\n    liveUpdate = (params) => {\n        if (params.mk === null ||\n            (params.mk === this.state.mk && params.mt === this.state.mt)\n        ) this.update();\n    }\n\n    update() {\n        this.getData(super.getValue().delayed_value_url);\n    }\n}\n\n\nexport class LeafComponentInput extends LeafComponentBase {\n    static requiredModules = [\"prInputText\"].concat(LeafComponentBase.requiredModules);\n    constructor(props) {\n        super(props);\n        this.styleClasses = [\n            \"disabled-input\",\n            \"l-card\",\n            \"unsaved-modification\",\n        ]\n\n        this.disabled = this.disabled.bind(this);\n        this.filled = this.filled.bind(this);\n        this.focus = this.focus.bind(this);\n        this.getCellStyleClasses = this.getCellStyleClasses.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.onChangeUpdate = this.onChangeUpdate.bind(this);\n        this.onInputRef = this.onInputRef.bind(this);\n        this.onRef = this.onRef.bind(this);\n        this.setCellStyle = this.setCellStyle.bind(this);\n        this.submit = this.submit.bind(this);\n        this.tabIndexMatch = this.tabIndexMatch.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        this.inputState = {\n            inputComponent: this.ex.prInputText.InputText,\n            inputOnly: false,\n            inputProps: {},\n            onChangeUpdateAssert: (event) => (true),\n            postOnChange: (event) => (null),\n        }\n    }\n\n    disabled() {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS)\n            return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return false;\n        if (!this.props.elem.editable) return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            let row = this.context.rows[this.props.column.rowIndex],\n                last_item = row[row.length - 1];\n\n            // No meta, assume not disabled;\n            if (!last_item || !last_item.meta) return false;\n            // disable_editing set to true;\n            if (row[row.length - 2]) return true;\n            // check name in the disabled_fields meta;\n            return row[row.length - 3][this.props.elem.name] || false;\n        } else {\n            if (this.context.data.disable_editing) return true;\n            return this.context.data.disabled_fields[this.props.elem.name] || false;\n        }\n    }\n\n    focus() {\n        let ref = this.inputEl;\n        if (ref.focus) ref.focus()\n        else if (ref.focusInput) ref.focusInput.focus()\n        else if (ref.inputRef) ref.inputRef.current.focus()\n    }\n\n    getCellStyleClasses() {\n        let styleClasses = [];\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            if (this.context.modifiedRows[this.props.column.rowIndex].includes(\n                this.props.elem.fields_index\n            )) {\n                styleClasses.push(\"unsaved-modification\");\n            }\n        } else {\n            styleClasses.push('l-card');\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_CARDS) {\n                if (this.disabled()) styleClasses.push(\"disabled-input\")\n                else if (this.context.modified.includes(this.props.elem.name))\n                    styleClasses.push(\"unsaved-modification\");\n            }\n        }\n        return styleClasses;\n    }\n\n    getInput() {\n        return <this.inputState.inputComponent\n            // autoFocus={this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE ? true : undefined}\n            onChange={(e) => {\n                if (!this.inputState.onChangeUpdateAssert(e)) return;\n                this.onChangeUpdate(e);\n                this.inputState.postOnChange(e);\n            }}\n            ref={this.onInputRef}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue() || \"\"}\n            {...this.inputState.inputProps}/>;\n    }\n\n    onChangeUpdate(e) {\n        this.update({[this.dataKey]: e.target.value});\n        this.setState({});\n    }\n\n    onInputRef(ref) {\n        this.inputEl = ref;\n        if (ref && this.tabIndexMatch()) this.focus();\n    }\n\n    onKeyDown = (event) => null;\n\n    onRef(ref) {\n        const onClick = () => {\n            this.container.onclick = (event) => {\n                if (!this.disabled()) {\n                    Object.assign(this.upController.globals, {\n                        currentInputRowIndex: Object.assign({rowIndex: 0}, this.props.column).rowIndex,\n                        currentInputTabIndex: this.props.tabIndex,\n                        currentInputWindowType: this.props[constants.URL_PARAM_WINDOW_TYPE],\n                        currentInputAHRefName: this.upController.actionHandler.refName,\n                    });\n                    if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL\n                        && !this.props.editing_mode\n                    ) this.upController.history.replaceState({editing_mode: true});\n                }\n            }\n        }\n        if (ref) {\n            this.container = ref;\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n                this.container = ref.closest(\"td\");\n                onClick();\n            }\n            else if (\n                this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL ||\n                this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_INSERT\n            ) onClick();\n        }\n        this.setCellStyle(this.container);\n    }\n\n    setCellStyle(ref) {\n        if (ref) {\n            let classes = this.getCellStyleClasses();\n            this.styleClasses.forEach(item => {ref.classList.remove(item)});\n            classes.forEach(item => {ref.classList.add(item)});\n        }\n    }\n\n    submit() {\n        this.upController.actionHandler.submit({\n            cellInfo: {rowIndex: this.props.column.rowIndex}});\n    }\n\n    tabIndexMatch() {\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE &&\n            this.props.column.rowIndex !== this.upController.globals.currentInputRowIndex\n        ) return false;\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === this.upController.globals.currentInputWindowType &&\n            this.upController.actionHandler.refName === this.upController.globals.currentInputAHRefName &&\n            this.props.tabIndex === this.upController.globals.currentInputTabIndex\n        ) return true;\n        return false;\n    }\n\n    update(values) {\n        this.upController.actionHandler.update({\n            values: values, elem: this.props.elem, col: this.props.column,\n            windowType: this.props[constants.URL_PARAM_WINDOW_TYPE]});\n    }\n\n    render(hide_label=this.props.hide_label) {\n        if (!this.state.ready) return null;\n        if (this.container) this.setCellStyle(this.container);\n        return <Labeled {...this.props}\n            hide_label={hide_label || this.props.hide_label}\n            elem={this.props.elem} isFilled={this.filled()}>\n            <div\n                className={this.ex.classNames.default(this.wrapperClasses)}\n                onKeyDown={this.onKeyDown}\n                ref={this.onRef}>\n                    {this.inputState.inputOnly ? this.getInput() :\n                        this.props.editing_mode && !this.disabled() ?\n                            this.getInput() : this.innerHTML()}\n            </div>\n        </Labeled>\n    }\n}\n\n\nexport class LeafComponentInputChoices extends LeafComponentInput {\n    static requiredModules = [\"prDropdown\"].concat(LeafComponentInput.requiredModules);\n    constructor(props) {\n        super(props);\n        this.wrapperClasses.push(\"l-ChoiceListFieldElement\");\n        this.state = {\n            ...this.state,\n            hidden_value: null\n        }\n\n        this.dataKeyHidden = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index_hidden\n            : props.elem.name + \"Hidden\";\n\n        this.getInput = this.getInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n    }\n\n    onKeyDown = (e) => {\n        if (e.key === \"Enter\" && this.inputEl.getOverlay()) e.stopPropagation();\n    }\n\n    getValue() {\n        return {\n            text: super.getValue(),\n            value: this.getValueByName(this.dataKeyHidden)};\n    }\n\n    getInput() {\n        return <this.ex.prDropdown.Dropdown\n            onChange={(e) => {\n                if (e.originalEvent.ctrlKey || e.originalEvent.altKey) return;\n                this.update({[this.dataKey]: e.value,\n                    [this.dataKeyHidden]: e.value});\n                    this.setState({});\n            }}\n            optionLabel=\"text\"\n            options={this.options}\n            ref={this.onInputRef}\n            showClear={this.props.elem.field_options.allowBlank}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue().value}/>\n    }\n\n    innerHTML() {\n        let v = super.getValue() || \"\\u00a0\";\n        return <div style={{whiteSpace: \"nowrap\"}}>{v}</div>\n    }\n}\n","import { URL_PARAM_USER_LANGUAGE, PARAM_TYPE_WINDOW } from './constants';\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\nimport { initReactI18next } from \"react-i18next\";\n\n\nexport const TransInit = (context, next) => {\n    const detector = new LanguageDetector();\n    detector.addDetector({\n        name: \"LinoLanguageDetector\",\n        lookup: (options) => {\n            return context.value[URL_PARAM_USER_LANGUAGE];\n        },\n        cacheUserLanguage(lng, options) {\n            context.fillPlaceHolder(PARAM_TYPE_WINDOW, URL_PARAM_USER_LANGUAGE, lng);\n            context.history.replaceByType({[URL_PARAM_USER_LANGUAGE]: lng},\n                PARAM_TYPE_WINDOW, false, true);\n        }\n    });\n\n    i18n\n    .use(HttpApi)\n    .use(detector)\n    .use(initReactI18next)\n    .init({\n        debug: false,\n        load: \"languageOnly\",\n        fallbackLng: window.Lino.i18nFallbackLng,\n        keySeparator: false,\n        interpolation: {\n          escapeValue: false // react already safes from xss\n        },\n        react: {\n            useSuspense: true\n        },\n        backend: {\n            loadPath: \"/static/react/locales/{{lng}}/{{ns}}.json\",\n            // addPath: \"/static/react/locales/{{lng}}/{{ns}}.json\"\n        },\n        detection: {\n            order: [\"queryString\", \"cookie\", \"LinoLanguageDetector\", \"localStorage\"],\n            lookupQuerystring: URL_PARAM_USER_LANGUAGE,\n            lookupCookie: URL_PARAM_USER_LANGUAGE,\n            lookupLocalStorage: URL_PARAM_USER_LANGUAGE,\n            // lookupSessionStorage: URL_PARAM_USER_LANGUAGE\n            caches: [\"LinoLanguageDetector\", \"localStorage\", \"cookie\"],\n        }\n    });\n\n    next(i18n);\n}\n\n\nexport default i18n;\n","// LinoWebCam.tsx\n/** @module LinoWebCam */\n\nexport const name: string = \"LinoWebCam\";\n\n// @ts-ignore\nimport * as React from 'react';\n// @ts-ignore\nimport PropTypes from 'prop-types';\nimport * as t from './types';\nimport { RegisterImportPool, getExReady, URLContextType } from \"./Base\";\n\n// @ts-ignore\nimport Webcam from \"react-webcam\";\n\nlet ex; const exModulePromises = ex = {\n    // @ts-ignore\n    prButton: import(/* webpackChunkName: \"prButton_LinoWebCam\" */\"primereact/button\"),\n    // @ts-ignore\n    prOverlayPanel: import(/* webpackChunkName: \"prOverlayPanel_LinoWebCam\" */\"primereact/overlaypanel\"),\n    // @ts-ignore\n    prInputNumber: import(/* webpackChunkName: \"prInputNumber_LinoWebCam\" */\"primereact/inputnumber\"),\n    // @ts-ignore\n    prInputSwitch: import(/* webpackChunkName: \"prInputSwitch_LinoWebCam\" */\"primereact/inputswitch\"),\n    // @ts-ignore\n    lcu: import(/* webpackChunkName: \"LinoComponentUtils_LinoWebCam\" */\"./LinoComponentUtils\"),\n    // @ts-ignore\n    i18n: import(/* webpackChunkName: \"i18n_LinoWebCam\" */\"./i18n\"),\n};RegisterImportPool(ex);\n\ntype WebcamState = {\n    err_msg?: null | string;\n    deviceId?: null | string;\n    devices?: string[];\n}\n\ntype WCReferences = {\n    capture?: React.MouseEventHandler<HTMLElement>;\n    props?: LinoWebCamProps;\n    self?: CamController;\n    setState?: Function;\n    state?: WebcamState;\n    switchCamera?: React.MouseEventHandler<HTMLElement>;\n    webcamRef?: React.RefObject<Webcam>;\n}\n\ninterface CamController {\n    buildMediaConstraints(): MediaTrackConstraints;\n    mediaTrackConstraints: MediaTrackConstraints;\n    store: WCReferences;\n    settings: t.WebcamSettings;\n    settingsMod: t.WebcamSettings;\n}\n\nclass CamController implements CamController {\n    static buildReferences = (store: WCReferences): WCReferences => {\n        store.webcamRef = React.useRef(null);\n        store.capture = React.useCallback(\n            (event) => {\n                store.props.captureDone(store.webcamRef.current.getScreenshot());\n            },\n        [store.webcamRef]);\n\n        const [state, setState] = React.useState<WebcamState>({\n            err_msg: null, deviceId: null, devices: []});\n\n        store.state = state;\n        store.setState = React.useCallback((st: WebcamState) =>\n            setState((old: WebcamState) => Object.assign({}, old, st)), []);\n\n        store.switchCamera = React.useCallback(\n            event => {\n                let i = (state.devices.indexOf(state.deviceId) + 1) % state.devices.length;\n                store.setState({deviceId: state.devices[i]});\n            },\n        []);\n        return store;\n    }\n\n    constructor(store: WCReferences) {\n        this.store = store;\n        this.buildMediaConstraints();\n    }\n\n    buildMediaConstraints(): MediaTrackConstraints {\n        const constraints: MediaTrackConstraints = {};\n        this.settings = window.App.getSettings().webcam;\n        if (this.settings !== undefined) {\n            constraints.height = this.settings.height;\n            constraints.width = this.settings.width;\n        } else {\n            constraints.height = this.store.props.height * devicePixelRatio;\n            constraints.width = this.store.props.width * devicePixelRatio;\n            this.settings = Object.assign({}, constraints as t.WebcamSettings, {pixelRatio: devicePixelRatio, mirrored: true});\n            window.App.setSettings({webcam: this.settings});\n        }\n        this.settingsMod = {...this.settings};\n        if (this.store.state.deviceId) constraints.deviceId = this.store.state.deviceId\n        else constraints.facingMode = \"environment\";\n        this.mediaTrackConstraints = constraints;\n        return constraints;\n    }\n}\n\ntype LinoWebCamProps = {\n    captureDone: (data: string) => void;\n    height: number;\n    width: number;\n}\n\ntype CamSettingsProps = {CC: CamController};\n\nconst CamSettings: React.FC<CamSettingsProps> = (props) => {\n    const {settings, settingsMod} = props.CC;\n    const [mirrored, setMirrored] = React.useState<boolean>(settings.mirrored);\n    const localEx = getExReady(ex, [\"prInputNumber\", \"prInputSwitch\", \"lcu\", \"i18n\"]);\n    const getInput = React.useCallback(\n        ({label, max = null, min, onValueChange, suffix, value}) => (<div>\n            <localEx.lcu.Labeled elem={{label: label}}>\n                <localEx.prInputNumber.InputNumber buttonLayout=\"horizontal\"\n                    max={max} min={min} onValueChange={onValueChange}\n                    showButtons={true} suffix={suffix} value={value}/>\n            </localEx.lcu.Labeled></div>), [localEx]);\n    return !localEx.ready ? null : <>\n        {// TODO: interpolation translate\n            getInput({label: 'Height (# > 512)', max: props.CC.store.props.height,\n            min: 512, onValueChange: (e) => Object.assign(settingsMod,\n                {height: e.value * settingsMod.pixelRatio}),\n            suffix: 'px', value: settings.height / settings.pixelRatio})}\n        <br/>\n        {getInput({label: 'Width (# > 512)', max: props.CC.store.props.width,\n            min: 512, onValueChange: (e) => Object.assign(settingsMod,\n                {width: e.value * settingsMod.pixelRatio}),\n            suffix: 'px', value: settings.width / settings.pixelRatio})}\n        <br/>\n        {getInput({label: 'Pixel ratio (# > 1)', min: 1, onValueChange: (e) => {\n                Object.assign(settingsMod, {\n                    height: (settingsMod.height / settingsMod.pixelRatio) * e.value,\n                    width: (settingsMod.width / settingsMod.pixelRatio) * e.value,\n                    pixelRatio: e.value});\n            }, suffix: 'dpr', value: settings.pixelRatio})}\n        <br/>\n        <div>\n            <localEx.lcu.Labeled elem={{label: localEx.i18n.t(\"Mirrored\")}}>\n                <localEx.prInputSwitch.InputSwitch\n                    checked={mirrored}\n                    onChange={e => {\n                        setMirrored(e.value);\n                        Object.assign(settingsMod, {mirrored: e.value});\n                    }}/>\n            </localEx.lcu.Labeled>\n        </div>\n    </>\n};CamSettings.propTypes = {CC: PropTypes.instanceOf(CamController).isRequired};\n\ntype CamActionsProps = {CC: CamController};\n\nconst CamActions: React.FC<CamActionsProps> = (props) => {\n    const opRef = React.useRef(null);\n    const buttonStyle = {background: \"white\", color: \"black\",\n        borderRadius: \"50%\", width: \"5ch\", height: \"5ch\", margin: \"5px\"};\n    const localEx = getExReady(ex, [\"prButton\", \"prOverlayPanel\"]);\n    return !localEx.ready ? null : <><localEx.prButton.Button\n        icon=\"pi pi-camera\"\n        onClick={props.CC.store.capture}\n        style={buttonStyle}/>\n    {props.CC.store.state.devices.length > 1 &&\n        <localEx.prButton.Button\n            icon=\"pi pi-undo\"\n            onClick={props.CC.store.switchCamera}\n            style={buttonStyle}/>}\n    <localEx.prButton.Button\n        icon=\"pi pi-cog\"\n        onClick={e => opRef.current.toggle(e)}\n        style={buttonStyle}/>\n    <div onKeyDown={e => e.stopPropagation()}>\n        <localEx.prOverlayPanel.OverlayPanel\n            onHide={e => {\n                // @ts-ignore\n                document.activeElement.blur();\n                window.App.setSettings({webcam: props.CC.settingsMod});\n                props.CC.buildMediaConstraints();\n                props.CC.store.setState({});\n            }}\n            onShow={e => opRef.current.align()}\n            ref={opRef}\n            showCloseIcon={true}>\n            <CamSettings CC={props.CC}/>\n        </localEx.prOverlayPanel.OverlayPanel>\n    </div></>\n};CamActions.propTypes = {CC: PropTypes.instanceOf(CamController).isRequired};\n\nexport const LinoWebCam: React.FC = (props: LinoWebCamProps) => {\n    const store: React.RefObject<WCReferences> = React.useRef({props: props});\n    CamController.buildReferences(store.current);\n\n    const { state, setState } = store.current;\n\n    React.useEffect(() => {\n        // @ts-ignore\n        document.activeElement.blur();\n        store.current.self = new CamController(store.current);\n        navigator.mediaDevices.enumerateDevices().then(devs => setState(\n            {devices: devs.filter(\n                ({kind}) => kind === \"videoinput\").map(d => d.deviceId)}));\n    }, []);\n\n    const { self } = store.current;\n\n    return !state.devices.length ? null : <>\n        <div style={{position: 'absolute'}}>{state.err_msg}</div>\n        <Webcam\n            audio={false}\n            forceScreenshotSourceSize={true}\n            height={self.settings.height / self.settings.pixelRatio}\n            mirrored={self.settings.mirrored}\n            onUserMedia={uM => {\n                if (state.deviceId === null)\n                    setState({deviceId: uM.getVideoTracks()[0].getSettings().deviceId})}}\n            onUserMediaError={exempt => {\n                if (state.err_msg === null) setState({err_msg:\n                    \"Please allow camera access to take a photo.\"})}}\n            ref={store.current.webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={self.mediaTrackConstraints}\n            width={self.settings.width / self.settings.pixelRatio}\n            />\n        <div\n            style={{position: \"absolute\", bottom: \"40px\", left: \"50%\",\n                transform: \"translate(-50%, 0)\"}}>\n            <CamActions CC={self}/>\n        </div>\n    </>\n}\n\n\nLinoWebCam.propTypes = {\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    captureDone: PropTypes.func.isRequired,\n}\n"],"names":["name","ex","classNames","queryString","prDropdown","prInputText","maintainTableWidth","elem","count","ctx","undefined","this","keys","Object","flexs","length","forEach","key","tbl","document","getElementById","getElementsByClassName","getBoundingClientRect","width","Array","from","querySelectorAll","el","classList","join","includes","style","setProperty","RegisterImportPool","Labeled","label","children","hide_label","isFilled","localEx","getExReady","ready","_jsxs","React","className","default","title","assign","value","quicktip","help_text","_jsx","propTypes","PropTypes","isRequired","ABCComponent","getValueByName","props","context","constants","param_values","rows","column","rowIndex","data","LeafComponentBase","Component","constructor","super","filled","getValue","wrapperClasses","dataKey","fields_index","upController","urlParams","controller","c","bind","innerHTML","setLeafRef","dangerous","v","JSON","stringify","dangerouslySetInnerHTML","__html","input","type","dataContext","actorID","ref","requiredModules","iPool","contextType","DataContextType","propTypesFromLinoLayout","editing_mode","tabIndex","defaultProps","LeafComponentDelayedValue","liveUpdate","params","mk","state","mt","update","masterRelate","hasOwnContext","actionHandler","masterRelateForSlave","data_url","actor_id","packId","shouldComponentUpdate","getData","prepare","val","delayed","hasOwnProperty","onReady","delayed_value_url","globals","panels","setState","nextProps","nextState","componentDidUpdate","prevProps","prevState","componentWillUnmount","silentFetch","path","defaultParams","then","concat","LeafComponentInput","onKeyDown","event","styleClasses","disabled","focus","getCellStyleClasses","getInput","onChangeUpdate","onInputRef","onRef","setCellStyle","submit","tabIndexMatch","inputState","inputComponent","InputText","inputOnly","inputProps","onChangeUpdateAssert","postOnChange","editable","row","last_item","meta","disable_editing","disabled_fields","inputEl","focusInput","inputRef","current","modifiedRows","push","modified","onChange","e","target","onClick","container","onclick","currentInputRowIndex","currentInputTabIndex","currentInputWindowType","currentInputAHRefName","refName","history","replaceState","closest","classes","item","remove","add","cellInfo","values","col","windowType","render","LeafComponentInputChoices","getOverlay","stopPropagation","hidden_value","dataKeyHidden","fields_index_hidden","text","Dropdown","originalEvent","ctrlKey","altKey","optionLabel","options","showClear","field_options","allowBlank","whiteSpace","TransInit","next","detector","LanguageDetector","addDetector","lookup","URL_PARAM_USER_LANGUAGE","cacheUserLanguage","lng","fillPlaceHolder","PARAM_TYPE_WINDOW","replaceByType","i18n","HttpApi","use","initReactI18next","init","debug","load","fallbackLng","window","Lino","i18nFallbackLng","keySeparator","interpolation","escapeValue","react","useSuspense","backend","loadPath","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","caches","prButton","prOverlayPanel","prInputNumber","prInputSwitch","lcu","CamController","store","buildMediaConstraints","constraints","settings","App","getSettings","webcam","height","devicePixelRatio","pixelRatio","mirrored","setSettings","settingsMod","deviceId","facingMode","mediaTrackConstraints","buildReferences","webcamRef","useRef","capture","useCallback","captureDone","getScreenshot","useState","err_msg","devices","st","old","switchCamera","i","indexOf","CamSettings","CC","setMirrored","max","min","onValueChange","suffix","InputNumber","buttonLayout","showButtons","t","InputSwitch","checked","instanceOf","CamActions","opRef","buttonStyle","background","color","borderRadius","margin","Button","icon","toggle","OverlayPanel","onHide","activeElement","blur","onShow","align","showCloseIcon","LinoWebCam","useEffect","self","navigator","mediaDevices","enumerateDevices","devs","filter","kind","map","d","position","audio","forceScreenshotSourceSize","onUserMedia","uM","getVideoTracks","onUserMediaError","exempt","screenshotFormat","videoConstraints","bottom","left","transform","number","func"],"sourceRoot":""}