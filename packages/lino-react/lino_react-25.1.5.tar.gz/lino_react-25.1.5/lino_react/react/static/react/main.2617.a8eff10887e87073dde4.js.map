{"version":3,"file":"main.2617.a8eff10887e87073dde4.js","mappings":"kXAAO,MAAMA,EAAO,qBASpB,IAAIC,EAA6BA,EAAK,CAClCC,WAAY,oCACZC,YAAa,wDACbC,WAAY,0GACZC,YAAa,uFAIV,SAASC,EAAmBC,EAAMC,GACrC,IAAIC,EACoBA,OAAXC,IAATH,EAA0BA,EACnBI,KACX,IAAIC,EAAOC,OAAOD,KAAKH,EAAIK,aACIJ,IAAVF,EAAsBI,EAAKG,SAAWP,EAAQI,EAAKG,OAAS,IAE7EH,EAAKI,SAAQC,IACT,IAAIC,EAAMC,SAASC,eAAeH,GAC7BI,uBAAuB,eAC5B,GAAmB,IAAfH,EAAIH,OAAc,EAClBG,EAAMA,EAAI,IACMI,wBAAwBC,MAAQJ,SAC3CE,uBAAuB,iBAAiB,GACxCC,wBAAwBC,MACjBd,EAAIK,MAAMG,IAClBO,MAAMC,KAAKP,EAAIQ,iBACX,uBAAuBV,SAAQW,IACvBH,MAAMC,KAAKE,EAAGC,WAAWC,KAAK,KAC7BC,SAAS,gBAAgBH,EAAGI,MACxBC,YAAY,eAAgB,OAAO,GAG5D,IAGZ,EA7BEC,EAAAA,EAAAA,oBAAmBhC,GAgCd,MAAMiC,EAAUA,EACnBC,QAAO5B,OAAM6B,WACbC,cAAY,EACZC,YAAU,MAEV,MAAMC,GAAUC,EAAAA,EAAAA,YAAWvC,EAAI,CAAC,eAEhC,OADAkC,EAAQA,GAAS5B,EAAK4B,MACdI,EAAQE,OAAeC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAP,SAAA,EACxCC,GAAcF,IAASO,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAP,SAAA,EACpCM,EAAAA,EAAAA,MAAA,SACIE,UAAWL,EAAQrC,WAAW2C,QAC1B,UAAW,mBACX,CAAC,qBAAsBP,IAE3BQ,MACIjC,OAAOkC,OAAO,CAAC,EAAGxC,EAAKyC,OAAS,CAAC,GAAGC,UACjC1C,EAAK2C,UAAUd,SAAA,CAAED,EAAM,QAClCgB,EAAAA,EAAAA,KAAA,YAEHf,KAZmB,IAaP,EAIrBF,EAAQkB,UAAY,CAChBjB,MAAOkB,IAAAA,OACP9C,KAAM8C,IAAAA,OAAiBC,WACvBjB,WAAYgB,IAAAA,KACZf,SAAUe,IAAAA,KACVjB,SAAUiB,IAAAA,QAAkBC,YAQzB,MAAMC,EACT,qBAAOC,EAAe,KAACxD,EAAI,MAAEyD,EAAK,QAAEC,IAChC,OAAID,EAAME,EAAAA,yBAAqCA,EAAAA,mBACpCD,EAAQE,aAAa5D,GACzByD,EAAME,EAAAA,yBAAqCA,EAAAA,kBAC5CD,EAAQG,KAAKJ,EAAMK,OAAOC,UAAU/D,GACpCyD,EAAME,EAAAA,yBAAqCA,EAAAA,kBACvCD,EAAQ1D,GAAQ0D,EAAQM,KAAKhE,EAC3C,EAIG,MAAMiE,UAA0BC,EAAAA,UAgCnCC,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAcjBY,OAAS,KAAQ,CAAC,GAAI,UAAM3D,GAAWoB,SAASnB,KAAK2D,YAbjD3D,KAAK4D,eAAiB,GACtB5D,KAAK6D,QAAUf,EAAME,EAAAA,yBAAqCA,EAAAA,kBACpDF,EAAMlD,KAAKkE,aAAehB,EAAMlD,KAAKP,KAC3CW,KAAK+D,aAAejB,EAAMkB,UAAUC,WACpCjE,KAAKkE,EAAIpB,EAAMkB,UAAUC,WAEzBjE,KAAK0D,OAAS1D,KAAK0D,OAAOS,KAAKnE,MAC/BA,KAAK2D,SAAW3D,KAAK2D,SAASQ,KAAKnE,MACnCA,KAAK6C,eAAiB7C,KAAK6C,eAAesB,KAAKnE,MAC/CA,KAAKoE,UAAYpE,KAAKoE,UAAUD,KAAKnE,MACrCA,KAAKqE,WAAarE,KAAKqE,WAAWF,KAAKnE,KAC3C,CAIA6C,cAAAA,CAAexD,GACX,OAAOuD,EAAaC,eAAe,CAC/BxD,KAAMA,EAAMyD,MAAO9C,KAAK8C,MAAOC,QAAS/C,KAAK+C,SACrD,CAEAY,QAAAA,GACI,OAAO3D,KAAK6C,eAAe7C,KAAK6D,QACpC,CAEAO,SAAAA,CAAUE,EAAWlD,EAAM,CAAC,GACxB,IAAImD,EAAIvE,KAAK2D,YAAc,IAE3B,OADIY,aAAarE,SAAQqE,EAAIC,KAAKC,UAAUF,IACxCD,GACO9B,EAAAA,EAAAA,KAAA,OAAKpB,MAAOA,EAAOsD,wBAAyB,CAACC,OAAQJ,MAErD/B,EAAAA,EAAAA,KAAA,OAAKpB,MAAOA,EAAMK,SAAE8C,GAEnC,CAEAF,UAAAA,EAAW,MAACO,GAAM,EAAK,KAAEC,EAAK,IAAM,CAAC,GAC7B7E,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAChDhD,KAAK+D,aAAae,YAAYT,WAAW,CACrChF,KAAe,UAATwF,EAAmB7E,KAAK+E,QACxB/E,KAAK8C,MAAMlD,KAAKP,KAAM2F,IAAKhF,KAAM4E,MAAOA,EAAOC,KAAMA,GACvE,EAzESvB,EACF2B,gBAAkB,CAAC,cADjB3B,EAEF4B,MAAQ5F,EAFNgE,EAGF6B,YAAcC,EAAAA,gBAHZ9B,EAIF+B,wBAA0B,CAC7BlC,OAAQT,IAAAA,OACR4C,aAAc5C,IAAAA,KACdhB,WAAYgB,IAAAA,KACZ,CAACM,EAAAA,uBAAkCN,IAAAA,MAAgB,CAC/CM,EAAAA,kBACAA,EAAAA,mBACAA,EAAAA,kBACAA,EAAAA,qBACAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,sBAEJuC,SAAU7C,IAAAA,OAAiBC,YAjBtBW,EAoBFb,UAAY,IACZa,EAAkB+B,wBACrBzF,KAAM8C,IAAAA,OAAiBC,WACvBqB,UAAWtB,IAAAA,OAAiBC,YAvBvBW,EA0BFkC,aAAe,CAClBF,cAAc,EACd5D,YAAY,EACZ,CAACsB,EAAAA,uBAAkCA,EAAAA,qBAgDpC,MAAMyC,UAAkCnC,EAU3CE,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAgEjB4C,WAAcC,KACQ,OAAdA,EAAOC,IACND,EAAOC,KAAO5F,KAAK6F,MAAMD,IAAMD,EAAOG,KAAO9F,KAAK6F,MAAMC,KAC3D9F,KAAK+F,QAAQ,EAlEf,MAAMC,EAAe,CAAC,EACjBlD,EAAMmD,eAAe/F,OAAOkC,OAAO4D,EACpChG,KAAK+D,aAAamC,cAAcC,wBACpCnG,KAAK6F,MAAQ,IACN7F,KAAK6F,MAAOxD,MAAO,KAAM+D,SAAU,QAASJ,GACnDhG,KAAK+E,QAAUjC,EAAMlD,KAAKyG,WAAavD,EAAMlD,KAAKP,KAAK8B,SAAS,KAC1D2B,EAAMlD,KAAKP,KAAO,GAAGyD,EAAMkB,UAAUsC,UAAUxD,EAAMlD,KAAKP,QAEhEW,KAAKuG,sBAAwBvG,KAAKuG,sBAAsBpC,KAAKnE,MAC7DA,KAAKwG,QAAUxG,KAAKwG,QAAQrC,KAAKnE,MACjCA,KAAK2D,SAAW3D,KAAK2D,SAASQ,KAAKnE,MACnCA,KAAK+F,OAAS/F,KAAK+F,OAAO5B,KAAKnE,KACnC,CAEA,aAAMyG,SACIhD,MAAMgD,UACZ,IAAIC,EAAMjD,MAAME,WACX3D,KAAK+D,aAAaL,OAAOgD,KAC9B1G,KAAK2G,QAAUD,EAAIE,eAAe,qBACtC,CAEAC,OAAAA,GACI,IAAIH,EAAMjD,MAAME,WACZ3D,KAAK2G,SACA3G,KAAK8C,MAAMmD,eAAejG,KAAKqE,WAAW,CAACQ,KAAM,UACtD7E,KAAKwG,QAAQE,EAAII,mBACjB9G,KAAK+D,aAAagD,QAAQC,OAAOhH,KAAK+E,SAAW/E,MAEjDA,KAAKiH,SAAS,CAAC5E,MAAOqE,GAE9B,CAEAH,qBAAAA,CAAsBW,EAAWC,EAAWpE,GACxC,OAAK/C,KAAK2G,QACH3G,KAAK6F,MAAMxD,QAAU8E,EAAU9E,OAA+B,OAArBrC,KAAK6F,MAAMxD,OACvDoB,MAAME,WAAWmD,oBAAsB9G,KAAK6F,MAAMO,SAF5BpG,KAAK6F,MAAMxD,QAAU8E,EAAU9E,KAG7D,CAEA+E,kBAAAA,CAAmBC,EAAWC,GACtBtH,KAAK2G,QACD3G,KAAK6F,MAAMO,WAAa3C,MAAME,WAAWmD,oBACzC9G,KAAKiH,SAAS,CAAC5E,MAAO,OACtBrC,KAAK+F,UAEN/F,KAAKiH,SAAS,CAAC5E,MAAOoB,MAAME,YACvC,CAEA4D,oBAAAA,UACWvH,KAAK+D,aAAagD,QAAQC,OAAOhH,KAAK+E,QACjD,CAEApB,QAAAA,GACI,OAAO3D,KAAK6F,MAAMxD,KACtB,CAEAmE,OAAAA,CAAQJ,GACJpG,KAAK+D,aAAamC,cAAcsB,YAAY,CACxCC,KAAM,GAAGrB,KAAYpG,KAAKV,GAAGE,YAAY0C,QAAQuC,UAAUzE,KAAK+D,aAAamC,cAAcwB,qBAC5FC,MAAMtE,IACLrD,KAAKiH,SAAS,CAAC5E,MAAOgB,EAAKA,KAAM+C,SAAUA,GAAU,GAE7D,CAQAL,MAAAA,GACI/F,KAAKwG,QAAQ/C,MAAME,WAAWmD,kBAClC,EAnFSrB,EACFR,gBAAkB,CAAC,eAAe2C,OAAOtE,EAAkB2B,iBADzDQ,EAEFhD,UAAY,IACZa,EAAkBb,UACrBwD,cAAevD,IAAAA,KAAeC,YAJzB8C,EAMFD,aAAe,IACflC,EAAkBkC,aACrBS,eAAe,GA+EhB,MAAM4B,UAA2BvE,EAEpCE,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAwGjBgF,UAAaC,GAAU,KAvGnB/H,KAAKgI,aAAe,CAChB,iBACA,SACA,wBAGJhI,KAAKiI,SAAWjI,KAAKiI,SAAS9D,KAAKnE,MACnCA,KAAK0D,OAAS1D,KAAK0D,OAAOS,KAAKnE,MAC/BA,KAAKkI,MAAQlI,KAAKkI,MAAM/D,KAAKnE,MAC7BA,KAAKmI,oBAAsBnI,KAAKmI,oBAAoBhE,KAAKnE,MACzDA,KAAKoI,SAAWpI,KAAKoI,SAASjE,KAAKnE,MACnCA,KAAKqI,eAAiBrI,KAAKqI,eAAelE,KAAKnE,MAC/CA,KAAKsI,WAAatI,KAAKsI,WAAWnE,KAAKnE,MACvCA,KAAKuI,MAAQvI,KAAKuI,MAAMpE,KAAKnE,MAC7BA,KAAKwI,aAAexI,KAAKwI,aAAarE,KAAKnE,MAC3CA,KAAKyI,OAASzI,KAAKyI,OAAOtE,KAAKnE,MAC/BA,KAAK0I,cAAgB1I,KAAK0I,cAAcvE,KAAKnE,MAC7CA,KAAK+F,OAAS/F,KAAK+F,OAAO5B,KAAKnE,KACnC,CAEA,aAAMyG,GACFzG,KAAK2I,WAAa,CACdC,eAAgB5I,KAAKV,GAAGI,YAAYmJ,UACpCC,WAAW,EACXC,WAAY,CAAC,EACbC,qBAAuBjB,IAAW,EAClCkB,aAAelB,GAAW,KAElC,CAEAE,QAAAA,GACI,GAAIjI,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,kBAChD,OAAO,EACX,GAAIhD,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChD,OAAO,EACX,IAAKhD,KAAK8C,MAAMlD,KAAKsJ,SAAU,OAAO,EACtC,GAAIlJ,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,kBAA6B,CAC7E,IAAImG,EAAMnJ,KAAK+C,QAAQG,KAAKlD,KAAK8C,MAAMK,OAAOC,UAC1CgG,EAAYD,EAAIA,EAAI/I,OAAS,GAGjC,SAAKgJ,IAAcA,EAAUC,UAEzBF,EAAIA,EAAI/I,OAAS,KAEd+I,EAAIA,EAAI/I,OAAS,GAAGJ,KAAK8C,MAAMlD,KAAKP,QAAS,GACxD,CACI,QAAIW,KAAK+C,QAAQM,KAAKiG,kBACftJ,KAAK+C,QAAQM,KAAKkG,gBAAgBvJ,KAAK8C,MAAMlD,KAAKP,QAAS,EAE1E,CAEA6I,KAAAA,GACI,IAAIlD,EAAMhF,KAAKwJ,QACXxE,EAAIkD,MAAOlD,EAAIkD,QACVlD,EAAIyE,WAAYzE,EAAIyE,WAAWvB,QAC/BlD,EAAI0E,UAAU1E,EAAI0E,SAASC,QAAQzB,OAChD,CAEAC,mBAAAA,GACI,IAAIH,EAAe,GAenB,OAdIhI,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,kBAC5ChD,KAAK+C,QAAQ6G,aAAa5J,KAAK8C,MAAMK,OAAOC,UAAUjC,SACtDnB,KAAK8C,MAAMlD,KAAKkE,eAEhBkE,EAAa6B,KAAK,yBAGtB7B,EAAa6B,KAAK,UACd7J,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAC5ChD,KAAKiI,WAAYD,EAAa6B,KAAK,kBAC9B7J,KAAK+C,QAAQ+G,SAAS3I,SAASnB,KAAK8C,MAAMlD,KAAKP,OACpD2I,EAAa6B,KAAK,0BAGvB7B,CACX,CAEAI,QAAAA,GACI,OAAO5F,EAAAA,EAAAA,KAAA,KAAMmG,WAAWC,eAAc,CAElCmB,SAAWC,IACFhK,KAAK2I,WAAWK,qBAAqBgB,KAC1ChK,KAAKqI,eAAe2B,GACpBhK,KAAK2I,WAAWM,aAAae,GAAE,EAEnChF,IAAKhF,KAAKsI,WACVlH,MAAO,CAACR,MAAO,QACf2E,SAAUvF,KAAK8C,MAAMyC,SACrBlD,MAAOrC,KAAK2D,YAAc,MACtB3D,KAAK2I,WAAWI,YAC5B,CAEAV,cAAAA,CAAe2B,GACXhK,KAAK+F,OAAO,CAAC,CAAC/F,KAAK6D,SAAUmG,EAAEC,OAAO5H,QACtCrC,KAAKiH,SAAS,CAAC,EACnB,CAEAqB,UAAAA,CAAWtD,GACPhF,KAAKwJ,QAAUxE,EACXA,GAAOhF,KAAK0I,iBAAiB1I,KAAKkI,OAC1C,CAIAK,KAAAA,CAAMvD,GACF,MAAMkF,EAAUA,KACZlK,KAAKmK,UAAUC,QAAWrC,IACjB/H,KAAKiI,aACN/H,OAAOkC,OAAOpC,KAAK+D,aAAagD,QAAS,CACrCsD,qBAAsBnK,OAAOkC,OAAO,CAACgB,SAAU,GAAIpD,KAAK8C,MAAMK,QAAQC,SACtEkH,qBAAsBtK,KAAK8C,MAAMyC,SACjCgF,uBAAwBvK,KAAK8C,MAAME,EAAAA,uBACnCwH,sBAAuBxK,KAAK+D,aAAamC,cAAcuE,UAEvDzK,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAC5ChD,KAAK8C,MAAMwC,cACjBtF,KAAK+D,aAAa2G,QAAQC,aAAa,CAACrF,cAAc,IAC5D,CACH,EAEDN,IACAhF,KAAKmK,UAAYnF,EACbhF,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChDhD,KAAKmK,UAAYnF,EAAI4F,QAAQ,MAC7BV,KAGAlK,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAChDhD,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,oBAClDkH,KAENlK,KAAKwI,aAAaxI,KAAKmK,UAC3B,CAEA3B,YAAAA,CAAaxD,GACT,GAAIA,EAAK,CACL,IAAI6F,EAAU7K,KAAKmI,sBACnBnI,KAAKgI,aAAa3H,SAAQyK,IAAS9F,EAAI/D,UAAU8J,OAAOD,EAAK,IAC7DD,EAAQxK,SAAQyK,IAAS9F,EAAI/D,UAAU+J,IAAIF,EAAK,GACpD,CACJ,CAEArC,MAAAA,GACIzI,KAAK+D,aAAamC,cAAcuC,OAAO,CACnCwC,SAAU,CAAC7H,SAAUpD,KAAK8C,MAAMK,OAAOC,WAC/C,CAEAsF,aAAAA,GACI,OACI1I,KAAK8C,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChDhD,KAAK8C,MAAMK,OAAOC,WAAapD,KAAK+D,aAAagD,QAAQsD,wBAGzDrK,KAAK8C,MAAME,EAAAA,yBAAqChD,KAAK+D,aAAagD,QAAQwD,wBAC1EvK,KAAK+D,aAAamC,cAAcuE,UAAYzK,KAAK+D,aAAagD,QAAQyD,uBACtExK,KAAK8C,MAAMyC,WAAavF,KAAK+D,aAAagD,QAAQuD,qBAG1D,CAEAvE,MAAAA,CAAOmF,GACHlL,KAAK+D,aAAamC,cAAcH,OAAO,CACnCmF,OAAQA,EAAQtL,KAAMI,KAAK8C,MAAMlD,KAAMuL,IAAKnL,KAAK8C,MAAMK,OACvDiI,WAAYpL,KAAK8C,MAAME,EAAAA,wBAC/B,CAEAqI,MAAAA,CAAO3J,EAAW1B,KAAK8C,MAAMpB,YACzB,OAAK1B,KAAK6F,MAAM/D,OACZ9B,KAAKmK,WAAWnK,KAAKwI,aAAaxI,KAAKmK,YACpC3H,EAAAA,EAAAA,KAACjB,EAAO,IAAKvB,KAAK8C,MACrBpB,WAAYA,GAAc1B,KAAK8C,MAAMpB,WACrC9B,KAAMI,KAAK8C,MAAMlD,KAAM+B,SAAU3B,KAAK0D,SAASjC,UAC/Ce,EAAAA,EAAAA,KAAA,OACIP,UAAWjC,KAAKV,GAAGC,WAAW2C,QAAQlC,KAAK4D,gBAC3CkE,UAAW9H,KAAK8H,UAChB9C,IAAKhF,KAAKuI,MAAM9G,SACXzB,KAAK2I,WAAWG,WACb9I,KAAK8C,MAAMwC,eAAiBtF,KAAKiI,WADRjI,KAAKoI,WAERpI,KAAKoE,iBAXb,IAclC,EA1LSyD,EACF5C,gBAAkB,CAAC,eAAe2C,OAAOtE,EAAkB2B,iBA6L/D,MAAMqG,UAAkCzD,EAE3CrE,WAAAA,CAAYV,GACRW,MAAMX,GAAO,KAgBjBgF,UAAakC,IACK,UAAVA,EAAE1J,KAAmBN,KAAKwJ,QAAQ+B,cAAcvB,EAAEwB,iBAAiB,EAhBvExL,KAAK4D,eAAeiG,KAAK,4BACzB7J,KAAK6F,MAAQ,IACN7F,KAAK6F,MACR4F,aAAc,MAGlBzL,KAAK0L,cAAgB5I,EAAME,EAAAA,yBAAqCA,EAAAA,kBAC1DF,EAAMlD,KAAK+L,oBACX7I,EAAMlD,KAAKP,KAAO,SAExBW,KAAKoI,SAAWpI,KAAKoI,SAASjE,KAAKnE,MACnCA,KAAK2D,SAAW3D,KAAK2D,SAASQ,KAAKnE,MACnCA,KAAKoE,UAAYpE,KAAKoE,UAAUD,KAAKnE,KACzC,CAMA2D,QAAAA,GACI,MAAO,CACHiI,KAAMnI,MAAME,WACZtB,MAAOrC,KAAK6C,eAAe7C,KAAK0L,eACxC,CAEAtD,QAAAA,GACI,OAAO5F,EAAAA,EAAAA,KAAA,KAAMlD,GAAGG,WAAWoM,SAAQ,CAC/B9B,SAAWC,IACHA,EAAE8B,cAAcC,SAAW/B,EAAE8B,cAAcE,SAC/ChM,KAAK+F,OAAO,CAAC,CAAC/F,KAAK6D,SAAUmG,EAAE3H,MAC3B,CAACrC,KAAK0L,eAAgB1B,EAAE3H,QACxBrC,KAAKiH,SAAS,CAAC,GAAE,EAEzBgF,YAAY,OACZC,QAASlM,KAAKkM,QACdlH,IAAKhF,KAAKsI,WACV6D,UAAWnM,KAAK8C,MAAMlD,KAAKwM,cAAcC,WACzCjL,MAAO,CAACR,MAAO,QACf2E,SAAUvF,KAAK8C,MAAMyC,SACrBlD,MAAOrC,KAAK2D,WAAWtB,OAC/B,CAEA+B,SAAAA,GACI,IAAIG,EAAId,MAAME,YAAc,IAC5B,OAAOnB,EAAAA,EAAAA,KAAA,OAAKpB,MAAO,CAACkL,WAAY,UAAU7K,SAAE8C,GAChD,EAjDS+G,EACFrG,gBAAkB,CAAC,cAAc2C,OAAOC,EAAmB5C,gB,qHC3b/D,MAAMsH,EAAYA,CAACxJ,EAASyJ,KAC/B,MAAMC,EAAW,IAAIC,EAAAA,EACrBD,EAASE,YAAY,CACjBtN,KAAM,uBACNuN,OAASV,GACEnJ,EAAQV,MAAMwK,EAAAA,yBAEzBC,iBAAAA,CAAkBC,EAAKb,GACnBnJ,EAAQiK,gBAAgBC,EAAAA,kBAAmBJ,EAAAA,wBAAyBE,GACpEhK,EAAQ2H,QAAQwC,cAAc,CAAC,CAACL,EAAAA,yBAA0BE,GACtDE,EAAAA,mBAAmB,GAAO,EAClC,IAGJE,EAAAA,GAAAA,IACKC,EAAAA,GACJC,IAAIZ,GACJY,IAAIC,EAAAA,kBACJC,KAAK,CACFC,OAAO,EACPC,KAAM,eACNC,YAAaC,OAAOC,KAAKC,gBACzBC,cAAc,EACdC,cAAe,CACbC,aAAa,GAEfC,MAAO,CACHC,aAAa,GAEjBC,QAAS,CACLC,SAAU,6CAGdC,UAAW,CACPC,MAAO,CAAC,cAAe,SAAU,uBAAwB,gBACzDC,kBAAmB1B,EAAAA,wBACnB2B,aAAc3B,EAAAA,wBACd4B,mBAAoB5B,EAAAA,wBAEpB6B,OAAQ,CAAC,uBAAwB,eAAgB,aAIzDlC,EAAKW,EAAAA,GAAK,EAId,EAAeA,EAAI,E,+9BCtDN,EAAA9N,KAAe,eAI5B,mBAEA,aACA,UACA,UACA,aAEA,IAAIC,EAA6BA,EAAK,CAElCE,YAAa,QAAF,wBAA2D,SAEtEmP,eAAgB,QAAF,wBAA8D,SAE5EC,gBAAiB,QAAF,wBAA+D,SAE9EzB,KAAM,QAAF,wBAAoD,WAC1D,IAAA7L,oBAAmBhC,GAGrB,MAAauP,UAAqB,EAAAhH,mBAa9B,WAAArE,CAAYV,GACRW,MAAMX,GAgCV,KAAAgF,UAAaC,IAGT,GAFI,CAAC,QAAS,eAAe5G,SAAS4G,EAAM+G,OAAS9O,KAAKwJ,QAAQ+B,cAC9DxD,EAAMyD,kBACN,CAAC,YAAa,WAAWrK,SAAS4G,EAAM+G,MAAO,CAC/C,GAAI9O,KAAKwJ,UAAYxJ,KAAKwJ,QAAQ+B,aACzBvL,KAAK6F,MAAM3C,KAAK9C,QAAQJ,KAAK+O,WAAW/O,KAAK6F,MAAM7C,EAAUgM,mBAClEhP,KAAKwJ,QAAQyF,YACV,IAAKjP,KAAK6F,MAAMqJ,YAAa,CAChC,IAAIC,EAAQnP,KAAKoP,SAASC,gBAAgB1F,QAAQ2F,cAAc,kBAChE,GAAIH,EAAO,CACP,IAAI,IAACI,EAAG,OAAEC,GAAUxP,KAAKoP,SAASC,gBAAgB1F,QAAQhJ,wBACtD8O,EAAYN,EAAMxO,wBAElB8O,EAAUF,IAAMA,EAAKJ,EAAMO,gBAAe,GACrCD,EAAUD,OAASA,GAAQL,EAAMO,gBAAe,EAC7D,CACJ,CACA3H,EAAMyD,iBACV,GAGJ,KAAAmE,aAAe,CAAC7E,EAAMoB,KAClB,IAAI0D,EAAoB,iBAAT9E,EAAoBA,EAAKc,KAAOd,EAC/C,OAAO,mCAAM8E,GAAK,IAAe,EAGrC,KAAAb,WAAa,CAACc,EAAeC,KACzB9P,KAAKiE,WAAW8L,QAChB/P,KAAKiE,WAAa,IAAIjE,KAAKV,GAAGsP,gBAAgB1M,QAE9C,IAAI8N,GADJF,EAAQA,GAAS9P,KAAK6F,MAAM7C,EAAUiN,oBAChBjQ,KAAK6F,MAAM7C,EAAUiN,iBACrCjQ,KAAK6F,MAAM7C,EAAUkN,iBACrBlQ,KAAK6F,MAAM7C,EAAUiN,iBAC3BjQ,KAAK+D,aAAamC,cAAcsB,YAAY,CACxCC,KAAMzH,KAAKmQ,WAAWN,EAAOG,EAAOF,GACpCM,OAAQpQ,KAAKiE,WAAWmM,SACzBzI,MAAMtE,IACL,IAAIH,EAAOG,EAAKH,KACZlD,KAAK6F,MAAM3C,KAAK9C,SAChB8C,EAAOA,EAAKmN,QAAOlH,GAAoB,KAAbA,EAAIyC,MAA6B,OAAdzC,EAAI9G,SAErDa,EAAOlD,KAAK6F,MAAM3C,KAAK0E,OAAO1E,IAOzBlD,KAAK8C,MAAMlD,KAAKwM,eAAiB,CAAC,GAAGkE,aACe,IAAjDpN,EAAKmN,QAAOlH,GAAOA,EAAIyC,MAAQiE,IAAOzP,QACtC8C,EAAKqN,QAAQ,CAAC3E,KAAMiE,EAAOxN,MAAOwN,IAG1C7P,KAAKiH,SAAS,CACV,CAACjE,EAAUgM,kBAAmBa,EAC9B,CAAC7M,EAAUiN,iBAAkBH,EAC7BjQ,MAAOwD,EAAKxD,MAAOqP,aAAa,EAChChM,KAAMA,GACR,GACJ,EA1FFlD,KAAK6F,MAAQ,IACN7F,KAAK6F,MACRhG,MAAO,IACP,CAACmD,EAAUgM,kBAAmB,GAC9B,CAAChM,EAAUiN,iBAAkB,GAC7B,CAACjN,EAAUkN,iBAAkB,EAC7BhB,aAAa,EACbhM,KAAM,GACNb,MAAO,MAGXrC,KAAKwQ,gBAAiB,EAEtBxQ,KAAK+O,WAAa/O,KAAK+O,WAAW5K,KAAKnE,MACvCA,KAAKoI,SAAWpI,KAAKoI,SAASjE,KAAKnE,MACnCA,KAAK2P,aAAe3P,KAAK2P,aAAaxL,KAAKnE,MAC3CA,KAAK8H,UAAY9H,KAAK8H,UAAU3D,KAAKnE,KACzC,CAEA,OAAA6G,GACI,GAAI7G,KAAKwQ,iBAAmBxQ,KAAKyQ,MAAO,MAAMC,MAAM,wBACpD,IAAInM,EAAIvE,KAAK2D,WACb3D,KAAKiH,SAAS,CACV,CAACjE,EAAUgM,kBAAmBzK,EAAEqH,KAChC,CAAC5I,EAAUiN,iBAAkBjQ,KAAK8C,MAAMkB,UACpChB,EAAUiN,iBACd5N,MAAOkC,IAEXvE,KAAKiE,WAAa,IAAIjE,KAAKV,GAAGsP,gBAAgB1M,OAClD,CAgEA,QAAAkG,CAASuI,EAAc,CAAC,GACpB,OAAyB,OAArB3Q,KAAK6F,MAAMxD,MAAuB,KAC/B,wBAAC,UAAMuO,SAAQ,KAAC,wBAAC5Q,KAAKV,GAAGqP,eAAeE,aAAY,CACvDgC,eAAiB7G,IACgB,UAAzBA,EAAE8B,cAAcjH,MAAoB7E,KAAK6F,MAAM3C,KAAK9C,OACpDJ,KAAKwJ,QAAQyF,QAGjBjP,KAAK6F,MAAM3C,KAAO,GAClBlD,KAAK+O,WAAW/E,EAAE6F,MAAO7P,KAAK6F,MAAM7C,EAAUiN,kBAAiB,EAEnEa,UAAU,EACVC,MAAM,OACNpB,aAAc3P,KAAK2P,aACnB5F,SAAUC,GAAKhK,KAAKiH,SAAS,CACzB5E,MAAOnC,OAAOkC,OAAOpC,KAAK6F,MAAMxD,MAAO,CACnCuJ,KAAM5B,EAAE3H,MAAOA,MAAO,OAC1Ba,KAAM,GACN,CAACF,EAAUiN,iBAAkBjQ,KAAK8C,MAAMkB,UACpChB,EAAUiN,mBAElBe,SAAUhR,KAAKgR,SACfC,OAAQ,KACAjR,KAAKkR,cACLlR,KAAKkR,YAAY9P,MAAM+P,WAAa,SACxC,EAEJnM,IAAKhF,KAAKsI,WACV8I,aAAa,QACbC,YAAarR,KAAK6F,MAAM3C,KACxBqC,SAAUvF,KAAK8C,MAAMyC,SACrBlD,MAAOrC,KAAK6F,MAAMxD,MAAMuJ,KACxB0F,uBAAwB,CACpBC,SAAU,GACVC,MAAM,EACNC,QAASzR,KAAK6F,MAAMqJ,YACpBwC,oBAAsB3J,IAClB,IAAI4J,EAAI3R,KAAK6F,MAAM7C,EAAUiN,iBACzB0B,EAAI5J,EAAM6J,MAAQ,KAAO5R,KAAK6F,MAAMqJ,aACjClP,KAAK6F,MAAMhG,MAAQ8R,IAEtB3R,KAAKiH,SAAS,CAACiI,aAAa,IAC5BlP,KAAK+O,WACD/O,KAAK6F,MAAM7C,EAAUgM,kBAAmB2C,EAAI,IACpD,EAEJ3M,IAAKhE,GAAMhB,KAAKoP,SAAWpO,EAC3BoQ,aAAc,QACdhQ,MAAO,CAACyQ,SAAU,YAElBlB,IACH3Q,KAAKwQ,gBAAkBxQ,KAAK8C,MAAMlD,KAAKwM,cAAcC,YAC/CrM,KAAK6F,MAAMxD,MAAMuJ,MACjB,6BAAGtL,IAAKN,KAAK6F,MAAMiM,MAAO9M,IAAKhE,GAAMhB,KAAKkR,YAAclQ,EAC3DiB,UAAW,yBACXiI,QAASlK,KAAKyQ,MACdrP,MAAO,CAAC+P,WAAY,UAAWY,OAAQ,aAEnD,EAtKJ,iBACW,EAAA9M,gBAAkB,CAAC,iBAAkB,mBAAmB2C,OAAO,EAAAC,mBAAmB5C,iBAClF,EAAAC,MAAQhF,OAAOkC,OAAO9C,EAAI,EAAAuI,mBAAmB3C,MAAM8M,QA2K9D,MAAaC,UAAoBpD,EAmB7B,aAAMpI,SACIhD,MAAMgD,UACZzG,KAAKV,GAAG6N,KAAOnN,KAAKV,GAAG6N,KAAKjL,OAChC,CAEA,WAAAsB,CAAYV,GACRW,MAAMX,GACN9C,KAAK4D,eAAiB,CAAC,sBACvB5D,KAAKgI,aAAe,GAEpBhI,KAAKmQ,WAAanQ,KAAKmQ,WAAWhM,KAAKnE,MACvCA,KAAKoI,SAAWpI,KAAKoI,SAASjE,KAAKnE,MACnCA,KAAK2D,SAAW3D,KAAK2D,SAASQ,KAAKnE,MACnCA,KAAKgR,SAAWhR,KAAKgR,SAAS7M,KAAKnE,KACvC,CAEA,QAAAoI,GACI,OAAO3E,MAAM2E,SAAS,CAClB8J,YAAalS,KAAKV,GAAG6N,KAAKgF,EAAE,gBAC5B/Q,MAAO,CACHR,MAAOZ,KAAK8C,MAAMsP,KAAO,YAASrS,EAClCsS,YAAarS,KAAK8C,MAAMsP,KAAO,WAAQrS,EACvCuS,WAAYtS,KAAK8C,MAAMsP,KAAO,WAAQrS,IAGlD,CAEA,QAAA4D,GACI,MAAO,CAACiI,KAAM5L,KAAK8C,MAAMkB,UAAUhB,EAAUgM,kBACzC3M,MAAO,KACf,CAEA,UAAA8N,CAAWN,EAAOG,EAAOF,GACrB,MAAO,WAAW9P,KAAK8C,MAAMkB,UAAUsC,UAAUtG,KAAK8C,MAAMkB,UAAUuO,WAClEvS,KAAKV,GAAGE,YAAY0C,QAAQuC,UAAUvE,OAAOkC,OAAOpC,KAAK+D,aACpDmC,cAAcsM,sBAAuB,CAClC,CAACxP,EAAUgM,kBAAmBa,EAC9B,CAAC7M,EAAUkN,iBAAkBF,EAC7B,CAAChN,EAAUiN,iBAAkBH,MAE7C,CAEA,QAAAkB,CAASjJ,GACL,IAAI0K,EAAK1K,EAAM1F,MAAMA,MACjB6B,EAAIlE,KAAK+D,aACbG,EAAEwG,QAAQgI,SAAS,CACfC,SAAU,QAAQ3S,KAAK8C,MAAMkB,UAAUsC,UAAUtG,KAAK8C,MAAMkB,UAAUuO,WAAWE,IACjF9M,OAAQzB,EAAEgC,cAAcsM,uBAEhC,CAEA,MAAAnH,GACI,OAAKrL,KAAK6F,MAAM/D,MACT9B,KAAKoI,WADkB,IAElC,EAzEJ,gBACW,EAAAnD,gBAAkB,CAAC,cAAe,QAAQ2C,OAAOiH,EAAa5J,iBAE9D,EAAAxC,UAAY,IACZoM,EAAapM,UAChB2P,KAAM,UAAUQ,MAGb,EAAApN,aAAe,IACfqJ,EAAarJ,aAChBF,cAAc,EACd1F,KAAM,CAAC,EACP2F,SAAU,EACV6M,MAAM,EACN,CAACpP,EAAU6P,uBAAwB7P,EAAU8P,oB","sources":["webpack://lino_react/./lino_react/react/components/LinoComponentUtils.jsx","webpack://lino_react/./lino_react/react/components/i18n.js","webpack://lino_react/./lino_react/react/components/AutoComplete.tsx"],"sourcesContent":["export const name = \"LinoComponentUtils\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { RegisterImportPool, getExReady, Component, DataContextType } from \"./Base\";\n\nimport * as constants from \"./constants\";\n\n\nlet ex; const exModulePromises = ex = {\n    classNames: import(/* webpackChunkName: \"classNames_LinoComponentUtils\" */\"classnames\"),\n    queryString: import(/* webpackChunkName: \"queryString_LinoComponentUtils\" */\"query-string\"),\n    prDropdown: import(/* webpackChunkName: \"prDropdown_LinoComponentUtils\" */\"primereact/dropdown\"),\n    prInputText: import(/* webpackChunkName: \"prInputText_LinoComponentUtils\" */\"primereact/inputtext\"),\n};RegisterImportPool(ex);\n\n\nexport function maintainTableWidth(elem, count) {\n    let ctx;\n    if (elem !== undefined) ctx = elem\n    else ctx = this;\n    let keys = Object.keys(ctx.flexs),\n        fo_conditional = count !== undefined ? keys.length === count : keys.length > 1;\n    if (fo_conditional) {\n        keys.forEach(key => {\n            var tbl = document.getElementById(key)\n                .getElementsByClassName('p-datatable');\n            if (tbl.length === 1) {\n                tbl = tbl[0]\n                let width = tbl.getBoundingClientRect().width / document\n                    .getElementsByClassName('layout-topbar')[0]\n                    .getBoundingClientRect().width;\n                if (width > ctx.flexs[key]) {\n                    Array.from(tbl.querySelectorAll(\n                        '.p-datatable table')).forEach(el => {\n                            if (Array.from(el.classList).join(' ')\n                                .includes('p-datatable')) el.style\n                                    .setProperty('table-layout', 'auto');\n                        });\n                }\n            }\n        });\n    }\n}\n\n// export const Labeled = (props) => {\nexport const Labeled = ({\n    label, elem, children,\n    hide_label= false,\n    isFilled= false,\n}) => {\n    const localEx = getExReady(ex, ['classNames']);\n    label = label || elem.label;\n    return !localEx.ready ? null : <React.Fragment>\n        {!hide_label && label && <React.Fragment>\n            <label\n                className={localEx.classNames.default(\n                    \"l-label\", \"l-span-clickable\",\n                    {\"l-label--unfilled\": !isFilled},\n                )}\n                title={\n                    Object.assign({}, elem.value || {}).quicktip\n                    || elem.help_text}>{label}:</label>\n            <br/>\n        </React.Fragment>}\n        {children}\n    </React.Fragment>\n}\n\n\nLabeled.propTypes = {\n    label: PropTypes.string,\n    elem: PropTypes.object.isRequired,\n    hide_label: PropTypes.bool,\n    isFilled: PropTypes.bool,\n    children: PropTypes.element.isRequired,\n}\n// Labeled.defaultProps = {\n//     hide_label: false,\n//     isFilled: false,\n// }\n\n\nexport class ABCComponent {\n    static getValueByName({name, props, context}) {\n        if (props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return context.param_values[name];\n        return props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? context.rows[props.column.rowIndex][name]\n            : props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS\n                ? context[name] : context.data[name];\n    }\n}\n\n\nexport class LeafComponentBase extends Component {\n    static requiredModules = [\"classNames\"];\n    static iPool = ex;\n    static contextType = DataContextType;\n    static propTypesFromLinoLayout = {\n        column: PropTypes.object,\n        editing_mode: PropTypes.bool,\n        hide_label: PropTypes.bool,\n        [constants.URL_PARAM_WINDOW_TYPE]: PropTypes.oneOf([\n            constants.WINDOW_TYPE_TABLE,\n            constants.WINDOW_TYPE_DETAIL,\n            constants.WINDOW_TYPE_CARDS,\n            constants.WINDOW_TYPE_GALLERIA,\n            constants.WINDOW_TYPE_INSERT,\n            constants.WINDOW_TYPE_PARAMS,\n            constants.WINDOW_TYPE_UNKNOWN,\n        ]),\n        tabIndex: PropTypes.number.isRequired,\n    }\n\n    static propTypes = {\n        ...LeafComponentBase.propTypesFromLinoLayout,\n        elem: PropTypes.object.isRequired,\n        urlParams: PropTypes.object.isRequired,\n    }\n\n    static defaultProps = {\n        editing_mode: false,\n        hide_label: false,\n        [constants.URL_PARAM_WINDOW_TYPE]: constants.WINDOW_TYPE_UNKNOWN,\n    }\n\n    constructor(props) {\n        super(props);\n        this.wrapperClasses = []\n        this.dataKey = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index : props.elem.name;\n        this.upController = props.urlParams.controller;\n        this.c = props.urlParams.controller;\n\n        this.filled = this.filled.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.getValueByName = this.getValueByName.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n        this.setLeafRef = this.setLeafRef.bind(this);\n    }\n\n    filled = () => (![\"\", null, undefined].includes(this.getValue()));\n\n    getValueByName(name) {\n        return ABCComponent.getValueByName({\n            name: name, props: this.props, context: this.context});\n    }\n\n    getValue() {\n        return this.getValueByName(this.dataKey);\n    }\n\n    innerHTML(dangerous, style={}) {\n        let v = this.getValue() || \"\\u00a0\";\n        if (v instanceof Object) v = JSON.stringify(v);\n        if (dangerous) {\n            return <div style={style} dangerouslySetInnerHTML={{__html: v}}/>\n        } else {\n            return <div style={style}>{v}</div>\n        }\n    }\n\n    setLeafRef({input=false, type=\"\"} = {}) {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL)\n            this.upController.dataContext.setLeafRef({\n                name: type === 'slave' ? this.actorID\n                    : this.props.elem.name, ref: this, input: input, type: type});\n    }\n}\n\n\nexport class LeafComponentDelayedValue extends LeafComponentBase {\n    static requiredModules = [\"queryString\"].concat(LeafComponentBase.requiredModules);\n    static propTypes = {\n        ...LeafComponentBase.propTypes,\n        hasOwnContext: PropTypes.bool.isRequired\n    }\n    static defaultProps = {\n        ...LeafComponentBase.defaultProps,\n        hasOwnContext: false\n    }\n    constructor(props) {\n        super(props);\n        const masterRelate = {}\n        if (!props.hasOwnContext) Object.assign(masterRelate,\n            this.upController.actionHandler.masterRelateForSlave());\n        this.state = {\n            ...this.state, value: null, data_url: null, ...masterRelate}\n        this.actorID = props.elem.actor_id || (props.elem.name.includes('.')\n            ? props.elem.name : `${props.urlParams.packId}.${props.elem.name}`);\n\n        this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n        this.getData = this.getData.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        await super.prepare();\n        let val = super.getValue();\n        if (!this.upController.filled(val)) return;\n        this.delayed = val.hasOwnProperty('delayed_value_url');\n    }\n\n    onReady() {\n        let val = super.getValue();\n        if (this.delayed) {\n            if (!this.props.hasOwnContext) this.setLeafRef({type: \"slave\"});\n            this.getData(val.delayed_value_url);\n            this.upController.globals.panels[this.actorID] = this;\n        } else {\n            this.setState({value: val});\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, context) {\n        if (!this.delayed) return this.state.value !== nextState.value;\n        return this.state.value !== nextState.value || (this.state.value !== null &&\n            super.getValue().delayed_value_url !== this.state.data_url);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.delayed) {\n            if (this.state.data_url !== super.getValue().delayed_value_url) {\n                this.setState({value: null});\n                this.update();\n            }\n        } else this.setState({value: super.getValue()});\n    }\n\n    componentWillUnmount() {\n        delete this.upController.globals.panels[this.actorID];\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    getData(data_url) {\n        this.upController.actionHandler.silentFetch({\n            path: `${data_url}?${this.ex.queryString.default.stringify(this.upController.actionHandler.defaultParams())}`\n        }).then((data) => {\n            this.setState({value: data.data, data_url: data_url});\n        });\n    }\n\n    liveUpdate = (params) => {\n        if (params.mk === null ||\n            (params.mk === this.state.mk && params.mt === this.state.mt)\n        ) this.update();\n    }\n\n    update() {\n        this.getData(super.getValue().delayed_value_url);\n    }\n}\n\n\nexport class LeafComponentInput extends LeafComponentBase {\n    static requiredModules = [\"prInputText\"].concat(LeafComponentBase.requiredModules);\n    constructor(props) {\n        super(props);\n        this.styleClasses = [\n            \"disabled-input\",\n            \"l-card\",\n            \"unsaved-modification\",\n        ]\n\n        this.disabled = this.disabled.bind(this);\n        this.filled = this.filled.bind(this);\n        this.focus = this.focus.bind(this);\n        this.getCellStyleClasses = this.getCellStyleClasses.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.onChangeUpdate = this.onChangeUpdate.bind(this);\n        this.onInputRef = this.onInputRef.bind(this);\n        this.onRef = this.onRef.bind(this);\n        this.setCellStyle = this.setCellStyle.bind(this);\n        this.submit = this.submit.bind(this);\n        this.tabIndexMatch = this.tabIndexMatch.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        this.inputState = {\n            inputComponent: this.ex.prInputText.InputText,\n            inputOnly: false,\n            inputProps: {},\n            onChangeUpdateAssert: (event) => (true),\n            postOnChange: (event) => (null),\n        }\n    }\n\n    disabled() {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS)\n            return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return false;\n        if (!this.props.elem.editable) return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            let row = this.context.rows[this.props.column.rowIndex],\n                last_item = row[row.length - 1];\n\n            // No meta, assume not disabled;\n            if (!last_item || !last_item.meta) return false;\n            // disable_editing set to true;\n            if (row[row.length - 2]) return true;\n            // check name in the disabled_fields meta;\n            return row[row.length - 3][this.props.elem.name] || false;\n        } else {\n            if (this.context.data.disable_editing) return true;\n            return this.context.data.disabled_fields[this.props.elem.name] || false;\n        }\n    }\n\n    focus() {\n        let ref = this.inputEl;\n        if (ref.focus) ref.focus()\n        else if (ref.focusInput) ref.focusInput.focus()\n        else if (ref.inputRef) ref.inputRef.current.focus()\n    }\n\n    getCellStyleClasses() {\n        let styleClasses = [];\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            if (this.context.modifiedRows[this.props.column.rowIndex].includes(\n                this.props.elem.fields_index\n            )) {\n                styleClasses.push(\"unsaved-modification\");\n            }\n        } else {\n            styleClasses.push('l-card');\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_CARDS) {\n                if (this.disabled()) styleClasses.push(\"disabled-input\")\n                else if (this.context.modified.includes(this.props.elem.name))\n                    styleClasses.push(\"unsaved-modification\");\n            }\n        }\n        return styleClasses;\n    }\n\n    getInput() {\n        return <this.inputState.inputComponent\n            // autoFocus={this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE ? true : undefined}\n            onChange={(e) => {\n                if (!this.inputState.onChangeUpdateAssert(e)) return;\n                this.onChangeUpdate(e);\n                this.inputState.postOnChange(e);\n            }}\n            ref={this.onInputRef}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue() || \"\"}\n            {...this.inputState.inputProps}/>;\n    }\n\n    onChangeUpdate(e) {\n        this.update({[this.dataKey]: e.target.value});\n        this.setState({});\n    }\n\n    onInputRef(ref) {\n        this.inputEl = ref;\n        if (ref && this.tabIndexMatch()) this.focus();\n    }\n\n    onKeyDown = (event) => null;\n\n    onRef(ref) {\n        const onClick = () => {\n            this.container.onclick = (event) => {\n                if (!this.disabled()) {\n                    Object.assign(this.upController.globals, {\n                        currentInputRowIndex: Object.assign({rowIndex: 0}, this.props.column).rowIndex,\n                        currentInputTabIndex: this.props.tabIndex,\n                        currentInputWindowType: this.props[constants.URL_PARAM_WINDOW_TYPE],\n                        currentInputAHRefName: this.upController.actionHandler.refName,\n                    });\n                    if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL\n                        && !this.props.editing_mode\n                    ) this.upController.history.replaceState({editing_mode: true});\n                }\n            }\n        }\n        if (ref) {\n            this.container = ref;\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n                this.container = ref.closest(\"td\");\n                onClick();\n            }\n            else if (\n                this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL ||\n                this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_INSERT\n            ) onClick();\n        }\n        this.setCellStyle(this.container);\n    }\n\n    setCellStyle(ref) {\n        if (ref) {\n            let classes = this.getCellStyleClasses();\n            this.styleClasses.forEach(item => {ref.classList.remove(item)});\n            classes.forEach(item => {ref.classList.add(item)});\n        }\n    }\n\n    submit() {\n        this.upController.actionHandler.submit({\n            cellInfo: {rowIndex: this.props.column.rowIndex}});\n    }\n\n    tabIndexMatch() {\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE &&\n            this.props.column.rowIndex !== this.upController.globals.currentInputRowIndex\n        ) return false;\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === this.upController.globals.currentInputWindowType &&\n            this.upController.actionHandler.refName === this.upController.globals.currentInputAHRefName &&\n            this.props.tabIndex === this.upController.globals.currentInputTabIndex\n        ) return true;\n        return false;\n    }\n\n    update(values) {\n        this.upController.actionHandler.update({\n            values: values, elem: this.props.elem, col: this.props.column,\n            windowType: this.props[constants.URL_PARAM_WINDOW_TYPE]});\n    }\n\n    render(hide_label=this.props.hide_label) {\n        if (!this.state.ready) return null;\n        if (this.container) this.setCellStyle(this.container);\n        return <Labeled {...this.props}\n            hide_label={hide_label || this.props.hide_label}\n            elem={this.props.elem} isFilled={this.filled()}>\n            <div\n                className={this.ex.classNames.default(this.wrapperClasses)}\n                onKeyDown={this.onKeyDown}\n                ref={this.onRef}>\n                    {this.inputState.inputOnly ? this.getInput() :\n                        this.props.editing_mode && !this.disabled() ?\n                            this.getInput() : this.innerHTML()}\n            </div>\n        </Labeled>\n    }\n}\n\n\nexport class LeafComponentInputChoices extends LeafComponentInput {\n    static requiredModules = [\"prDropdown\"].concat(LeafComponentInput.requiredModules);\n    constructor(props) {\n        super(props);\n        this.wrapperClasses.push(\"l-ChoiceListFieldElement\");\n        this.state = {\n            ...this.state,\n            hidden_value: null\n        }\n\n        this.dataKeyHidden = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index_hidden\n            : props.elem.name + \"Hidden\";\n\n        this.getInput = this.getInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n    }\n\n    onKeyDown = (e) => {\n        if (e.key === \"Enter\" && this.inputEl.getOverlay()) e.stopPropagation();\n    }\n\n    getValue() {\n        return {\n            text: super.getValue(),\n            value: this.getValueByName(this.dataKeyHidden)};\n    }\n\n    getInput() {\n        return <this.ex.prDropdown.Dropdown\n            onChange={(e) => {\n                if (e.originalEvent.ctrlKey || e.originalEvent.altKey) return;\n                this.update({[this.dataKey]: e.value,\n                    [this.dataKeyHidden]: e.value});\n                    this.setState({});\n            }}\n            optionLabel=\"text\"\n            options={this.options}\n            ref={this.onInputRef}\n            showClear={this.props.elem.field_options.allowBlank}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue().value}/>\n    }\n\n    innerHTML() {\n        let v = super.getValue() || \"\\u00a0\";\n        return <div style={{whiteSpace: \"nowrap\"}}>{v}</div>\n    }\n}\n","import { URL_PARAM_USER_LANGUAGE, PARAM_TYPE_WINDOW } from './constants';\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\nimport { initReactI18next } from \"react-i18next\";\n\n\nexport const TransInit = (context, next) => {\n    const detector = new LanguageDetector();\n    detector.addDetector({\n        name: \"LinoLanguageDetector\",\n        lookup: (options) => {\n            return context.value[URL_PARAM_USER_LANGUAGE];\n        },\n        cacheUserLanguage(lng, options) {\n            context.fillPlaceHolder(PARAM_TYPE_WINDOW, URL_PARAM_USER_LANGUAGE, lng);\n            context.history.replaceByType({[URL_PARAM_USER_LANGUAGE]: lng},\n                PARAM_TYPE_WINDOW, false, true);\n        }\n    });\n\n    i18n\n    .use(HttpApi)\n    .use(detector)\n    .use(initReactI18next)\n    .init({\n        debug: false,\n        load: \"languageOnly\",\n        fallbackLng: window.Lino.i18nFallbackLng,\n        keySeparator: false,\n        interpolation: {\n          escapeValue: false // react already safes from xss\n        },\n        react: {\n            useSuspense: true\n        },\n        backend: {\n            loadPath: \"/static/react/locales/{{lng}}/{{ns}}.json\",\n            // addPath: \"/static/react/locales/{{lng}}/{{ns}}.json\"\n        },\n        detection: {\n            order: [\"queryString\", \"cookie\", \"LinoLanguageDetector\", \"localStorage\"],\n            lookupQuerystring: URL_PARAM_USER_LANGUAGE,\n            lookupCookie: URL_PARAM_USER_LANGUAGE,\n            lookupLocalStorage: URL_PARAM_USER_LANGUAGE,\n            // lookupSessionStorage: URL_PARAM_USER_LANGUAGE\n            caches: [\"LinoLanguageDetector\", \"localStorage\", \"cookie\"],\n        }\n    });\n\n    next(i18n);\n}\n\n\nexport default i18n;\n","export const name: string = \"AutoComplete\";\nimport * as t from './types';\n\n// @ts-ignore\nimport React from \"react\";\n// @ts-ignore\nimport PropTypes from \"prop-types\";\nimport { RegisterImportPool } from \"./Base\";\nimport { LeafComponentInput } from \"./LinoComponentUtils\";\nimport * as constants from \"./constants\";\n\nlet ex; const exModulePromises = ex = {\n    // @ts-ignore\n    queryString: import(/* webpackChunkName: \"queryString_AutoComplete\" */\"query-string\"),\n    // @ts-ignore\n    prAutoComplete: import(/* webpackChunkName: \"prAutoComplete_AutoComplete\" */\"primereact/autocomplete\"),\n    // @ts-ignore\n    AbortController: import(/* webpackChunkName: \"AbortController_AutoComplete\" */\"abort-controller\"),\n    // @ts-ignore\n    i18n: import(/* webpackChunkName: \"i18n_AutoComplete\" */\"./i18n\"),\n};RegisterImportPool(ex);\n\n\nexport class AutoComplete extends LeafComponentInput {\n    static requiredModules = ['prAutoComplete', \"AbortController\"].concat(LeafComponentInput.requiredModules);\n    static iPool = Object.assign(ex, LeafComponentInput.iPool.copy());\n\n    hasClearButton: boolean;\n    clear?: () => void;\n    props: t.LeafInputProps;\n    choicesURL?(query: string, start: number, limit: number): string;\n    clearButton?: any;\n    onSelect?(e: any): void;\n    scroller: any;\n    controller: any;\n\n    constructor(props: t.LeafInputProps) {\n        super(props);\n        this.state = {\n            ...this.state,\n            count: 999,\n            [constants.URL_PARAM_FILTER]: \"\",\n            [constants.URL_PARAM_LIMIT]: 15,\n            [constants.URL_PARAM_START]: 0,\n            lazyLoading: false,\n            rows: [],\n            value: null,\n        }\n\n        this.hasClearButton = false;\n\n        this.getChoices = this.getChoices.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.itemTemplate = this.itemTemplate.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    onReady() {\n        if (this.hasClearButton && !this.clear) throw Error(\"clear NotImplemented\");\n        let v = this.getValue();\n        this.setState({\n            [constants.URL_PARAM_FILTER]: v.text,\n            [constants.URL_PARAM_LIMIT]: this.props.urlParams[\n                constants.URL_PARAM_LIMIT],\n            value: v,\n        });\n        this.controller = new this.ex.AbortController.default();\n    }\n\n    onKeyDown = (event) => {\n        if ([\"Enter\", \"NumpadEnter\"].includes(event.code) && this.inputEl.getOverlay())\n            event.stopPropagation();\n        if (['ArrowDown', 'ArrowUp'].includes(event.code)) {\n            if (this.inputEl && !this.inputEl.getOverlay()) {\n                if (!this.state.rows.length) this.getChoices(this.state[constants.URL_PARAM_FILTER]);\n                this.inputEl.show();\n            } else if (!this.state.lazyLoading) {\n                let sItem = this.scroller.getElementRef().current.querySelector('li.p-highlight');\n                if (sItem) {\n                    let {top, bottom} = this.scroller.getElementRef().current.getBoundingClientRect();\n                    let sItemRect = sItem.getBoundingClientRect();\n\n                    if (sItemRect.top < top) sItem.scrollIntoView(true)\n                    else if (sItemRect.bottom > bottom) sItem.scrollIntoView(false);\n                }\n            }\n            event.stopPropagation();\n        }\n    }\n\n    itemTemplate = (item, options) => {\n        let i = typeof item === \"object\" ? item.text : item;\n        return <div>{i || \"\\u00a0\"}</div>\n    }\n\n    getChoices = (query: string, limit?: number) => {\n        this.controller.abort();\n        this.controller = new this.ex.AbortController.default();\n        limit = limit || this.state[constants.URL_PARAM_LIMIT];\n        let start = limit === this.state[constants.URL_PARAM_LIMIT]\n            ? this.state[constants.URL_PARAM_START]\n            : this.state[constants.URL_PARAM_LIMIT];\n        this.upController.actionHandler.silentFetch({\n            path: this.choicesURL(query, start, limit),\n            signal: this.controller.signal\n        }).then((data) => {\n            let rows = data.rows;\n            if (this.state.rows.length) {\n                rows = rows.filter(row => row.text !== \"\" && row.value !== null);\n            }\n            rows = this.state.rows.concat(rows);\n\n            /**\n             * In case of a learing combo set the non-existent query\n             * as the value (which creates a new database record on\n             *               the server against the value)\n             */\n            if ((this.props.elem.field_options || {}).allowCreate) {\n                if (rows.filter(row => row.text == query).length === 0)\n                    rows.unshift({text: query, value: query});\n            }\n\n            this.setState({\n                [constants.URL_PARAM_FILTER]: query,\n                [constants.URL_PARAM_LIMIT]: limit,\n                count: data.count, lazyLoading: false,\n                rows: rows,\n            });\n        });\n    }\n\n    getInput(customProps = {}) {\n        if (this.state.value === null) return null;\n        return <React.Fragment><this.ex.prAutoComplete.AutoComplete\n            completeMethod={(e) => {\n                if (e.originalEvent.type === 'click' && this.state.rows.length) {\n                    this.inputEl.show();\n                    return;\n                }\n                this.state.rows = [];\n                this.getChoices(e.query, this.state[constants.URL_PARAM_LIMIT]);\n            }}\n            dropdown={true}\n            field=\"text\"\n            itemTemplate={this.itemTemplate}\n            onChange={e => this.setState({\n                value: Object.assign(this.state.value, {\n                    text: e.value, value: null}),\n                rows: [],\n                [constants.URL_PARAM_LIMIT]: this.props.urlParams[\n                    constants.URL_PARAM_LIMIT],\n            })}\n            onSelect={this.onSelect}\n            onShow={() => {\n                if (this.clearButton) {\n                    this.clearButton.style.visibility = 'hidden'\n                }\n            }}\n            ref={this.onInputRef}\n            scrollHeight=\"200px\"\n            suggestions={this.state.rows}\n            tabIndex={this.props.tabIndex}\n            value={this.state.value.text}\n            virtualScrollerOptions={{\n                itemSize: 35,\n                lazy: true,\n                loading: this.state.lazyLoading,\n                onScrollIndexChange: (event) => {\n                    let l = this.state[constants.URL_PARAM_LIMIT];\n                    if (l - event.first < 15 && !this.state.lazyLoading\n                        && this.state.count > l\n                    ) {\n                        this.setState({lazyLoading: true});\n                        this.getChoices(\n                            this.state[constants.URL_PARAM_FILTER], l + 15);\n                    }\n                },\n                ref: el => this.scroller = el,\n                scrollHeight: \"195px\",\n                style: {minWidth: '30ch'},\n            }}\n            {...customProps}/>\n            {this.hasClearButton && this.props.elem.field_options.allowBlank\n                && this.state.value.text\n                && <i key={this.state.touch} ref={el => this.clearButton = el}\n                className={\"pi pi-times l-fk-clear\"}\n                onClick={this.clear}\n                style={{visibility: 'visible', cursor: \"pointer\"}}/>}\n        </React.Fragment>\n    }\n}\n\ntype QuickFilterProps = t.LeafInputProps & {\n    wide: boolean;\n}\n\nexport class QuickFilter extends AutoComplete {\n    static requiredModules = ['queryString', \"i18n\"].concat(AutoComplete.requiredModules);\n\n    static propTypes = {\n        ...AutoComplete.propTypes,\n        wide: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        ...AutoComplete.defaultProps,\n        editing_mode: true,\n        elem: {},\n        tabIndex: 0,\n        wide: false,\n        [constants.URL_PARAM_WINDOW_TYPE]: constants.WINDOW_TYPE_UNKNOWN,\n    }\n\n    props: QuickFilterProps;\n\n    async prepare() {\n        await super.prepare();\n        this.ex.i18n = this.ex.i18n.default;\n    }\n\n    constructor(props: QuickFilterProps) {\n        super(props);\n        this.wrapperClasses = [\"l-grid-quickfilter\"];\n        this.styleClasses = [];\n\n        this.choicesURL = this.choicesURL.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n    }\n\n    getInput() {\n        return super.getInput({\n            placeholder: this.ex.i18n.t(\"Quick search\"),\n            style: {\n                width: this.props.wide ? \"100%\" : undefined,\n                marginRight: this.props.wide ? \"1ch\" : undefined,\n                marginLeft: this.props.wide ? \"1ch\" : undefined,\n            }\n        })\n    }\n\n    getValue() {\n        return {text: this.props.urlParams[constants.URL_PARAM_FILTER],\n            value: null}\n    }\n\n    choicesURL(query, start, limit) {\n        return `choices/${this.props.urlParams.packId}/${this.props.urlParams.actorId}?${\n            this.ex.queryString.default.stringify(Object.assign(this.upController\n                .actionHandler.defaultStaticParams(), {\n                    [constants.URL_PARAM_FILTER]: query,\n                    [constants.URL_PARAM_START]: start,\n                    [constants.URL_PARAM_LIMIT]: limit\n                }))}`;\n    }\n\n    onSelect(event) {\n        let pk = event.value.value,\n            c = this.upController;\n        c.history.pushPath({\n            pathname: `/api/${this.props.urlParams.packId}/${this.props.urlParams.actorId}/${pk}`,\n            params: c.actionHandler.defaultStaticParams(),\n        });\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        return this.getInput();\n    }\n}\n"],"names":["name","ex","classNames","queryString","prDropdown","prInputText","maintainTableWidth","elem","count","ctx","undefined","this","keys","Object","flexs","length","forEach","key","tbl","document","getElementById","getElementsByClassName","getBoundingClientRect","width","Array","from","querySelectorAll","el","classList","join","includes","style","setProperty","RegisterImportPool","Labeled","label","children","hide_label","isFilled","localEx","getExReady","ready","_jsxs","React","className","default","title","assign","value","quicktip","help_text","_jsx","propTypes","PropTypes","isRequired","ABCComponent","getValueByName","props","context","constants","param_values","rows","column","rowIndex","data","LeafComponentBase","Component","constructor","super","filled","getValue","wrapperClasses","dataKey","fields_index","upController","urlParams","controller","c","bind","innerHTML","setLeafRef","dangerous","v","JSON","stringify","dangerouslySetInnerHTML","__html","input","type","dataContext","actorID","ref","requiredModules","iPool","contextType","DataContextType","propTypesFromLinoLayout","editing_mode","tabIndex","defaultProps","LeafComponentDelayedValue","liveUpdate","params","mk","state","mt","update","masterRelate","hasOwnContext","actionHandler","masterRelateForSlave","data_url","actor_id","packId","shouldComponentUpdate","getData","prepare","val","delayed","hasOwnProperty","onReady","delayed_value_url","globals","panels","setState","nextProps","nextState","componentDidUpdate","prevProps","prevState","componentWillUnmount","silentFetch","path","defaultParams","then","concat","LeafComponentInput","onKeyDown","event","styleClasses","disabled","focus","getCellStyleClasses","getInput","onChangeUpdate","onInputRef","onRef","setCellStyle","submit","tabIndexMatch","inputState","inputComponent","InputText","inputOnly","inputProps","onChangeUpdateAssert","postOnChange","editable","row","last_item","meta","disable_editing","disabled_fields","inputEl","focusInput","inputRef","current","modifiedRows","push","modified","onChange","e","target","onClick","container","onclick","currentInputRowIndex","currentInputTabIndex","currentInputWindowType","currentInputAHRefName","refName","history","replaceState","closest","classes","item","remove","add","cellInfo","values","col","windowType","render","LeafComponentInputChoices","getOverlay","stopPropagation","hidden_value","dataKeyHidden","fields_index_hidden","text","Dropdown","originalEvent","ctrlKey","altKey","optionLabel","options","showClear","field_options","allowBlank","whiteSpace","TransInit","next","detector","LanguageDetector","addDetector","lookup","URL_PARAM_USER_LANGUAGE","cacheUserLanguage","lng","fillPlaceHolder","PARAM_TYPE_WINDOW","replaceByType","i18n","HttpApi","use","initReactI18next","init","debug","load","fallbackLng","window","Lino","i18nFallbackLng","keySeparator","interpolation","escapeValue","react","useSuspense","backend","loadPath","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","caches","prAutoComplete","AbortController","AutoComplete","code","getChoices","URL_PARAM_FILTER","show","lazyLoading","sItem","scroller","getElementRef","querySelector","top","bottom","sItemRect","scrollIntoView","itemTemplate","i","query","limit","abort","start","URL_PARAM_LIMIT","URL_PARAM_START","choicesURL","signal","filter","allowCreate","unshift","hasClearButton","clear","Error","customProps","Fragment","completeMethod","dropdown","field","onSelect","onShow","clearButton","visibility","scrollHeight","suggestions","virtualScrollerOptions","itemSize","lazy","loading","onScrollIndexChange","l","first","minWidth","touch","cursor","copy","QuickFilter","placeholder","t","wide","marginRight","marginLeft","actorId","defaultStaticParams","pk","pushPath","pathname","bool","URL_PARAM_WINDOW_TYPE","WINDOW_TYPE_UNKNOWN"],"sourceRoot":""}