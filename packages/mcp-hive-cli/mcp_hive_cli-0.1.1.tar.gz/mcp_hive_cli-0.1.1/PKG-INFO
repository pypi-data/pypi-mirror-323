Metadata-Version: 2.2
Name: mcp-hive-cli
Version: 0.1.1
Summary: CLI tool for creating MCP agents
Home-page: https://github.com/trilogy-group/mcp-hive-app
Author: Ashish Mandal
Author-email: mandal.ashish@codenation.co.in
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: click>=8.0.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: jinja2>=3.0.0
Requires-Dist: rich>=10.0.0
Requires-Dist: python-dotenv>=0.19.0
Requires-Dist: langchain-core>=0.1.0
Requires-Dist: langchain-anthropic>=0.1.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# MCP Hive App

This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

1. Experiment (Done)

   - Check if auth settings can be passed during tool invocation - Done
     - What should be the format of the auth settings? - Let client follow the format of the security scheme
       - Do we need to pass the entire security scheme or passing api key is enough? - Let client follow the format of the security scheme
   - Check if host can be passed during tool invocation - Done

Note:

- list_tools
- get_security_schemes
-

- \_request_timeout
- \_request_auth
- \_content_type
- \_headers
- \_host_index

Conclusion:

- We will provide a dedicated client

2. MCP Client

   - Remove unnecessary input params from tools before passing to LLM like request auth, headers, etc. Openapi
     client generator add these params to each tool.
   - Ensure client can read env variables and pass host and api key to the tools

3. MCP Server

   - Setup CI/CD pipeline (Use codebuild, s3, ECR and ECS)
     - Build docker image
     - Host docker images on public ECR
     - Deploy server on ECS

4. Backend

   - Maintain template for connection details
   - Add an endpoint to generate connection details for a given hive

5. UI
   - Update connection details. Local (docker) and Remote (Endpoint + Dedicated client)
