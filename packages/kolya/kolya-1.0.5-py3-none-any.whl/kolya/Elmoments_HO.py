from numba import jit, int64, float64
from kolya import parameters
from kolya import Elmoments_SM as SM
import math

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm1(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m1 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-40*r**2*(-1+y)**6-5*r**8*(-1+y)**6+5*(-1+y)**6*(1+y**4)-4*r**6*(
        -10+60*y-150*y**2+200*y**3-145*y**4+90*y**5-29*y**6+4*y**7)+2*r**4*(
        -1+y)*(30*logy*(-1+y)**5+y*(-30+135*y-235*y**2+185*y**3-103*y**4
        +24*y**5)))/(40*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (y**5*((-1+y)**6-2*r**6*(2+13*y-6*y**2+y**3)+3*r**4*(1+4*y-7*y**2
        +2*y**3)))/(20*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-54*r**2*(-1+y)**6+6*r**10*(-1+y)**6-r**12*(-1+y)**6+(-1+y)**6*(4
        +5*y**6)+3*r**4*(-1+y)*(65+60*logy*(-1+y)**5-385*y+920*y**2-1120*y**3
        +710*y**4-202*y**5+5*y**6-25*y**7+8*y**8)+2*r**6*(120+60*logy*(-1
        +y)**6-660*y+1470*y**2-1660*y**3+945*y**4-198*y**5-37*y**6-60*y**7
        +24*y**8-4*y**9))/(240*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-490*r**2*(-1+y)**6+350*r**8*(-1+y)**6+70*r**10*(-1+y)**6-35*r**12*(
        -1+y)**6+5*r**14*(-1+y)**6+5*(-1+y)**6*(6+y**7)+7*r**4*(-1+y)*(415
        +300*logy*(-1+y)**5-2375*y+5500*y**2-6500*y**3+4000*y**4-1100*y**5
        +50*y**6+5*y**7-10*y**8+3*y**9)+7*r**6*(425+300*logy*(-1+y)**6-2250*y
        +4725*y**2-4800*y**3+2100*y**4+60*y**5-310*y**6+40*y**7-15*y**8+6*y**9
        -y**10))/(560*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-9120*r**2*(-1+y)**6+19950*r**8*(-1+y)**6-1330*r**12*(-1+y)**6+456*r**14*(
        -1+y)**6-57*r**16*(-1+y)**6+25*(-1+y)**6*(19+y**8)+6*r**4*(-1+y)*(12901
        +7980*logy*(-1+y)**5-72485*y+164920*y**2-191520*y**3+115710*y**4
        -31122*y**5+1330*y**6+190*y**7+35*y**8-55*y**9+16*y**10)+8*r**6*(8379
        +7980*logy*(-1+y)**6-42294*y+81795*y**2-69160*y**3+11970*y**4+19152*y**5
        -11172*y**6+1140*y**7+130*y**8-60*y**9+24*y**10-4*y**11))/(6400*(-1
        +y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm2(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m2 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (165*r**8*(-1+y)**6+12*logy*(8+27*r**4)*(-1+y)**6+(-1+y)**6*(-533
        +96*y+48*y**2-64*y**3+3*y**4)-24*r**2*(-1+y)**3*(43-129*y+129*y**2
        -31*y**3-16*y**4+8*y**5)+4*r**6*(14-84*y+210*y**2-64*y**3-141*y**4
        +222*y**5-121*y**6+24*y**7)+6*r**4*(-120+774*y-2097*y**2+2986*y**3
        -2432*y**4+1152*y**5-295*y**6+32*y**7))/(72*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (170*r**8*(-1+y)**6-162*r**10*(-1+y)**6+120*logy*(1+5*r**2)*(-1+y)**6
        +(-1+y)**6*(-898+120*y+60*y**2+40*y**3-60*y**4+3*y**5)-10*r**2*(
        -1+y)**3*(181-483*y+393*y**2-71*y**3+12*y**4-36*y**5+16*y**6)+10*r**6*(88
        -528*y+1320*y**2-1760*y**3+1401*y**4-636*y**5+175*y**6-36*y**7+6*y**8)
        +15*r**4*(-120+720*y-1800*y**2+2400*y**3-1830*y**4+763*y**5-120*y**6
        -21*y**7+8*y**8))/(180*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-580*r**8*(-1+y)**6-746*r**10*(-1+y)**6+315*r**12*(-1+y)**6+60*logy*(4
        +64*r**2-25*r**4+2*r**6)*(-1+y)**6+(-1+y)**6*(-2424+240*y+120*y**2
        +80*y**3+60*y**4-96*y**5+5*y**6)-10*r**2*(-1+y)**3*(265-411*y-165*y**2
        +439*y**3-96*y**4+24*y**5-56*y**6+24*y**7)+10*r**6*(264-1572*y+3894*y**2
        -5132*y**3+3789*y**4-1350*y**5+87*y**6+120*y**7-48*y**8+8*y**9)+5*r**4*(
        -371+1926*y-3915*y**2+3720*y**3-1290*y**4-528*y**5+543*y**6-6*y**7
        -111*y**8+32*y**9))/(720*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-7350*r**8*(-1+y)**6-1932*r**10*(-1+y)**6+4018*r**12*(-1+y)**6-1140*r**14*(
        -1+y)**6-840*logy*(-1-36*r**2+15*r**4)*(-1+y)**6+(-1+y)**6*(-11418
        +840*y+420*y**2+280*y**3+210*y**4+168*y**5-280*y**6+15*y**7)-84*r**2*(
        -1+y)**3*(-77+591*y-1131*y**2+737*y**3-90*y**4-18*y**5+9*y**6-19*y**7
        +8*y**8)+70*r**6*(-10+60*y-150*y**2+200*y**3-150*y**4+60*y**5+44*y**6
        -54*y**7+45*y**8-18*y**9+3*y**10)+105*r**4*(238-1548*y+4230*y**2
        -6240*y**3+5280*y**4-2472*y**5+512*y**6+5*y**7+6*y**8-15*y**9+4*y**10))/(5040*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-83650*r**8*(-1+y)**6+28224*r**10*(-1+y)**6+56462*r**12*(-1+y)**6-44312*r**14*(
        -1+y)**6+9639*r**16*(-1+y)**6-840*logy*(-8-544*r**2+279*r**4+132*r**6)*(
        -1+y)**6+(-1+y)**6*(-121749+6720*y+3360*y**2+2240*y**3+1680*y**4
        +1344*y**5+1120*y**6-1920*y**7+105*y**8)-224*r**2*(-1+y)**3*(-1413
        +6279*y-9339*y**2+5153*y**3-510*y**4-102*y**5-34*y**6+24*y**7-48*y**8
        +20*y**9)+56*r**6*(-7519+43134*y-101895*y**2+125960*y**3-84570*y**4
        +27888*y**5-2668*y**6+180*y**7-450*y**8+360*y**9-144*y**10+24*y**11)
        +42*r**4*(21261-133146*y+349605*y**2-494040*y**3+398430*y**4-176112*y**5
        +34932*y**6-1140*y**7+245*y**8+150*y**9-249*y**10+64*y**11))/(80640*(
        -1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm3(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m3 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-24*logy*(-1+y)**5+54*r**8*(-1+y)**5-2*(-1+y)**4*(13-25*y+6*y**2
        -y**3+y**4)+6*r**2*(-1+y)**2*(12-36*y+36*y**2-15*y**3-y**4+2*y**5)
        -3*r**4*(48-240*y+480*y**2-530*y**3+340*y**4-113*y**5+15*y**6)+r**6*(152
        -760*y+1520*y**2-1730*y**3+1090*y**4-353*y**5+45*y**6))/(18*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (220*r**8*(-1+y)**5-63*r**10*(-1+y)**5-12*logy*(6+5*r**2)*(-1+y)**5
        -3*(-1+y)**4*(40-64*y+12*y**2+4*y**3-y**4+y**5)+r**2*(-1+y)**2*(121
        -303*y+213*y**2-11*y**3-42*y**4-18*y**5+16*y**6)-9*r**4*(12-60*y
        +120*y**2-120*y**3+35*y**4+33*y**5-25*y**6+5*y**7)+3*r**6*(88-440*y
        +880*y**2-880*y**3+335*y**4+53*y**5-75*y**6+15*y**7))/(72*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (980*r**8*(-1+y)**5-546*r**10*(-1+y)**5+120*r**12*(-1+y)**5-120*logy*(2
        +r**2)*(-1+y)**5-2*(-1+y)**4*(238-358*y+60*y**2+20*y**3+10*y**4
        -3*y**5+3*y**6)+10*r**2*(-1+y)**2*(71-201*y+183*y**2-49*y**3-3*y**4
        -6*y**5-4*y**6+3*y**7)-75*r**4*(8-40*y+80*y**2-80*y**3+40*y**4-14*y**5
        +10*y**6-5*y**7+y**8)+5*r**6*(184-920*y+1840*y**2-1840*y**3+920*y**4
        -310*y**5+150*y**6-75*y**7+15*y**8))/(360*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (5850*r**8*(-1+y)**5-5160*r**10*(-1+y)**5+2261*r**12*(-1+y)**5-405*r**14*(
        -1+y)**5-60*logy*(20-18*r**2-75*r**4+15*r**6)*(-1+y)**5-10*(-1
        +y)**4*(261-381*y+60*y**2+20*y**3+10*y**4+6*y**5-2*y**6+2*y**7)
        +6*r**2*(-1+y)**2*(1506-4698*y+4968*y**2-1836*y**3+45*y**4+9*y**5
        -27*y**6-23*y**7+16*y**8)-15*r**4*(497-2185*y+3620*y**2-2620*y**3
        +560*y**4+188*y**5-150*y**6+150*y**7-75*y**8+15*y**9)+5*r**6*(715
        -3395*y+6340*y**2-5740*y**3+2420*y**4-304*y**5-450*y**6+450*y**7
        -225*y**8+45*y**9))/(2880*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (10850*r**8*(-1+y)**5-16884*r**10*(-1+y)**5+11550*r**12*(-1+y)**5-4160*r**14*(
        -1+y)**5+630*r**16*(-1+y)**5+840*logy*(-3+10*r**2+45*r**4)*(-1+y)**5
        -6*(-1+y)**4*(964-1384*y+210*y**2+70*y**3+35*y**4+21*y**5+14*y**6
        -5*y**7+5*y**8)+70*r**2*(-1+y)**2*(570-1830*y+2010*y**2-790*y**3
        +30*y**4+6*y**5+2*y**6-3*y**7-3*y**8+2*y**9)+315*r**6*(-48+240*y
        -480*y**2+480*y**3-240*y**4+48*y**5-10*y**7+10*y**8-5*y**9+y**10)
        -315*r**4*(54-150*y+400*y**3-500*y**4+220*y**5-20*y**6-10*y**7+10*y**8
        -5*y**9+y**10))/(10080*(-1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm4(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m4 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (19*r**8*(-1+y)**5+12*logy*(4+r**4)*(-1+y)**5+(-1+y)**4*(67-115*y
        +24*y**2+7*y**4+y**5)+8*r**2*(-1+y)**2*(-7+21*y-21*y**2+6*y**3-3*y**4
        +2*y**5)+4*r**6*(14-70*y+140*y**2-162*y**3+95*y**4-28*y**5+3*y**6)
        -2*r**4*(24-114*y+213*y**2-245*y**3+169*y**4-53*y**5+6*y**6))/(24*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (380*r**8*(-1+y)**5-99*r**10*(-1+y)**5+60*logy*(8+r**2)*(-1+y)**5
        +(-1+y)**4*(916-1396*y+240*y**2+80*y**3-5*y**4+39*y**5+6*y**6)
        +5*r**2*(-1+y)**2*(-275+813*y-795*y**2+253*y**3-6*y**4-30*y**5+16*y**6)
        -45*r**4*(-8+40*y-80*y**2+80*y**3-53*y**4+27*y**5-7*y**6+y**7)+5*r**6*(76
        -380*y+760*y**2-760*y**3+281*y**4+11*y**5-45*y**6+9*y**7))/(360*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (690*r**8*(-1+y)**5-414*r**10*(-1+y)**5+85*r**12*(-1+y)**5+60*logy*(10
        +12*r**2+9*r**4+2*r**6)*(-1+y)**5+30*r**2*(-1+y)**2*(-49+123*y-87*y**2
        +5*y**3+6*y**4-4*y**6+2*y**7)+(-1+y)**4*(1406-2006*y+300*y**2+100*y**3
        +50*y**4-6*y**5+31*y**6+5*y**7)-15*r**4*(-39+231*y-552*y**2+672*y**3
        -426*y**4+90*y**5+35*y**6-13*y**7+2*y**8)+10*r**6*(-16+68*y-106*y**2
        +66*y**3-3*y**4-51*y**5+30*y**6-15*y**7+3*y**8))/(720*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (4550*r**8*(-1+y)**5-4788*r**10*(-1+y)**5+2149*r**12*(-1+y)**5-365*r**14*(
        -1+y)**5+420*logy*(8+26*r**2+45*r**4+15*r**6)*(-1+y)**5+2*(-1+y)**4*(4581
        -6261*y+840*y**2+280*y**3+140*y**4+84*y**5-14*y**6+60*y**7+10*y**8)
        +14*r**2*(-1+y)**2*(216-1428*y+2598*y**2-1646*y**3+195*y**4+39*y**5
        +3*y**6-33*y**7+16*y**8)-35*r**4*(-171+1395*y-4140*y**2+5940*y**3
        -4320*y**4+1404*y**5-142*y**6+50*y**7-19*y**8+3*y**9)+35*r**6*(-475
        +2195*y-3940*y**2+3340*y**3-1220*y**4+64*y**5-14*y**6+30*y**7-15*y**8
        +3*y**9))/(6720*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (43750*r**8*(-1+y)**5-52416*r**10*(-1+y)**5+39718*r**12*(-1+y)**5-14344*r**14*(
        -1+y)**5+2079*r**16*(-1+y)**5+840*logy*(28+176*r**2+477*r**4+228*r**6)*(
        -1+y)**5+112*r**2*(-1+y)**2*(1614-6162*y+8142*y**2-4034*y**3+330*y**4
        +66*y**5+22*y**6+3*y**7-21*y**8+10*y**9)+(-1+y)**4*(72309-95829*y
        +11760*y**2+3920*y**3+1960*y**4+1176*y**5+784*y**6-160*y**7+615*y**8
        +105*y**9)-126*r**4*(-1381+10085*y-28120*y**2+38720*y**3-27310*y**4
        +8642*y**5-530*y**6-150*y**7+65*y**8-25*y**9+4*y**10)+56*r**6*(-7291
        +33035*y-57520*y**2+46120*y**3-14510*y**4-518*y**5+570*y**6-60*y**7
        +90*y**8-45*y**9+9*y**10))/(80640*(-1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm5(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m5 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-195*r**8*(-1+y)**5+12*logy*(16+27*r**4)*(-1+y)**5-24*r**2*(-1+y)**3*(
        -31+62*y-31*y**2-6*y**3+2*y**4)+(-1+y)**4*(397-589*y+96*y**2
        +176*y**3+13*y**4+3*y**5)-4*r**6*(214-1070*y+2140*y**2-2344*y**3
        +1355*y**4-379*y**5+36*y**6)+6*r**4*(168-894*y+1923*y**2-2223*y**3
        +1469*y**4-523*y**5+80*y**6))/(72*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-730*r**8*(-1+y)**5+153*r**10*(-1+y)**5-60*logy*(-2+5*r**2)*(-1+y)**5
        -5*r**2*(-1+y)**3*(-227+514*y-317*y**2+20*y**3-22*y**4+8*y**5)+(
        -1+y)**4*(238-358*y+60*y**2+20*y**3+145*y**4+12*y**5+3*y**6)-5*r**6*(296
        -1480*y+2960*y**2-2960*y**3+1327*y**4-119*y**5-90*y**6+18*y**7)+15*r**4*(120
        -600*y+1200*y**2-1200*y**3+555*y**4-22*y**5-73*y**6+20*y**7))/(180*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-3080*r**8*(-1+y)**5+1354*r**10*(-1+y)**5-245*r**12*(-1+y)**5-10*r**2*(
        -1+y)**3*(-335+168*logy*(-1+y)**2+838*y-587*y**2+56*y**3+14*y**4
        -16*y**5+6*y**6)-5*r**4*(-1+y)*(1043+300*logy*(-1+y)**4-3872*y
        +5208*y**2-2872*y**3+418*y**4-156*y**5+239*y**6-80*y**7)+(-1+y)**4*(
        -156+156*y+216*y**5+19*y**6+5*y**7)+10*r**6*(-368+12*logy*(-1+y)**5
        +1828*y-3626*y**2+3586*y**3-1763*y**4+463*y**5-120*y**6+60*y**7-12*y**8))/(720*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-16800*r**8*(-1+y)**5+12537*r**10*(-1+y)**5-4753*r**12*(-1+y)**5+750*r**14*(
        -1+y)**5-420*logy*(2+27*r**2+45*r**4)*(-1+y)**5-21*r**2*(-1+y)**3*(
        -943+2426*y-1753*y**2+180*y**3+45*y**4+18*y**5-21*y**6+8*y**7)+(
        -1+y)**4*(-2988+3828*y-420*y**2-140*y**3-70*y**4-42*y**5+602*y**6
        +55*y**7+15*y**8)-35*r**6*(170-850*y+1700*y**2-1700*y**3+850*y**4
        -170*y**5-102*y**6+90*y**7-45*y**8+9*y**9)+105*r**4*(195-795*y+1140*y**2
        -540*y**3-180*y**4+216*y**5-60*y**6+55*y**7-41*y**8+10*y**9))/(5040*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-176050*r**8*(-1+y)**5+195552*r**10*(-1+y)**5-119938*r**12*(-1+y)**5
        +39400*r**14*(-1+y)**5-5481*r**16*(-1+y)**5-840*logy*(16+176*r**2
        +495*r**4+132*r**6)*(-1+y)**5-224*r**2*(-1+y)**3*(-1212+3084*y-2202*y**2
        +220*y**3+55*y**4+22*y**5+11*y**6-13*y**7+5*y**8)+(-1+y)**4*(-44523
        +57963*y-6720*y**2-2240*y**3-1120*y**4-672*y**5-448*y**6+4000*y**7
        +375*y**8+105*y**9)+210*r**4*(15+1905*y-8760*y**2+15360*y**3-12630*y**4
        +4506*y**5-330*y**6-150*y**7+185*y**8-133*y**9+32*y**10)-56*r**6*(
        -4399+20015*y-35080*y**2+28480*y**3-9290*y**4-122*y**5+330*y**6-390*y**7
        +360*y**8-180*y**9+36*y**10))/(80640*(-1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm6(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m6 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-1125*r**8*(-1+y)**5+60*logy*(-8+9*r**4)*(-1+y)**5+5*(-1+y)**5*(257
        -96*y-48*y**2+16*y**3+9*y**4)-24*r**2*(-1+y)**2*(-75+225*y-225*y**2
        +145*y**3-120*y**4+42*y**5)+6*r**4*(240-1290*y+2805*y**2-3145*y**3
        +1895*y**4-577*y**5+72*y**6)-4*r**6*(770-3850*y+7700*y**2-8600*y**3
        +5785*y**4-2021*y**5+288*y**6))/(360*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-420*r**8*(-1+y)**5+135*r**10*(-1+y)**5-60*logy*(2+9*r**2)*(-1+y)**5
        +(-1+y)**5*(520-120*y-60*y**2-40*y**3+15*y**4+9*y**5)-3*r**2*(-1
        +y)**2*(-145+255*y+15*y**2-185*y**3+150*y**4-162*y**5+56*y**6)+9*r**4*(20
        -100*y+200*y**2-200*y**3+95*y**4-6*y**5-15*y**6+6*y**7)-r**6*(380
        -1900*y+3800*y**2-3800*y**3+1225*y**4+943*y**5-720*y**6+144*y**7))/(180*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-900*r**8*(-1+y)**5+678*r**10*(-1+y)**5-171*r**12*(-1+y)**5+60*logy*(
        -4-60*r**2-15*r**4+6*r**6)*(-1+y)**5+(-1+y)**5*(1472-240*y-120*y**2
        -80*y**3-60*y**4+24*y**5+15*y**6)-6*r**2*(-1+y)**2*(351-1653*y+2553*y**2
        -1451*y**3+150*y**4+114*y**5-122*y**6+42*y**7)+3*r**4*(1435-6875*y
        +13000*y**2-12000*y**3+5250*y**4-774*y**5+15*y**6-75*y**7+24*y**8)
        -2*r**6*(560-2620*y+4790*y**2-4190*y**3+1645*y**4-689*y**5+960*y**6
        -480*y**7+96*y**8))/(720*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (17850*r**8*(-1+y)**5+15015*r**10*(-1+y)**5-9968*r**12*(-1+y)**5+2115*r**14*(
        -1+y)**5+420*logy*(-10-327*r**2-120*r**4+225*r**6)*(-1+y)**5+5*(
        -1+y)**5*(6822-840*y-420*y**2-280*y**3-210*y**4-168*y**5+70*y**6
        +45*y**7)-21*r**2*(-1+y)**2*(7733-29739*y+39549*y**2-19723*y**3+1635*y**4
        +327*y**5+459*y**6-489*y**7+168*y**8)+105*r**4*(2888-13960*y+26720*y**2
        -25120*y**3+11360*y**4-1792*y**5-90*y**6+15*y**7-30*y**8+9*y**9)-35*r**6*(2335
        -8975*y+11200*y**2-2200*y**3-5650*y**4+3830*y**5-900*y**6+720*y**7
        -360*y**8+72*y**9))/(25200*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (1685250*r**8*(-1+y)**5-151200*r**10*(-1+y)**5-112126*r**12*(-1+y)**5
        +68088*r**14*(-1+y)**5-12663*r**16*(-1+y)**5+840*logy*(-40-2352*r**2
        -1089*r**4+3924*r**6)*(-1+y)**5+5*(-1+y)**5*(69345-6720*y-3360*y**2
        -2240*y**3-1680*y**4-1344*y**5-1120*y**6+480*y**7+315*y**8)-672*r**2*(
        -1+y)**2*(4558-16614*y+21024*y**2-9948*y**3+735*y**4+147*y**5+49*y**6
        +96*y**7-102*y**8+35*y**9)+126*r**4*(49863-242055*y+465960*y**2-441760*y**3
        +202730*y**4-33286*y**5-1210*y**6-230*y**7+105*y**8-165*y**9+48*y**10)
        -56*r**6*(24923-65755*y-15640*y**2+211840*y**3-253070*y**4+109474*y**5
        -9810*y**6-3330*y**7+2880*y**8-1440*y**9+288*y**10))/(403200*(-1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm7(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m7 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return -1/30*(y**3*(10*(-1+y)**5+6*r**2*(-1+y)**2*(5-5*y+2*y**2)-3*r**4*(10
        -10*y-y**2+y**3)+r**6*(10+10*y-11*y**2+3*y**3)))/(-1+y)**5
    if (dQ2 == 0 and dr == 0 and i==1):
        return (20*r**8*(-1+y)**5-3*r**10*(-1+y)**5-3*(-1+y)**5*(4+5*y**4)+r**2*(
        -1+y)**2*(65+60*logy*(-1+y)**3-255*y+345*y**2-175*y**3-30*y**4
        +42*y**5-16*y**6)-3*r**6*(-20+100*y-200*y**2+200*y**3-95*y**4+27*y**5
        -5*y**6+y**7)+3*r**4*(-40+200*y-400*y**2+400*y**3-185*y**4+29*y**5
        -5*y**6+y**7))/(120*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (40*r**8*(-1+y)**5-14*r**10*(-1+y)**5+2*r**12*(-1+y)**5-2*(-1+y)**5*(8
        +3*y**5)+2*r**2*(-1+y)**2*(101+60*logy*(-1+y)**3-363*y+453*y**2
        -211*y**3+15*y**4-6*y**5+8*y**6-3*y**7)+r**4*(-1+y)*(230+120*logy*(
        -1+y)**4-800*y+960*y**2-400*y**3-20*y**4+6*y**5-4*y**6+y**7)-r**6*(
        -40+200*y-400*y**2+400*y**3-200*y**4+46*y**5+10*y**6-5*y**7+y**8))/(120*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (1950*r**8*(-1+y)**5-1140*r**10*(-1+y)**5+349*r**12*(-1+y)**5-45*r**14*(
        -1+y)**5-10*(-1+y)**5*(61+10*y**6)+6*r**2*(-1+y)**2*(2104+1020*logy*(
        -1+y)**3-7332*y+8862*y**2-3974*y**3+255*y**4+51*y**5-33*y**6+43*y**7
        -16*y**8)+15*r**4*(-1+y)*(553+780*logy*(-1+y)**4-1432*y+588*y**2
        +1168*y**3-1072*y**4+156*y**5+6*y**6-4*y**7+y**8)+5*r**6*(-765+300*logy*(
        -1+y)**5+3525*y-6300*y**2+5300*y**3-1900*y**4+80*y**5+30*y**6-30*y**7
        +15*y**8-3*y**9))/(4800*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (7000*r**8*(-1+y)**5-5460*r**10*(-1+y)**5+2688*r**12*(-1+y)**5-724*r**14*(
        -1+y)**5+84*r**16*(-1+y)**5-30*(-1+y)**5*(58+5*y**7)+14*r**2*(-1
        +y)**2*(3642+1560*logy*(-1+y)**3-12486*y+14826*y**2-6502*y**3+390*y**4
        +78*y**5+26*y**6-21*y**7+27*y**8-10*y**9)+21*r**4*(-1+y)*(544+2880*logy*(
        -1+y)**4+704*y-6816*y**2+10304*y**3-5456*y**4+576*y**5+96*y**6+6*y**7
        -4*y**8+y**9)+21*r**6*(-1796+720*logy*(-1+y)**5+8260*y-14720*y**2
        +12320*y**3-4360*y**4+152*y**5+120*y**6+10*y**7-10*y**8+5*y**9-y**10))/(16800*(
        -1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm8(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m8 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-15*r**8*(-1+y)**5+5*(-1+y)**5*(3+8*y**3+3*y**4)-24*r**2*(-1+y)**2*(
        -5+15*y-15*y**2-5*y**4+4*y**5)-4*r**6*(30-150*y+300*y**2-250*y**3
        +245*y**4-112*y**5+21*y**6)+6*r**4*(-1+y)*(30*logy*(-1+y)**4+y*(30
        -105*y+110*y**2-55*y**3+14*y**4)))/(480*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (70*r**8*(-1+y)**5-15*r**10*(-1+y)**5+3*(-1+y)**5*(10+5*y**4+2*y**5)
        -r**2*(-1+y)**2*(-25+60*logy*(-1+y)**3+15*y+75*y**2-85*y**3-30*y**4
        -54*y**5+32*y**6)-3*r**6*(-40+200*y-400*y**2+400*y**3-175*y**4+99*y**5
        -35*y**6+7*y**7)+3*r**4*(-20+100*y-200*y**2+200*y**3-85*y**4+3*y**5
        -5*y**6+7*y**7))/(480*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (320*r**8*(-1+y)**5-130*r**10*(-1+y)**5+23*r**12*(-1+y)**5+(-1+y)**5*(100
        +12*y**5+5*y**6)-r**4*(-1+y)*(635+300*logy*(-1+y)**4-2240*y+2760*y**2
        -1240*y**3+10*y**4+96*y**5+11*y**6-14*y**7)-2*r**2*(-1+y)**2*(281
        +240*logy*(-1+y)**3-1083*y+1443*y**2-721*y**3+60*y**4-6*y**5-22*y**6
        +12*y**7)+2*r**6*(120+60*logy*(-1+y)**5-660*y+1470*y**2-1670*y**3
        +985*y**4-287*y**5-70*y**6+35*y**7-7*y**8))/(960*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (95550*r**8*(-1+y)**5-39060*r**10*(-1+y)**5+12761*r**12*(-1+y)**5-1905*r**14*(
        -1+y)**5+10*(-1+y)**5*(1531+70*y**6+30*y**7)-105*r**4*(-1+y)*(2589
        +540*logy*(-1+y)**4-9816*y+13644*y**2-8016*y**3+1464*y**4+108*y**5
        +38*y**6+8*y**7-7*y**8)-42*r**2*(-1+y)**2*(3792+2460*logy*(-1+y)**3
        -13836*y+17526*y**2-8302*y**3+615*y**4+123*y**5-9*y**6-61*y**7+32*y**8)
        +35*r**6*(-855+3300*logy*(-1+y)**5+975*y+6300*y**2-17300*y**3+16900*y**4
        -6680*y**5+450*y**6-210*y**7+105*y**8-21*y**9))/(134400*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (799750*r**8*(-1+y)**5-288960*r**10*(-1+y)**5+115878*r**12*(-1+y)**5
        -32344*r**14*(-1+y)**5+4179*r**16*(-1+y)**5+15*(-1+y)**5*(3609+80*y**7
        +35*y**8)-42*r**4*(-1+y)*(41743+4860*logy*(-1+y)**4-162112*y+233448*y**2
        -145912*y**3+31618*y**4+972*y**5+162*y**6+132*y**7+37*y**8-28*y**9)
        -112*r**2*(-1+y)**2*(7206+4080*logy*(-1+y)**3-25698*y+31818*y**2
        -14686*y**3+1020*y**4+204*y**5+68*y**6-3*y**7-39*y**8+20*y**9)+168*r**6*(
        -1747+6540*logy*(-1+y)**5+2195*y+11960*y**2-33760*y**3+33230*y**4
        -13186*y**5+1090*y**6+120*y**7-70*y**8+35*y**9-7*y**10))/(537600*(-1
        +y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xm9(i,y,r,dQ2,dr):
    """ 1/mb^4 level functions of m9 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (60*logy*(-1+y)**5-15*r**8*(-1+y)**5+5*(-1+y)**4*(25-37*y+6*y**2
        +8*y**3+10*y**4)+6*r**2*(-1+y)**2*(-40+120*y-120*y**2+45*y**3-25*y**4
        +18*y**5)+r**6*(-80+400*y-800*y**2+890*y**3-460*y**4+101*y**5-3*y**6)
        +3*r**4*(60-300*y+600*y**2-650*y**3+415*y**4-146*y**5+21*y**6))/(90*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-60*r**8*(-1+y)**5+9*r**10*(-1+y)**5+(-1+y)**4*(-36+36*y+15*y**4
        +25*y**5)+r**2*(-1+y)**2*(-195-180*logy*(-1+y)**3+765*y-1035*y**2
        +525*y**3-30*y**4-86*y**5+48*y**6)-r**6*(180-900*y+1800*y**2-1800*y**3
        +855*y**4-163*y**5-5*y**6+y**7)+3*r**4*(120-600*y+1200*y**2-1200*y**3
        +575*y**4-67*y**5-35*y**6+7*y**7))/(120*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-365*r**8*(-1+y)**5+102*r**10*(-1+y)**5-13*r**12*(-1+y)**5+60*logy*(
        -1-10*r**2+3*r**4)*(-1+y)**5+(-1+y)**4*(-253+313*y-30*y**2-10*y**3
        -5*y**4+15*y**5+30*y**6)+2*r**2*(-1+y)**2*(-169+807*y-1257*y**2+719*y**3
        -75*y**4-6*y**5-52*y**6+27*y**7)-r**6*(840-4200*y+8400*y**2-8400*y**3
        +4200*y**4-894*y**5+10*y**6-5*y**7+y**8)+3*r**4*(385-1985*y+4120*y**2
        -4320*y**3+2310*y**4-552*y**5+70*y**6-35*y**7+7*y**8))/(360*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-25050*r**8*(-1+y)**5+9480*r**10*(-1+y)**5-2291*r**12*(-1+y)**5+255*r**14*(
        -1+y)**5-60*logy*(40+318*r**2-195*r**4+75*r**6)*(-1+y)**5+10*(-1
        +y)**4*(-927+1167*y-120*y**2-40*y**3-20*y**4-12*y**5+22*y**6+50*y**7)
        +6*r**2*(-1+y)**2*(-1086+6438*y-11208*y**2+6916*y**3-795*y**4-159*y**5
        -3*y**6-287*y**7+144*y**8)-5*r**6*(8065-41225*y+84700*y**2-87700*y**3
        +46100*y**4-10120*y**5-30*y**6+30*y**7-15*y**8+3*y**9)+15*r**4*(2567
        -13615*y+29180*y**2-31780*y**3+17840*y**4-4348*y**5+30*y**6+210*y**7
        -105*y**8+21*y**9))/(14400*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-44625*r**8*(-1+y)**5+20160*r**10*(-1+y)**5-6909*r**12*(-1+y)**5+1482*r**14*(
        -1+y)**5-147*r**16*(-1+y)**5-420*logy*(5+36*r**2-33*r**4+38*r**6)*(
        -1+y)**5+5*(-1+y)**4*(-1588+2008*y-210*y**2-70*y**3-35*y**4-21*y**5
        -14*y**6+20*y**7+50*y**8)+14*r**2*(-1+y)**2*(-156+1548*y-3168*y**2
        +2136*y**3-270*y**4-54*y**5-18*y**6+3*y**7-61*y**8+30*y**9)-7*r**6*(6946
        -37010*y+79720*y**2-87320*y**3+49360*y**4-12152*y**5+380*y**6-10*y**7
        +10*y**8-5*y**9+y**10)+21*r**4*(1367-7495*y+16640*y**2-18840*y**3
        +11070*y**4-2874*y**5+110*y**6-20*y**7+70*y**8-35*y**9+7*y**10))/(16800*(
        -1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr1(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r1 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-35085*r**8*(-1+y)**7+300*logy*(4+9*r**4)*(-1+y)**7+5*(-1+y)**5*(
        -1127+2494*y-1487*y**2+1184*y**3-1435*y**4+662*y**5+45*y**6)+24*r**2*(
        -1+y)**3*(-175+700*y-1050*y**2-170*y**3+1705*y**4-1514*y**5+432*y**6)
        -20*r**6*(2930-20510*y+61530*y**2-110206*y**3+126235*y**4-94137*y**5
        +43841*y**6-11591*y**7+1332*y**8)+6*r**4*(2280-16410*y+50805*y**2
        -99905*y**3+135020*y**4-122850*y**5+71087*y**6-23339*y**7+3312*y**8))/(1800*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-12015*r**8*(-1+y)**7+5742*r**10*(-1+y)**7-60*logy*(14+15*r**2)*(-1
        +y)**7+(-1+y)**5*(-887+934*y+373*y**2-280*y**3+965*y**4-1345*y**5
        +615*y**6+45*y**7)+6*r**2*(-1+y)**3*(150-750*y+1425*y**2-1250*y**3
        -190*y**4+1300*y**5-1045*y**6+288*y**7)+9*r**4*(-230+1610*y-4830*y**2
        +8050*y**3-9560*y**4+9893*y**5-8671*y**6+5319*y**7-1857*y**8+276*y**9)
        -2*r**6*(2095-14665*y+43995*y**2-73325*y**3+58970*y**4-3324*y**5-37217*y**6
        +32021*y**7-11655*y**8+1665*y**9))/(900*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-26150*r**8*(-1+y)**7+29418*r**10*(-1+y)**7-9969*r**12*(-1+y)**7+60*logy*(
        -94-64*r**2+75*r**4+30*r**6)*(-1+y)**7+(-1+y)**5*(3602-12844*y
        +12062*y**2-1880*y**3-470*y**4+1468*y**5-2151*y**6+978*y**7+75*y**8)
        +2*r**2*(-1+y)**3*(2707-12748*y+22962*y**2-19148*y**3+6707*y**4-3516*y**5
        +6064*y**6-4756*y**7+1296*y**8)+3*r**4*(5225-38075*y+119475*y**2-209625*y**3
        +222750*y**4-151398*y**5+76501*y**6-40063*y**7+21609*y**8-7503*y**9
        +1104*y**10)-2*r**6*(6680-45860*y+134430*y**2-217750*y**3+209875*y**4
        -142593*y**5+97811*y**6-78773*y**7+46620*y**8-15540*y**9+2220*y**10))/(3600*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-310800*r**8*(-1+y)**7+857535*r**10*(-1+y)**7-648592*r**12*(-1+y)**7
        +169125*r**14*(-1+y)**7+420*logy*(-470-153*r**2-150*r**4+1125*r**6)*(
        -1+y)**7+5*(-1+y)**5*(46248-131976*y+105468*y**2-13160*y**3-3290*y**4
        -1316*y**5+4172*y**6-6271*y**7+2840*y**8+225*y**9)+21*r**2*(-1+y)**3*(4877
        -22568*y+39972*y**2-32768*y**3+11252*y**4-612*y**5-4452*y**6+8228*y**7
        -6377*y**8+1728*y**9)-175*r**6*(2917-17719*y+43707*y**2-53945*y**3
        +30320*y**4+708*y**5-13514*y**6+13790*y**7-11835*y**8+6993*y**9-2331*y**10
        +333*y**11)+105*r**4*(8680-60160*y+178380*y**2-293100*y**3+287850*y**4
        -168510*y**5+51050*y**6+2215*y**7-12165*y**8+8169*y**9-2823*y**10+414*y**11))/(126000*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (4138050*r**8*(-1+y)**7+8215200*r**10*(-1+y)**7-11620126*r**12*(-1+y)**7
        +6564168*r**14*(-1+y)**7-1386315*r**16*(-1+y)**7+840*logy*(-3100+768*r**2
        -11169*r**4+10140*r**6)*(-1+y)**7+25*(-1+y)**5*(148641-401442*y+304881*y**2
        -34720*y**3-8680*y**4-3472*y**5-1736*y**6+5632*y**7-8597*y**8+3882*y**9
        +315*y**10)+672*r**2*(-1+y)**3*(-842+4328*y-8412*y**2+7528*y**3-2842*y**4
        +192*y**5+32*y**6-923*y**7+1732*y**8-1333*y**9+360*y**10)-280*r**6*(
        -24647+202949*y-715317*y**2+1405135*y**3-1671310*y**4+1215726*y**5
        -511712*y**6+87116*y**7+36270*y**8-47070*y**9+27972*y**10-9324*y**11
        +1332*y**12)+126*r**4*(17143-45541*y-123987*y**2+727865*y**3-1379390*y**4
        +1348854*y**5-710228*y**6+158664*y**7+42655*y**8-66905*y**9+43743*y**10
        -15081*y**11+2208*y**12))/(2016000*(-1+y)**7)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr2(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r2 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-1020*(-1+y)**7-680*r**10*(-1+y)**7+5*r**2*(-1+y)**5*(160+420*logy*(
        -1+y)**2+100*y-470*y**2+312*y**3-145*y**4+26*y**5-5*y**6)+2*r**4*(
        -1+y)**3*(-200+800*y-1200*y**2+330*y**3+505*y**4-294*y**5+17*y**6)
        -r**6*(-1+y)*(-600+900*logy*(-1+y)**6+4500*y-13950*y**2+20060*y**3
        -15255*y**4+7320*y**5-2309*y**6+354*y**7)-10*r**8*(70-490*y+1470*y**2
        -2806*y**3+3445*y**4-2568*y**5+1176*y**6-308*y**7+35*y**8))/(150*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-3060*(-1+y)**7-3490*r**10*(-1+y)**7+1602*r**12*(-1+y)**7+6*r**2*(
        -1+y)**5*(-1242+2010*logy*(-1+y)**2+4494*y-4257*y**2+670*y**3+490*y**4
        -250*y**5+50*y**6-10*y**7)+2*r**4*(-1+y)**3*(3500+750*logy*(-1+y)**4
        -13250*y+18375*y**2-10750*y**3+880*y**4+1560*y**5-475*y**6+34*y**7)
        -9*r**6*(750-5250*y+15750*y**2-26250*y**3+27010*y**4-17958*y**5+7351*y**6
        -1349*y**7-113*y**8+59*y**9)-3*r**8*(-450+3150*y-9450*y**2+15750*y**3
        -18420*y**4+16164*y**5-9563*y**6+4109*y**7-1225*y**8+175*y**9))/(900*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-3060*(-1+y)**7-3260*r**10*(-1+y)**7+4839*r**12*(-1+y)**7-1497*r**14*(
        -1+y)**7+2*r**2*(-1+y)**5*(-10512+9240*logy*(-1+y)**2+30264*y-24372*y**2
        +3080*y**3+770*y**4+1082*y**5-574*y**6+122*y**7-25*y**8)+r**4*(-1
        +y)**3*(31637+1380*logy*(-1+y)**4-125168*y+184992*y**2-120568*y**3
        +28762*y**4-1416*y**5+2114*y**6-656*y**7+51*y**8)-3*r**6*(-1+y)*(665
        +900*logy*(-1+y)**6-3090*y+5025*y**2-2200*y**3-2850*y**4+2016*y**5
        +1624*y**6-930*y**7-258*y**8+118*y**9)-2*r**8*(-2820+600*logy*(-1
        +y)**7+19140*y-55320*y**2+88000*y**3-82750*y**4+42246*y**5-5592*y**6
        -5169*y**7+3675*y**8-1225*y**9+175*y**10))/(1800*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-71400*(-1+y)**7-78050*r**10*(-1+y)**7+188440*r**12*(-1+y)**7-143843*r**14*(
        -1+y)**7+34175*r**16*(-1+y)**7+10*r**2*(-1+y)**5*(-88709+59640*logy*(
        -1+y)**2+237058*y-178169*y**2+19880*y**3+4970*y**4+1988*y**5+4004*y**6
        -2172*y**7+480*y**8-100*y**9)-14*r**4*(-1+y)**3*(-130662+1860*logy*(
        -1+y)**4+524508*y-790482*y**2+530708*y**3-134537*y**4+372*y**5+2412*y**6
        -2668*y**7+837*y**8-68*y**9)-35*r**6*(-1+y)*(12515+16500*logy*(-1
        +y)**6-58590*y+96975*y**2-46800*y**3-47400*y**4+68460*y**5-30950*y**6
        +7260*y**7-945*y**8-462*y**9+177*y**10)-175*r**8*(-2477+1500*logy*(
        -1+y)**7+15839*y-42267*y**2+59945*y**3-46820*y**4+17592*y**5-1326*y**6
        +150*y**7-1065*y**8+735*y**9-245*y**10+35*y**11))/(84000*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-214200*(-1+y)**7-1055600*r**10*(-1+y)**7+737100*r**12*(-1+y)**7-966504*r**14*(
        -1+y)**7+523772*r**16*(-1+y)**7-101745*r**18*(-1+y)**7-28*r**4*(-1
        +y)**3*(-371043+14340*logy*(-1+y)**4+1498512*y-2276448*y**2+1546312*y**3
        -400918*y**4+2868*y**5+478*y**6+3158*y**7-3222*y**8+1018*y**9-85*y**10)
        +75*r**2*(-1+y)**5*(-54381+31080*logy*(-1+y)**2+139842*y-101001*y**2
        +10360*y**3+2590*y**4+1036*y**5+518*y**6+1328*y**7-731*y**8+166*y**9
        -35*y**10)-126*r**6*(-1+y)*(22172+39840*logy*(-1+y)**6-93192*y+113460*y**2
        +47920*y**3-235140*y**4+213576*y**5-75436*y**6+3520*y**7+4015*y**8
        -480*y**9-333*y**10+118*y**11)-420*r**8*(-5809+6420*logy*(-1+y)**7
        +34243*y-80259*y**2+88825*y**3-32650*y**4-25350*y**5+30920*y**6-11600*y**7
        +2400*y**8-1125*y**9+735*y**10-245*y**11+35*y**12))/(504000*r**2*(-1
        +y)**7)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr3(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r3 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (3240*(-1+y)**7-3165*r**10*(-1+y)**7-5*r**2*(-1+y)**5*(835+600*logy*(
        -1+y)**2-1070*y-65*y**2+284*y**3+65*y**4-118*y**5-15*y**6)+12*r**4*(
        -1+y)**3*(200-800*y+1200*y**2-1035*y**3+915*y**4-597*y**5+171*y**6)
        +18*r**6*(-1+y)*(-450+150*logy*(-1+y)**6+2850*y-7575*y**2+11240*y**3
        -10595*y**4+6405*y**5-2236*y**6+341*y**7)-10*r**8*(980-6860*y+20580*y**2
        -35398*y**3+38770*y**4-27219*y**5+11753*y**6-2819*y**7+285*y**8))/(450*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (1080*(-1+y)**7-1880*r**10*(-1+y)**7+549*r**12*(-1+y)**7+r**2*(-1
        +y)**5*(276-2280*logy*(-1+y)**2-2832*y+3696*y**2-760*y**3-295*y**4
        -110*y**5+145*y**6+20*y**7)+r**4*(-1+y)**3*(-925-300*logy*(-1+y)**4
        +3400*y-4500*y**2+2400*y**3-1005*y**4+2040*y**5-1650*y**6+456*y**7)
        +3*r**6*(500-3500*y+10500*y**2-17500*y**3+16915*y**4-7417*y**5-2276*y**6
        +4524*y**7-2087*y**8+341*y**9)-r**8*(2400-16800*y+50400*y**2-84000*y**3
        +81255*y**4-39761*y**5+2262*y**6+7334*y**7-3325*y**8+475*y**9))/(300*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (1620*(-1+y)**7-3930*r**10*(-1+y)**7+2307*r**12*(-1+y)**7-536*r**14*(
        -1+y)**7-3*r**4*(-1+y)**3*(2173+1020*logy*(-1+y)**4-7672*y+9468*y**2
        -4272*y**3+48*y**4+486*y**5-794*y**6+626*y**7-171*y**8)+r**2*(-1+y)**5*(5138
        -5760*logy*(-1+y)**2-16036*y+13778*y**2-1920*y**3-480*y**4-318*y**5
        -149*y**6+172*y**7+25*y**8)+3*r**6*(-1+y)*(-1120+600*logy*(-1+y)**6
        +7320*y-20100*y**2+29800*y**3-25350*y**4+12642*y**5-5537*y**6+3765*y**7
        -1821*y**8+341*y**9)+r**8*(-5280+600*logy*(-1+y)**7+36360*y-106980*y**2
        +174100*y**3-168850*y**4+100404*y**5-42608*y**6+19619*y**7-9975*y**8
        +3325*y**9-475*y**10))/(900*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (226800*(-1+y)**7-517650*r**10*(-1+y)**7+556920*r**12*(-1+y)**7-263179*r**14*(
        -1+y)**7+50775*r**16*(-1+y)**7-42*r**4*(-1+y)**3*(25638+37860*logy*(
        -1+y)**4-64692*y+21318*y**2+61508*y**3-53237*y**4+7572*y**5+3612*y**6
        -6468*y**7+5037*y**8-1368*y**9)-10*r**2*(-1+y)**5*(-171963+119280*logy*(
        -1+y)**2+463206*y-350883*y**2+39760*y**3+9940*y**4+3976*y**5+3458*y**6
        +1856*y**7-1990*y**8-300*y**9)+315*r**6*(-1+y)*(-7555+1500*logy*(
        -1+y)**6+46830*y-121575*y**2+169600*y**3-134700*y**4+58380*y**5-10450*y**6
        -3020*y**7+3915*y**8-1846*y**9+341*y**10)+175*r**8*(-9619+4500*logy*(
        -1+y)**7+62833*y-172749*y**2+256415*y**3-217040*y**4+98724*y**5-14962*y**6
        -10070*y**7+10455*y**8-5985*y**9+1995*y**10-285*y**11))/(252000*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (75600*(-1+y)**7+11550*r**10*(-1+y)**7+222600*r**12*(-1+y)**7-165718*r**14*(
        -1+y)**7+65024*r**16*(-1+y)**7-10815*r**18*(-1+y)**7-56*r**4*(-1+y)**3*(
        -5453+25140*logy*(-1+y)**4+46952*y-120708*y**2+130752*y**3-57828*y**4
        +5028*y**5+838*y**6+743*y**7-1362*y**8+1053*y**9-285*y**10)-25*r**2*(
        -1+y)**5*(-41193+21840*logy*(-1+y)**2+104226*y-73953*y**2+7280*y**3
        +1820*y**4+728*y**5+364*y**6+376*y**7+221*y**8-226*y**9-35*y**10)
        -42*r**6*(-1+y)*(54097+8340*logy*(-1+y)**6-316242*y+765585*y**2
        -979080*y**3+692610*y**4-252024*y**5+33664*y**6-480*y**7+7015*y**8
        -7980*y**9+3717*y**10-682*y**11)+140*r**8*(-5276+5280*logy*(-1+y)**7
        +31652*y-76476*y**2+90500*y**3-44300*y**4-10380*y**5+21940*y**6-7630*y**7
        -2150*y**8+3425*y**9-1995*y**10+665*y**11-95*y**12))/(168000*r**2*(-1
        +y)**7)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr4(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r4 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-3060*(-1+y)**7+4410*r**10*(-1+y)**7-5*r**2*(-1+y)**5*(-1310+60*logy*(
        -1+y)**2+2680*y-1400*y**2-316*y**3+335*y**4-58*y**5+15*y**6)-6*r**4*(
        -1+y)**3*(600-2400*y+3600*y**2-2380*y**3+795*y**4-256*y**5+83*y**6)
        -3*r**6*(-1+y)*(-2400+900*logy*(-1+y)**6+15300*y-40950*y**2+62560*y**3
        -60005*y**4+36270*y**5-12559*y**6+1904*y**7)+10*r**8*(1150-8050*y
        +24150*y**2-42032*y**3+46265*y**4-32721*y**5+14287*y**6-3481*y**7+360*y**8))/(450*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-3060*(-1+y)**7+7810*r**10*(-1+y)**7-2673*r**12*(-1+y)**7+r**2*(-1
        +y)**5*(9448+60*logy*(-1+y)**2-18836*y+9358*y**2+20*y**3+1265*y**4
        -1150*y**5+225*y**6-60*y**7)-r**4*(-1+y)**3*(9025+600*logy*(-1+y)**4
        -35500*y+52050*y**2-33500*y**3+7865*y**4+1080*y**5-1100*y**6+332*y**7)
        -3*r**6*(1650-11550*y+34650*y**2-57750*y**3+55155*y**4-24149*y**5
        -5647*y**6+12453*y**7-5764*y**8+952*y**9)+r**8*(7450-52150*y+156450*y**2
        -260750*y**3+247385*y**4-114567*y**5-3161*y**6+29423*y**7-12600*y**8
        +1800*y**9))/(900*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-3060*(-1+y)**7+10390*r**10*(-1+y)**7-8021*r**12*(-1+y)**7+2153*r**14*(
        -1+y)**7-2*r**2*(-1+y)**5*(-6743+60*logy*(-1+y)**2+13546*y-6833*y**2
        +20*y**3+5*y**4-502*y**5+439*y**6-92*y**7+25*y**8)-r**4*(-1+y)**3*(18463
        +2220*logy*(-1+y)**4-71632*y+103008*y**2-64232*y**3+13838*y**4+516*y**5
        +886*y**6-844*y**7+249*y**8)+r**6*(-1+y)*(12755+300*logy*(-1+y)**6
        -76230*y+189675*y**2-251400*y**3+187050*y**4-80148*y**5+30228*y**6
        -20460*y**7+10074*y**8-1904*y**9)-4*r**8*(-2310+300*logy*(-1+y)**7
        +15870*y-46560*y**2+75500*y**3-72875*y**4+44298*y**5-20771*y**6+11528*y**7
        -6300*y**8+2100*y**9-300*y**10))/(1800*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-107100*(-1+y)**7+263550*r**10*(-1+y)**7-516390*r**12*(-1+y)**7+311773*r**14*(
        -1+y)**7-68175*r**16*(-1+y)**7-10*r**2*(-1+y)**5*(-66279+2940*logy*(
        -1+y)**2+135498*y-70689*y**2+980*y**3+245*y**4+98*y**5-2891*y**6
        +2488*y**7-545*y**8+150*y**9)-42*r**4*(-1+y)**3*(30719+3180*logy*(
        -1+y)**4-119696*y+173184*y**2-109096*y**3+24094*y**4+636*y**5+156*y**6
        +616*y**7-569*y**8+166*y**9)+105*r**6*(-1+y)*(13255+1500*logy*(-1
        +y)**6-78030*y+190575*y**2-246600*y**3+177450*y**4-66480*y**5+7850*y**6
        +5120*y**7-5340*y**8+2556*y**9-476*y**10)-175*r**8*(-3703+2700*logy*(
        -1+y)**7+23221*y-60213*y**2+81455*y**3-57830*y**4+15798*y**5+5966*y**6
        -8390*y**7+6540*y**8-3780*y**9+1260*y**10-180*y**11))/(126000*r**2*(-1
        +y)**7)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-30600*(-1+y)**7-133300*r**10*(-1+y)**7-175500*r**12*(-1+y)**7+212228*r**14*(
        -1+y)**7-102404*r**16*(-1+y)**7+18765*r**18*(-1+y)**7-25*r**2*(-1
        +y)**5*(-10383+840*logy*(-1+y)**2+21606*y-11643*y**2+280*y**3+70*y**4
        +28*y**5+14*y**6-280*y**7+239*y**8-54*y**9+15*y**10)-4*r**4*(-1+y)**3*(182157
        +8340*logy*(-1+y)**4-720288*y+1063752*y**2-692488*y**3+164782*y**4
        +1668*y**5+278*y**6+208*y**7+1578*y**8-1432*y**9+415*y**10)+6*r**6*(
        -1+y)*(134034+51480*logy*(-1+y)**6-752724*y+1727370*y**2-2045760*y**3
        +1276920*y**4-356328*y**5+7908*y**6-60*y**7+21455*y**8-21810*y**9+10299*y**10
        -1904*y**11)-20*r**8*(-6217+21060*logy*(-1+y)**7+22459*y+6333*y**2
        -157975*y**3+342250*y**4-352770*y**5+191300*y**6-44570*y**7-7950*y**8
        +12900*y**9-7560*y**10+2520*y**11-360*y**12))/(72000*r**2*(-1+y)**7)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr5(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r5 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (2880*(-1+y)**7-1905*r**10*(-1+y)**7-5*r**2*(-1+y)**5*(-485+1680*logy*(
        -1+y)**2+2650*y-3005*y**2+1328*y**3-745*y**4+194*y**5+15*y**6)-24*r**4*(
        -1+y)**3*(125-500*y+750*y**2-540*y**3+485*y**4-288*y**5+64*y**6)
        +6*r**6*(-1+y)*(-1500+450*logy*(-1+y)**6+9450*y-24975*y**2+37790*y**3
        -33770*y**4+17340*y**5-5111*y**6+656*y**7)-20*r**8*(430-3010*y+9030*y**2
        -15578*y**3+16415*y**4-10425*y**5+3913*y**6-751*y**7+48*y**8))/(1800*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (720*(-1+y)**7-1870*r**10*(-1+y)**7+396*r**12*(-1+y)**7-r**2*(-1+y)**5*(
        -4054+3720*logy*(-1+y)**2+11828*y-9634*y**2+1240*y**3+1030*y**4
        -665*y**5+180*y**6+15*y**7)-4*r**4*(-1+y)**3*(1175+300*logy*(-1+y)**4
        -4400*y+6000*y**2-3400*y**3+505*y**4+480*y**5-280*y**6+64*y**7)-4*r**8*(800
        -5600*y+16800*y**2-28000*y**3+27505*y**4-15666*y**5+4622*y**6-191*y**7
        -210*y**8+30*y**9)+3*r**6*(600-4200*y+12600*y**2-21000*y**3+20160*y**4
        -10153*y**5+1291*y**6+1461*y**7-923*y**8+164*y**9))/(900*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (1440*(-1+y)**7-8410*r**10*(-1+y)**7+4154*r**12*(-1+y)**7-777*r**14*(
        -1+y)**7-r**2*(-1+y)**5*(-16086+10920*logy*(-1+y)**2+43092*y-32466*y**2
        +3640*y**3+910*y**4+1516*y**5-1037*y**6+286*y**7+25*y**8)-2*r**4*(
        -1+y)**3*(14029+960*logy*(-1+y)**4-55156*y+80814*y**2-51956*y**3
        +12029*y**4+48*y**5+1408*y**6-832*y**7+192*y**8)+r**6*(-1+y)*(9805
        +3300*logy*(-1+y)**6-55530*y+128925*y**2-155400*y**3+100050*y**4
        -26088*y**5-5307*y**6+5790*y**7-3261*y**8+656*y**9)-2*r**8*(2880+300*logy*(
        -1+y)**7-20460*y+62430*y**2-106150*y**3+108775*y**4-68949*y**5+26823*y**6
        -6189*y**7+1680*y**8-560*y**9+80*y**10))/(3600*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (25200*(-1+y)**7-238350*r**10*(-1+y)**7+203280*r**12*(-1+y)**7-84266*r**14*(
        -1+y)**7+13800*r**16*(-1+y)**7+168*r**4*(-1+y)**3*(-8538+1140*logy*(
        -1+y)**4+35292*y-55218*y**2+39092*y**3-10913*y**4+228*y**5+63*y**6
        -232*y**7+138*y**8-32*y**9)-5*r**2*(-1+y)**5*(-85734+51240*logy*(-1
        +y)**2+222708*y-162594*y**2+17080*y**3+4270*y**4+1708*y**5+4214*y**6
        -2977*y**7+830*y**8+75*y**9)+105*r**6*(-1+y)*(7850+6600*logy*(-1
        +y)**6-40500*y+81450*y**2-75600*y**3+23700*y**4+10320*y**5-7760*y**6
        +35*y**7+780*y**8-417*y**9+82*y**10)-700*r**8*(374-2618*y+7854*y**2
        -13090*y**3+13090*y**4-7854*y**5+2552*y**6-245*y**7-90*y**8+63*y**9
        -21*y**10+3*y**11))/(126000*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (28800*(-1+y)**7-367850*r**10*(-1+y)**7+460800*r**12*(-1+y)**7-316834*r**14*(
        -1+y)**7+111512*r**16*(-1+y)**7-16065*r**18*(-1+y)**7+32*r**4*(-1
        +y)**3*(-134163+31440*logy*(-1+y)**4+568092*y-915018*y**2+672892*y**3
        -199663*y**4+6288*y**5+1048*y**6+428*y**7-1152*y**8+688*y**9-160*y**10)
        -25*r**2*(-1+y)**5*(-26259+14880*logy*(-1+y)**2+67398*y-48579*y**2
        +4960*y**3+1240*y**4+496*y**5+248*y**6+800*y**7-577*y**8+162*y**9
        +15*y**10)+6*r**6*(-1+y)*(288723+606060*logy*(-1+y)**6-1126278*y
        +997515*y**2+1700280*y**3-4305510*y**4+3540384*y**5-1196124*y**6+96180*y**7
        -3865*y**8+12930*y**9-6747*y**10+1312*y**11)+40*r**8*(-50101+11700*logy*(
        -1+y)**7+339007*y-976071*y**2+1544885*y**3-1442510*y**4+783606*y**5
        -220252*y**6+20896*y**7-630*y**8+1530*y**9-1008*y**10+336*y**11-48*y**12))/(288000*r**2*(
        -1+y)**7)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr6(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r6 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (6480*(-1+y)**7+10095*r**10*(-1+y)**7-5*r**2*(-1+y)**5*(2875-1200*logy*(
        -1+y)**2-6950*y+4675*y**2+1088*y**3-1825*y**4+674*y**5+15*y**6)
        -24*r**4*(-1+y)**3*(-275+1100*y-1650*y**2+610*y**3+560*y**4-538*y**5
        +139*y**6)+18*r**6*(-1+y)*(300+150*logy*(-1+y)**6-1650*y+3675*y**2
        -5070*y**3+4410*y**4-2220*y**5+563*y**6-48*y**7)+20*r**8*(710-4970*y
        +14910*y**2-27022*y**3+31885*y**4-24435*y**5+11627*y**6-3149*y**7+372*y**8))/(1800*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (1620*(-1+y)**7+3455*r**10*(-1+y)**7-1629*r**12*(-1+y)**7+r**4*(-1
        +y)**3*(9325+1500*logy*(-1+y)**4-35800*y+50700*y**2-30800*y**3+8405*y**4
        -3120*y**5+2170*y**6-556*y**7)+3*r**2*(-1+y)**5*(-3257+1260*logy*(
        -1+y)**2+7774*y-5147*y**2+420*y**3-360*y**4+555*y**5-210*y**6-5*y**7)
        -9*r**6*(-100+700*y-2100*y**2+3500*y**3-3845*y**4+3126*y**5-1872*y**6
        +738*y**7-159*y**8+12*y**9)+3*r**8*(700-4900*y+14700*y**2-24500*y**3
        +21785*y**4-6587*y**5-5171*y**6+5713*y**7-2170*y**8+310*y**9))/(900*r**2*(
        -1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (3240*(-1+y)**7+10740*r**10*(-1+y)**7-8616*r**12*(-1+y)**7+2723*r**14*(
        -1+y)**7+6*r**4*(-1+y)**3*(8032+1980*logy*(-1+y)**4-30148*y+41262*y**2
        -23548*y**3+3907*y**4+984*y**5-786*y**6+544*y**7-139*y**8)+r**2*(-1
        +y)**5*(-40944+14880*logy*(-1+y)**2+96768*y-63264*y**2+4960*y**3
        +1240*y**4-1736*y**5+2627*y**6-1006*y**7-25*y**8)-3*r**6*(-1+y)*(2765
        +900*logy*(-1+y)**6-15690*y+36525*y**2-44200*y**3+28650*y**4-7104*y**5
        -2431*y**6+2070*y**7-513*y**8+48*y**9)-2*r**8*(-3520+300*logy*(-1
        +y)**7+24340*y-71970*y**2+117850*y**3-115225*y**4+73551*y**5-39677*y**6
        +24311*y**7-13020*y**8+4340*y**9-620*y**10))/(3600*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (56700*(-1+y)**7+255150*r**10*(-1+y)**7-322245*r**12*(-1+y)**7+185059*r**14*(
        -1+y)**7-43950*r**16*(-1+y)**7+21*r**4*(-1+y)**3*(82621+22620*logy*(
        -1+y)**4-307864*y+416556*y**2-232464*y**3+35496*y**4+4524*y**5+3204*y**6
        -3156*y**7+2179*y**8-556*y**9)+5*r**2*(-1+y)**5*(-252786+87360*logy*(
        -1+y)**2+592932*y-383826*y**2+29120*y**3+7280*y**4+2912*y**5-5054*y**6
        +7597*y**7-2930*y**8-75*y**9)-315*r**6*(-1+y)*(2325+300*logy*(-1
        +y)**6-13650*y+33225*y**2-42800*y**3+30600*y**4-11340*y**5+1820*y**6
        -345*y**7+240*y**8-61*y**9+6*y**10)+175*r**8*(-746+5222*y-15666*y**2
        +26110*y**3-26110*y**4+15666*y**5-6308*y**6+3680*y**7-3315*y**8+1953*y**9
        -651*y**10+93*y**11))/(126000*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (453600*(-1+y)**7+1583050*r**10*(-1+y)**7-4561200*r**12*(-1+y)**7+4009362*r**14*(
        -1+y)**7-1794616*r**16*(-1+y)**7+341145*r**18*(-1+y)**7+112*r**4*(
        -1+y)**3*(231699+58380*logy*(-1+y)**4-868416*y+1185864*y**2-673816*y**3
        +110074*y**4+11676*y**5+1946*y**6+3706*y**7-3954*y**8+2726*y**9-695*y**10)
        +75*r**2*(-1+y)**5*(-212505+70560*logy*(-1+y)**2+495570*y-318345*y**2
        +23520*y**3+5880*y**4+2352*y**5+1176*y**6-2304*y**7+3453*y**8-1338*y**9
        -35*y**10)-126*r**6*(-1+y)*(168559+13980*logy*(-1+y)**6-997374*y
        +2451495*y**2-3198760*y**3+2329170*y**4-889728*y**5+134308*y**6+5940*y**7
        -6045*y**8+3690*y**9-951*y**10+96*y**11)+840*r**8*(-13327+5100*logy*(
        -1+y)**7+88189*y-246717*y**2+375495*y**3-330870*y**4+162822*y**5
        -36424*y**6-1448*y**7+4690*y**8-4390*y**9+2604*y**10-868*y**11+124*y**12))/(2016000*r**2*(
        -1+y)**7)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr7(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r7 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-720*(-1+y)**7-5655*r**10*(-1+y)**7-5*r**2*(-1+y)**5*(-35+1680*logy*(
        -1+y)**2+1750*y-2555*y**2+608*y**3+305*y**4-226*y**5-15*y**6)+24*r**4*(
        -1+y)**3*(125-500*y+750*y**2-310*y**3-60*y**4+38*y**5+11*y**6)-6*r**6*(
        -1+y)*(-300+450*logy*(-1+y)**6+2250*y-6975*y**2+13910*y**3-17030*y**4
        +12660*y**5-5339*y**6+944*y**7)-20*r**8*(70-490*y+1470*y**2-3518*y**3
        +6545*y**4-7215*y**5+4543*y**6-1561*y**7+228*y**8))/(1800*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-180*(-1+y)**7-595*r**10*(-1+y)**7+801*r**12*(-1+y)**7+r**2*(-1+y)**5*(3599
        -4020*logy*(-1+y)**2-11218*y+9629*y**2-1340*y**3-380*y**4-305*y**5
        +210*y**6+15*y**7)+r**4*(-1+y)**3*(-1025-300*logy*(-1+y)**4+3800*y
        -5100*y**2+2800*y**3+455*y**4-720*y**5+70*y**6+44*y**7)+r**8*(-100
        +700*y-2100*y**2+3500*y**3+505*y**4-12411*y**5+17837*y**6-11711*y**7
        +3990*y**8-570*y**9)-3*r**6*(-900+6300*y-18900*y**2+31500*y**3-32385*y**4
        +21878*y**5-10616*y**6+4314*y**7-1427*y**8+236*y**9))/(900*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-360*(-1+y)**7-1760*r**10*(-1+y)**7+1624*r**12*(-1+y)**7-1127*r**14*(
        -1+y)**7-2*r**4*(-1+y)**3*(6104+660*logy*(-1+y)**4-23756*y+34314*y**2
        -21556*y**3+4729*y**4-552*y**5+458*y**6-32*y**7-33*y**8)+r**2*(-1
        +y)**5*(17916-12720*logy*(-1+y)**2-48552*y+36996*y**2-4240*y**3-1060*y**4
        -496*y**5-503*y**6+334*y**7+25*y**8)-r**6*(-1+y)*(13045+3300*logy*(
        -1+y)**6-74970*y+177525*y**2-220200*y**3+148650*y**4-45312*y**5-4443*y**6
        +10110*y**7-4989*y**8+944*y**9)+2*r**8*(-4480+300*logy*(-1+y)**7+31060*y
        -92130*y**2+151450*y**3-148825*y**4+90399*y**5-39173*y**6+17039*y**7
        -7980*y**8+2660*y**9-380*y**10))/(3600*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-6300*(-1+y)**7-154350*r**10*(-1+y)**7+35805*r**12*(-1+y)**7-28091*r**14*(
        -1+y)**7+14550*r**16*(-1+y)**7-5*r**2*(-1+y)**5*(-114354+63840*logy*(
        -1+y)**2+292548*y-210114*y**2+21280*y**3+5320*y**4+2128*y**5+1274*y**6
        +1493*y**7-970*y**8-75*y**9)-21*r**4*(-1+y)**3*(22229+4380*logy*(-1
        +y)**4-84536*y+118044*y**2-69936*y**3+13104*y**4+876*y**5-804*y**6
        +556*y**7-29*y**8-44*y**9)-105*r**6*(-1+y)*(425+3900*logy*(-1+y)**6
        +1350*y-15075*y**2+39600*y**3-49200*y**4+31380*y**5-8540*y**6-685*y**7
        +1320*y**8-633*y**9+118*y**10)-175*r**8*(446-3122*y+9366*y**2-15610*y**3
        +15610*y**4-9366*y**5+2588*y**6+1360*y**7-2055*y**8+1197*y**9-399*y**10
        +57*y**11))/(126000*r**2*(-1+y)**7)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-50400*(-1+y)**7-3215450*r**10*(-1+y)**7+1335600*r**12*(-1+y)**7-181538*r**14*(
        -1+y)**7+172184*r**16*(-1+y)**7-84105*r**18*(-1+y)**7-25*r**2*(-1
        +y)**5*(-290763+137760*logy*(-1+y)**2+719286*y-497403*y**2+45920*y**3
        +11480*y**4+4592*y**5+2296*y**6+1600*y**7+2071*y**8-1326*y**9-105*y**10)
        -112*r**4*(-1+y)**3*(43851+22620*logy*(-1+y)**4-152784*y+183936*y**2
        -77384*y**3-3274*y**4+4524*y**5+754*y**6-1006*y**7+654*y**8-26*y**9
        -55*y**10)-42*r**6*(-1+y)*(-205173+284940*logy*(-1+y)**6+1515978*y
        -4644765*y**2+7617720*y**3-7137990*y**4+3710016*y**5-903276*y**6+50820*y**7
        -15385*y**8+21570*y**9-10203*y**10+1888*y**11)-280*r**8*(-31969+11700*logy*(
        -1+y)**7+212083*y-595299*y**2+910265*y**3-807890*y**4+402834*y**5
        -93328*y**6-656*y**7+9030*y**8-8130*y**9+4788*y**10-1596*y**11+228*y**12))/(2016000*r**2*(
        -1+y)**7)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr8(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r8 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-2985*r**8*(-1+y)**6+60*logy*(4+9*r**4)*(-1+y)**6+24*r**2*(-1+y)**2*(
        -155+620*y-930*y**2+670*y**3-175*y**4-42*y**5+24*y**6)+(-1+y)**4*(985
        -1730*y+625*y**2+800*y**3-955*y**4+278*y**5+45*y**6)+6*r**4*(120
        -630*y+1305*y**2-1370*y**3-150*y**4+1572*y**5-1087*y**6+240*y**7)
        -4*r**6*(-1250+7500*y-18750*y**2+27280*y**3-26715*y**4+16014*y**5
        -5315*y**6+756*y**7))/(360*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-555*r**8*(-1+y)**6+342*r**10*(-1+y)**6-60*logy*(-2+3*r**2)*(-1+y)**6
        +(-1+y)**4*(-67+254*y-247*y**2+40*y**3+145*y**4-173*y**5+51*y**6
        +9*y**7)+6*r**2*(-1+y)**2*(-50+170*y-195*y**2+70*y**3+50*y**4-12*y**5
        -37*y**6+16*y**7)+r**6*(-410+2460*y-6150*y**2+8200*y**3-7860*y**4
        +8148*y**5-5798*y**6+2268*y**7-378*y**8)+9*r**4*(110-660*y+1650*y**2
        -2200*y**3+1640*y**4-753*y**5+298*y**6-105*y**7+20*y**8))/(180*(-1
        +y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (1650*r**8*(-1+y)**6+3882*r**10*(-1+y)**6-1905*r**12*(-1+y)**6+60*logy*(26
        +75*r**4+30*r**6)*(-1+y)**6+30*r**2*(-1+y)**2*(221-884*y+1326*y**2
        -884*y**3+221*y**4+60*y**5-60*y**7+24*y**8)+(-1+y)**4*(-4582+10724*y
        -6922*y**2+520*y**3+130*y**4+1132*y**5-1359*y**6+402*y**7+75*y**8)
        +15*r**4*(-245+1770*y-5325*y**2+8600*y**3-7950*y**4+4032*y**5-1457*y**6
        +930*y**7-435*y**8+80*y**9)-10*r**6*(200-1380*y+3990*y**2-6220*y**3
        +5565*y**4-1398*y**5-3757*y**6+3780*y**7-1512*y**8+252*y**9))/(3600*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (69300*r**8*(-1+y)**6-13209*r**10*(-1+y)**6-6944*r**12*(-1+y)**6+3585*r**14*(
        -1+y)**6+420*logy*(14+39*r**2-30*r**4+225*r**6)*(-1+y)**6+21*r**2*(
        -1+y)**2*(3989-15176*y+21204*y**2-12576*y**3+2364*y**4+156*y**5+276*y**6
        +36*y**7-249*y**8+96*y**9)+(-1+y)**4*(-31116+68112*y-39936*y**2
        +1960*y**3+490*y**4+196*y**5+3248*y**6-3919*y**7+1160*y**8+225*y**9)
        +105*r**4*(-1352+7992*y-19620*y**2+25560*y**3-18570*y**4+7068*y**5
        -1078*y**6-225*y**7+360*y**8-165*y**9+30*y**10)-35*r**6*(-1045+3570*y
        -825*y**2-12400*y**3+22800*y**4-17220*y**5+6710*y**6-3960*y**7+2835*y**8
        -1134*y**9+189*y**10))/(25200*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (2151450*r**8*(-1+y)**6-804384*r**10*(-1+y)**6+238714*r**12*(-1+y)**6
        -8280*r**14*(-1+y)**6-11151*r**16*(-1+y)**6+840*logy*(52+288*r**2
        -2925*r**4+2028*r**6)*(-1+y)**6+672*r**2*(-1+y)**2*(2688-10392*y+14868*y**2
        -9192*y**3+1938*y**4+72*y**5+12*y**6+57*y**7+12*y**8-53*y**9+20*y**10)
        +(-1+y)**4*(-372891+789462*y-438411*y**2+14560*y**3+3640*y**4+1456*y**5
        +728*y**6+22016*y**7-26665*y**8+7890*y**9+1575*y**10)+630*r**4*(-1359
        +4254*y+1065*y**2-20920*y**3+35190*y**4-25776*y**5+8196*y**6-580*y**7
        -315*y**8+390*y**9-177*y**10+32*y**11)-56*r**6*(38279-260094*y+741495*y**2
        -1140760*y**3+1007670*y**4-494328*y**5+112808*y**6+540*y**7-15570*y**8
        +11340*y**9-4536*y**10+756*y**11))/(403200*(-1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr9(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r9 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (40*(-1+y)**6+110*r**10*(-1+y)**6-r**2*(-1+y)**4*(-210+180*logy*(
        -1+y)**2+600*y-480*y**2+360*y**3-485*y**4+198*y**5+5*y**6)-4*r**4*(
        -1+y)**2*(110-440*y+660*y**2-650*y**3+725*y**4-580*y**5+172*y**6)
        -r**6*(-1+y)*(560+180*logy*(-1+y)**5-2980*y+6410*y**2-7850*y**3
        +6415*y**4-3281*y**5+714*y**6)+2*r**8*(-240+1440*y-3600*y**2+4990*y**3
        -4165*y**4+2031*y**5-517*y**6+51*y**7))/(30*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (120*(-1+y)**6+715*r**10*(-1+y)**6-171*r**12*(-1+y)**6+3*r**6*(-1
        +y)*(-530+540*logy*(-1+y)**5+2110*y-2870*y**2+1070*y**3+1445*y**4
        -2461*y**5+1605*y**6-357*y**7)-r**2*(-1+y)**4*(-2351+1140*logy*(-1
        +y)**2+5842*y-4061*y**2+380*y**3+770*y**4-1072*y**5+444*y**6+12*y**7)
        -r**4*(-1+y)**2*(3955+1320*logy*(-1+y)**4-14500*y+19110*y**2-10100*y**3
        -685*y**4+5664*y**5-4856*y**6+1376*y**7)+r**8*(-650+3900*y-9750*y**2
        +13000*y**3-8895*y**4+1530*y**5+1570*y**6-918*y**7+153*y**8))/(180*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (600*(-1+y)**6+5025*r**10*(-1+y)**6-2952*r**12*(-1+y)**6+575*r**14*(
        -1+y)**6-r**2*(-1+y)**4*(-23927+9060*logy*(-1+y)**2+56914*y-37517*y**2
        +3020*y**3+755*y**4+3002*y**5-4249*y**6+1772*y**7+50*y**8)-60*r**4*(
        -1+y)**2*(50+540*logy*(-1+y)**4+340*y-1590*y**2+2140*y**3-1075*y**4
        -18*y**5+372*y**6-308*y**7+86*y**8)-15*r**6*(-1+y)*(-1465+180*logy*(
        -1+y)**5+7145*y-13840*y**2+13240*y**3-6170*y**4+550*y**5+1390*y**6
        -1100*y**7+238*y**8)-10*r**8*(220+120*logy*(-1+y)**6-1200*y+2640*y**2
        -2920*y**3+1590*y**4-618*y**5+828*y**6-765*y**7+306*y**8-51*y**9))/(1800*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (2800*(-1+y)**6+28000*r**10*(-1+y)**6-30338*r**12*(-1+y)**6+12411*r**14*(
        -1+y)**6-1985*r**16*(-1+y)**6-2*r**2*(-1+y)**4*(-92094+29820*logy*(
        -1+y)**2+214008*y-136824*y**2+9940*y**3+2485*y**4+994*y**5+5747*y**6
        -8216*y**7+3440*y**8+100*y**9)-35*r**6*(-1+y)*(-10429+9180*logy*(
        -1+y)**5+42965*y-62980*y**2+32380*y**3+6760*y**4-10532*y**5+690*y**6
        +2430*y**7-1665*y**8+357*y**9)-14*r**4*(-1+y)**2*(-22301+28080*logy*(
        -1+y)**4+117284*y-232086*y**2+210884*y**3-80801*y**4+5616*y**5-1164*y**6
        +6096*y**7-4964*y**8+1376*y**9)-35*r**8*(4065+1500*logy*(-1+y)**6
        -22890*y+52725*y**2-62800*y**3+39600*y**4-11340*y**5+10*y**6+1180*y**7
        -765*y**8+306*y**9-51*y**10))/(16800*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (8400*(-1+y)**6+194600*r**10*(-1+y)**6-189168*r**12*(-1+y)**6+107716*r**14*(
        -1+y)**6-34148*r**16*(-1+y)**6+4599*r**18*(-1+y)**6-r**2*(-1+y)**4*(
        -816993+236040*logy*(-1+y)**2+1870026*y-1171053*y**2+78680*y**3+19670*y**4
        +7868*y**5+3934*y**6+29248*y**7-42095*y**8+17670*y**9+525*y**10)-42*r**6*(
        -1+y)*(-49306+78120*logy*(-1+y)**5+168410*y-141520*y**2-118880*y**3
        +254740*y**4-129068*y**5+13020*y**6+60*y**7+5115*y**8-3345*y**9+714*y**10)
        -56*r**4*(-1+y)**2*(-53964+42420*logy*(-1+y)**4+258276*y-472254*y**2
        +399676*y**3-142339*y**4+8484*y**5+1414*y**6-946*y**7+3864*y**8-3116*y**9
        +860*y**10)-28*r**8*(66433+19260*logy*(-1+y)**6-379338*y+890565*y**2
        -1091120*y**3+722040*y**4-231036*y**5+19246*y**6+1530*y**7+3360*y**8
        -2295*y**9+918*y**10-153*y**11))/(100800*r**2*(-1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr10(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r10 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (60*(-1+y)**6-105*r**10*(-1+y)**6-r**2*(-1+y)**4*(115-120*logy*(-1
        +y)**2-350*y+295*y**2+140*y**3-325*y**4+122*y**5+5*y**6)-2*r**6*(
        -1+y)*(150+90*logy*(-1+y)**5-840*y+1905*y**2-2135*y**3+1600*y**4
        -869*y**5+207*y**6)-2*r**4*(-1+y)**2*(60-240*y+360*y**2-420*y**3
        +665*y**4-664*y**5+215*y**6)-2*r**8*(10-60*y+150*y**2+140*y**3-260*y**4
        +201*y**5-86*y**6+15*y**7))/(30*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (180*(-1+y)**6-575*r**10*(-1+y)**6+306*r**12*(-1+y)**6+9*r**6*(-1
        +y)*(-180+180*logy*(-1+y)**5+720*y-990*y**2+390*y**3+220*y**4-388*y**5
        +285*y**6-69*y**7)+3*r**2*(-1+y)**4*(-87+120*logy*(-1+y)**2+294*y
        -267*y**2+40*y**3-125*y**4+238*y**5-91*y**6-4*y**7)-2*r**4*(-1+y)**2*(725
        +300*logy*(-1+y)**4-2600*y+3300*y**2-1600*y**3-305*y**4+1404*y**5
        -1426*y**6+430*y**7)-3*r**8*(-60+360*y-900*y**2+1200*y**3-390*y**4
        -92*y**5+177*y**6-90*y**7+15*y**8))/(180*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (900*(-1+y)**6-4525*r**10*(-1+y)**6+5007*r**12*(-1+y)**6-1630*r**14*(
        -1+y)**6+30*r**6*(-1+y)*(925+60*logy*(-1+y)**5-4685*y+9520*y**2
        -9720*y**3+5010*y**4-1104*y**5-195*y**6+300*y**7-69*y**8)+r**2*(-1
        +y)**4*(1393+1860*logy*(-1+y)**2-926*y-1397*y**2+620*y**3+155*y**4
        -1558*y**5+2821*y**6-1088*y**7-50*y**8)-5*r**4*(-1+y)**2*(-4361+5100*logy*(
        -1+y)**4+22544*y-44016*y**2+39544*y**3-14986*y**4+372*y**5+2302*y**6
        -2188*y**7+645*y**8)-10*r**8*(-480+120*logy*(-1+y)**6+3000*y-7860*y**2
        +11080*y**3-8910*y**4+4536*y**5-1186*y**6+225*y**7-90*y**8+15*y**9))/(1800*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (4200*(-1+y)**6-46200*r**10*(-1+y)**6+48398*r**12*(-1+y)**6-33985*r**14*(
        -1+y)**6+8235*r**16*(-1+y)**6+2*r**2*(-1+y)**4*(15626+4620*logy*(
        -1+y)**2-26632*y+8696*y**2+1540*y**3+385*y**4+154*y**5-3073*y**6
        +5444*y**7-2110*y**8-100*y**9)-70*r**4*(-1+y)**2*(-8193+5400*logy*(
        -1+y)**4+38172*y-68058*y**2+56172*y**3-19443*y**4+1080*y**5+640*y**7
        -590*y**8+172*y**9)-35*r**6*(-1+y)*(-15721+8700*logy*(-1+y)**5+69905*y
        -118060*y**2+89060*y**3-22780*y**4-4144*y**5+1590*y**6+930*y**7-915*y**8
        +207*y**9)-175*r**8*(201+300*logy*(-1+y)**6-906*y+1365*y**2-320*y**3
        -1260*y**4+1404*y**5-398*y**6-28*y**7+45*y**8-18*y**9+3*y**10))/(16800*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (12600*(-1+y)**6-312550*r**10*(-1+y)**6+264348*r**12*(-1+y)**6-267414*r**14*(
        -1+y)**6+137752*r**16*(-1+y)**6-26775*r**18*(-1+y)**6+3*r**2*(-1+y)**4*(70159
        +10080*logy*(-1+y)**2-130238*y+55039*y**2+3360*y**3+840*y**4+336*y**5
        +168*y**6-5304*y**7+9285*y**8-3610*y**9-175*y**10)-126*r**6*(-1+y)*(
        -31027+28140*logy*(-1+y)**5+126995*y-183640*y**2+89840*y**3+25430*y**4
        -33226*y**5+4690*y**6+770*y**7+705*y**8-615*y**9+138*y**10)-28*r**4*(
        -1+y)**2*(-171963+92940*logy*(-1+y)**4+780792*y-1357068*y**2+1090592*y**3
        -365588*y**4+18588*y**5+3098*y**6-272*y**7+4098*y**8-3712*y**9+1075*y**10)
        -420*r**8*(2200+1080*logy*(-1+y)**6-12120*y+27060*y**2-30680*y**3
        +17610*y**4-3804*y**5-446*y**6+300*y**7-40*y**8+45*y**9-18*y**10+3*y**11))/(100800*r**2*(
        -1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr11(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r11 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-20*(-1+y)**6-255*r**10*(-1+y)**6+r**2*(-1+y)**4*(275-120*logy*(
        -1+y)**2-670*y+455*y**2+300*y**3-565*y**4+186*y**5+5*y**6)+2*r**4*(
        -1+y)**2*(-120+480*y-720*y**2+180*y**3+805*y**4-920*y**5+283*y**6)
        +2*r**6*(-1+y)*(290+90*logy*(-1+y)**5-1540*y+3305*y**2-4095*y**3
        +3300*y**4-1641*y**5+351*y**6)-2*r**8*(-410+2460*y-6150*y**2+8700*y**3
        -7420*y**4+3711*y**5-986*y**6+105*y**7))/(30*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-60*(-1+y)**6-1625*r**10*(-1+y)**6+450*r**12*(-1+y)**6-3*r**6*(-1
        +y)*(-220+540*logy*(-1+y)**5+560*y+230*y**2-2030*y**3+3100*y**4
        -2804*y**5+1575*y**6-351*y**7)+r**2*(-1+y)**4*(-355+120*logy*(-1+y)**2
        +830*y-535*y**2+40*y**3+775*y**4-1226*y**5+417*y**6+12*y**7)+2*r**4*(
        -1+y)**2*(475+420*logy*(-1+y)**4-1480*y+1380*y**2-80*y**3-1075*y**4
        +2124*y**5-1946*y**6+566*y**7)+r**8*(1300-7800*y+19500*y**2-26000*y**3
        +17250*y**4-2604*y**5-3281*y**6+1890*y**7-315*y**8))/(180*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-300*(-1+y)**6-11875*r**10*(-1+y)**6+7989*r**12*(-1+y)**6-1730*r**14*(
        -1+y)**6-30*r**6*(-1+y)*(965+60*logy*(-1+y)**5-4885*y+9920*y**2
        -10120*y**3+5210*y**4-808*y**5-675*y**6+540*y**7-117*y**8)+r**2*(-1
        +y)**4*(-11889+3420*logy*(-1+y)**2+27198*y-17019*y**2+1140*y**3+285*y**4
        +3174*y**5-4813*y**6+1664*y**7+50*y**8)+5*r**4*(-1+y)**2*(-2269+5340*logy*(
        -1+y)**4+14416*y-32304*y**2+32216*y**3-13394*y**4-12*y**5+3398*y**6
        -2972*y**7+849*y**8)+10*r**8*(20+120*logy*(-1+y)**6-360*y**2+1080*y**3
        -1410*y**4+24*y**5+1666*y**6-1575*y**7+630*y**8-105*y**9))/(1800*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-1400*(-1+y)**6-46200*r**10*(-1+y)**6+81186*r**12*(-1+y)**6-38927*r**14*(
        -1+y)**6+6885*r**16*(-1+y)**6+2*r**2*(-1+y)**4*(-60818+15540*logy*(
        -1+y)**2+137176*y-84128*y**2+5180*y**3+1295*y**4+518*y**5+6209*y**6
        -9252*y**7+3230*y**8+100*y**9)+35*r**6*(-1+y)*(-12889+6780*logy*(
        -1+y)**5+57665*y-98380*y**2+75780*y**3-20940*y**4-2592*y**5+150*y**6
        +2370*y**7-1635*y**8+351*y**9)+14*r**4*(-1+y)**2*(-26157+25560*logy*(
        -1+y)**4+130188*y-246402*y**2+215388*y**3-79407*y**4+5112*y**5-648*y**6
        +4672*y**7-3998*y**8+1132*y**9)+175*r**8*(201+300*logy*(-1+y)**6-906*y
        +1365*y**2-320*y**3-1260*y**4+1404*y**5-734*y**6+452*y**7-315*y**8
        +126*y**9-21*y**10))/(16800*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-600*(-1+y)**6+1850*r**10*(-1+y)**6+55308*r**12*(-1+y)**6-47126*r**14*(
        -1+y)**6+17752*r**16*(-1+y)**6-2655*r**18*(-1+y)**6+r**2*(-1+y)**4*(
        -88683+20640*logy*(-1+y)**2+198006*y-119643*y**2+6880*y**3+1720*y**4
        +688*y**5+344*y**6+4568*y**7-6745*y**8+2370*y**9+75*y**10)+6*r**6*(
        -1+y)*(-69233+64260*logy*(-1+y)**5+281905*y-403160*y**2+188960*y**3
        +66170*y**4-77494*y**5+10710*y**6-570*y**7+4995*y**8-3285*y**9+702*y**10)
        +4*r**4*(-1+y)**2*(-114831+82380*logy*(-1+y)**4+541704*y-977316*y**2
        +816304*y**3-286456*y**4+16476*y**5+2746*y**6-1144*y**7+5946*y**8-5024*y**9
        +1415*y**10)+20*r**8*(5404+3240*logy*(-1+y)**6-29184*y+63240*y**2
        -68120*y**3+34890*y**4-4236*y**5-2534*y**6-180*y**7+1320*y**8-945*y**9
        +378*y**10-63*y**11))/(14400*r**2*(-1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr12(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r12 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-60*(-1+y)**6-265*r**10*(-1+y)**6+2*r**4*(-1+y)**3*(-200+600*y-600*y**2
        +600*y**3-815*y**4+349*y**5)+5*r**2*(-1+y)**4*(-31+48*logy*(-1+y)**2
        +110*y-103*y**2+76*y**3-97*y**4+42*y**5+y**6)+2*r**6*(-1+y)*(390
        +90*logy*(-1+y)**5-2040*y+4305*y**2-5195*y**3+4105*y**4-1982*y**5
        +411*y**6)-2*r**8*(-430+2580*y-6450*y**2+9120*y**3-7770*y**4+3879*y**5
        -1028*y**6+109*y**7))/(30*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-180*(-1+y)**6-1685*r**10*(-1+y)**6+468*r**12*(-1+y)**6+4*r**4*(-1
        +y)**3*(-905+300*logy*(-1+y)**3+2415*y-1965*y**2+355*y**3+525*y**4
        -873*y**5+349*y**6)-9*r**6*(-1+y)*(-180+180*logy*(-1+y)**5+720*y
        -990*y**2+390*y**3+550*y**4-974*y**5+625*y**6-137*y**7)+r**2*(-1+y)**4*(
        -2183+1320*logy*(-1+y)**2+5686*y-4163*y**2+440*y**3+785*y**4-1078*y**5
        +471*y**6+12*y**7)+r**8*(1580-9480*y+23700*y**2-31600*y**3+21360*y**4
        -4080*y**5-3175*y**6+1962*y**7-327*y**8))/(180*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-180*(-1+y)**6-2755*r**10*(-1+y)**6+1671*r**12*(-1+y)**6-360*r**14*(
        -1+y)**6+r**4*(-1+y)**3*(-325+6180*logy*(-1+y)**3-5205*y+14475*y**2
        -11005*y**3+1545*y**4+1749*y**5-2677*y**6+1047*y**7)+r**2*(-1+y)**4*(
        -4601+1980*logy*(-1+y)**2+11182*y-7571*y**2+660*y**3+165*y**4+606*y**5
        -857*y**6+376*y**7+10*y**8)+6*r**6*(-1+y)*(-710+120*logy*(-1+y)**5
        +3430*y-6560*y**2+6160*y**3-2780*y**4+82*y**5+875*y**6-640*y**7+137*y**8)
        +2*r**8*(820+120*logy*(-1+y)**6-4800*y+11640*y**2-14920*y**3+10590*y**4
        -4812*y**5+2542*y**6-1635*y**7+654*y**8-109*y**9))/(360*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-4200*(-1+y)**6-93100*r**10*(-1+y)**6+93310*r**12*(-1+y)**6-41111*r**14*(
        -1+y)**6+7165*r**16*(-1+y)**6+14*r**4*(-1+y)**3*(21351+26880*logy*(
        -1+y)**3-90933*y+131253*y**2-70631*y**3+6720*y**4+1344*y**5+2448*y**6
        -3608*y**7+1396*y**8)+10*r**2*(-1+y)**4*(-17856+6300*logy*(-1+y)**2
        +42012*y-27306*y**2+2100*y**3+525*y**4+210*y**5+1155*y**6-1660*y**7
        +730*y**8+20*y**9)+35*r**6*(-1+y)*(-10081+8700*logy*(-1+y)**5+41705*y
        -61660*y**2+32660*y**3+5420*y**4-9784*y**5+270*y**6+2970*y**7-1935*y**8
        +411*y**9)+35*r**8*(4645+1500*logy*(-1+y)**6-26370*y+61425*y**2-74400*y**3
        +48300*y**4-14820*y**5-70*y**6+2340*y**7-1635*y**8+654*y**9-109*y**10))/(16800*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-12600*(-1+y)**6-467950*r**10*(-1+y)**6+575820*r**12*(-1+y)**6-378742*r**14*(
        -1+y)**6+132304*r**16*(-1+y)**6-19341*r**18*(-1+y)**6+28*r**4*(-1
        +y)**3*(100161+80580*logy*(-1+y)**3-381063*y+501933*y**2-247891*y**3
        +20145*y**4+4029*y**5+1343*y**6+3147*y**7-4539*y**8+1745*y**9)+5*r**2*(
        -1+y)**4*(-158289+48720*logy*(-1+y)**2+365298*y-231369*y**2+16240*y**3
        +4060*y**4+1624*y**5+812*y**6+5864*y**7-8515*y**8+3750*y**9+105*y**10)
        +126*r**6*(-1+y)*(-17021+23220*logy*(-1+y)**5+61885*y-65720*y**2
        -11680*y**3+63890*y**4-35998*y**5+3870*y**6-290*y**7+2065*y**8-1295*y**9
        +274*y**10)+28*r**8*(57922+15840*logy*(-1+y)**6-331692*y+781710*y**2
        -963080*y**3+643110*y**4-209724*y**5+19114*y**6-1080*y**7+6840*y**8
        -4905*y**9+1962*y**10-327*y**11))/(100800*r**2*(-1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr13(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r13 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (120*(-1+y)**5+675*r**10*(-1+y)**5-r**2*(-1+y)**3*(55+240*logy*(-1
        +y)**2+130*y-305*y**2+1940*y**3-2905*y**4+1046*y**5+15*y**6)+10*r**8*(224
        -1120*y+2240*y**2-2498*y**3+1540*y**4-479*y**5+57*y**6)-6*r**6*(310
        +90*logy*(-1+y)**5-1640*y+3505*y**2-4435*y**3+3905*y**4-2212*y**5
        +519*y**6)-12*r**4*(-30+150*y-300*y**2+635*y**3-1465*y**4+1947*y**5
        -1217*y**6+280*y**7))/(90*r**2*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (120*(-1+y)**5+1300*r**10*(-1+y)**5-387*r**12*(-1+y)**5+3*r**6*(-260
        +1080*logy*(-1+y)**5+220*y+2260*y**2-5860*y**3+6575*y**4-4735*y**5
        +2415*y**6-519*y**7)-r**2*(-1+y)**3*(-2752+1200*logy*(-1+y)**2+6704*y
        -4552*y**2+400*y**3+1495*y**4-2114*y**5+783*y**6+12*y**7)+5*r**8*(32
        -160*y+320*y**2-320*y**3-227*y**4+511*y**5-285*y**6+57*y**7)-r**4*(
        -1+y)*(4405+2220*logy*(-1+y)**4-15400*y+18660*y**2-8000*y**3-3235*y**4
        +9048*y**5-7862*y**6+2240*y**7))/(180*r**2*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (300*(-1+y)**5+3150*r**10*(-1+y)**5-3114*r**12*(-1+y)**5+725*r**14*(
        -1+y)**5+15*r**6*(2015+60*logy*(-1+y)**5-10135*y+20420*y**2-20620*y**3
        +10460*y**4-1774*y**5-965*y**6+820*y**7-173*y**8)-25*r**8*(260+24*logy*(
        -1+y)**5-1324*y+2708*y**2-2788*y**3+1454*y**4-160*y**5-190*y**6
        +95*y**7-19*y**8)-r**2*(-1+y)**3*(-16814+5520*logy*(-1+y)**2+39148*y
        -25094*y**2+1840*y**3+460*y**4+2974*y**5-4163*y**6+1564*y**7+25*y**8)
        -30*r**4*(-1+y)*(-195+960*logy*(-1+y)**4+1740*y-4530*y**2+4940*y**3
        -2195*y**4-9*y**5+596*y**6-499*y**7+140*y**8))/(900*r**2*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (8400*(-1+y)**5-24150*r**10*(-1+y)**5-154896*r**12*(-1+y)**5+89635*r**14*(
        -1+y)**5-16875*r**16*(-1+y)**5-175*r**8*(-343+900*logy*(-1+y)**5
        +815*y+620*y**2-3620*y**3+4060*y**4-1712*y**5+666*y**6-570*y**7+285*y**8
        -57*y**9)-2*r**2*(-1+y)**3*(-412173+114240*logy*(-1+y)**2+938586*y
        -583533*y**2+38080*y**3+9520*y**4+3808*y**5+34454*y**6-48112*y**7+18230*y**8
        +300*y**9)-210*r**4*(-1+y)*(-10114+10380*logy*(-1+y)**4+50836*y
        -97014*y**2+85436*y**3-31739*y**4+2076*y**5-324*y**6+1956*y**7-1609*y**8
        +448*y**9)-105*r**6*(-26575+14580*logy*(-1+y)**5+118295*y-200140*y**2
        +151540*y**3-39320*y**4-6716*y**5+1170*y**6+3510*y**7-2475*y**8+519*y**9))/(50400*r**2*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (8400*(-1+y)**5-102550*r**10*(-1+y)**5-182112*r**12*(-1+y)**5+220766*r**14*(
        -1+y)**5-93656*r**16*(-1+y)**5+14805*r**18*(-1+y)**5-140*r**8*(-13042
        +3240*logy*(-1+y)**5+61970*y-115840*y**2+105040*y**3-44420*y**4+5644*y**5
        +540*y**6+630*y**7-570*y**8+285*y**9-57*y**10)-r**2*(-1+y)**3*(-1252737
        +305760*logy*(-1+y)**2+2811234*y-1711377*y**2+101920*y**3+25480*y**4
        +10192*y**5+5096*y**6+58712*y**7-81955*y**8+31230*y**9+525*y**10)-42*r**6*(
        -137107+137340*logy*(-1+y)**5+548195*y-753040*y**2+295240*y**3+195730*y**4
        -176486*y**5+22890*y**6+570*y**7+7455*y**8-4965*y**9+1038*y**10)-56*r**4*(
        -1+y)*(-115464+81120*logy*(-1+y)**4+542976*y-976704*y**2+813376*y**3
        -284464*y**4+16224*y**5+2704*y**6-1381*y**7+6204*y**8-5051*y**9+1400*y**10))/(100800*r**2*(
        -1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr14(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r14 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (60*(-1+y)**6+630*r**10*(-1+y)**6-6*r**4*(-1+y)**2*(60-240*y+360*y**2
        -260*y**3+105*y**4-20*y**5+y**6)-r**2*(-1+y)**4*(-130+300*logy*(-1
        +y)**2+560*y-580*y**2+100*y**3+115*y**4-74*y**5+15*y**6)-3*r**6*(
        -1+y)*(520+180*logy*(-1+y)**5-2780*y+6010*y**2-7110*y**3+5095*y**4
        -2039*y**5+352*y**6)+2*r**8*(-1010+6060*y-15150*y**2+21310*y**3-18375*y**4
        +9390*y**5-2573*y**6+288*y**7))/(90*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (60*(-1+y)**6+1190*r**10*(-1+y)**6-333*r**12*(-1+y)**6-r**4*(-1+y)**2*(605
        +120*logy*(-1+y)**4-2300*y+3210*y**2-1900*y**3+265*y**4+216*y**5
        -64*y**6+4*y**7)-r**2*(-1+y)**4*(-428+420*logy*(-1+y)**2+1276*y
        -1058*y**2+140*y**3+35*y**4+86*y**5-57*y**6+12*y**7)-3*r**6*(-250
        +1500*y-3750*y**2+5000*y**3-3375*y**4+178*y**5+1397*y**6-876*y**7
        +176*y**8)+r**8*(-1490+8940*y-22350*y**2+29800*y**3-20685*y**4+4446*y**5
        +2659*y**6-1728*y**7+288*y**8))/(180*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (300*(-1+y)**6+8500*r**10*(-1+y)**6-5123*r**12*(-1+y)**6+1145*r**14*(
        -1+y)**6+5*r**6*(-1+y)*(-1375+60*logy*(-1+y)**5+6815*y-13480*y**2
        +13280*y**3-6490*y**4+2138*y**5-2170*y**6+1490*y**7-352*y**8)+5*r**4*(
        -1+y)**2*(-1349+60*logy*(-1+y)**4+5456*y-8304*y**2+5656*y**3-1474*y**4
        +84*y**5-146*y**6+44*y**7-3*y**8)-2*r**2*(-1+y)**4*(-1724+1320*logy*(
        -1+y)**2+4768*y-3704*y**2+440*y**3+110*y**4+44*y**5+172*y**6-116*y**7
        +25*y**8)-20*r**8*(420+60*logy*(-1+y)**6-2460*y+5970*y**2-7660*y**3
        +5445*y**4-2331*y**5+1126*y**6-720*y**7+288*y**8-48*y**9))/(1800*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (2100*(-1+y)**6+35700*r**10*(-1+y)**6-66528*r**12*(-1+y)**6+32641*r**14*(
        -1+y)**6-6075*r**16*(-1+y)**6+105*r**6*(-1+y)*(-1915+300*logy*(-1
        +y)**5+9275*y-17800*y**2+16800*y**3-7650*y**4+1230*y**5+300*y**6
        -580*y**7+380*y**8-88*y**9)+84*r**4*(-1+y)**2*(-1649+420*logy*(-1
        +y)**4+7016*y-11364*y**2+8416*y**3-2524*y**4+84*y**5+39*y**6-46*y**7
        +14*y**8-y**9)-2*r**2*(-1+y)**4*(-15564+10920*logy*(-1+y)**2+42048*y
        -31944*y**2+3640*y**3+910*y**4+364*y**5+182*y**6+1004*y**7-685*y**8
        +150*y**9)-35*r**8*(2615+2700*logy*(-1+y)**6-12990*y+24375*y**2-19000*y**3
        +750*y**4+7800*y**5-5110*y**6+3120*y**7-2160*y**8+864*y**9-144*y**10))/(25200*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (4200*(-1+y)**6-280700*r**10*(-1+y)**6-129612*r**12*(-1+y)**6+147364*r**14*(
        -1+y)**6-60364*r**16*(-1+y)**6+9639*r**18*(-1+y)**6+42*r**6*(-1+y)*(
        -21742+10440*logy*(-1+y)**5+98270*y-170440*y**2+135640*y**3-41720*y**4
        -2096*y**5+1740*y**6+1320*y**7-2395*y**8+1535*y**9-352*y**10)+28*r**4*(
        -1+y)**2*(-26163+8340*logy*(-1+y)**4+112992*y-186168*y**2+140792*y**3
        -43538*y**4+1668*y**5+278*y**6+208*y**7-222*y**8+68*y**9-5*y**10)
        -r**2*(-1+y)**4*(-70437+49560*logy*(-1+y)**2+190434*y-144777*y**2
        +16520*y**3+4130*y**4+1652*y**5+826*y**6+472*y**7+3445*y**8-2370*y**9
        +525*y**10)-28*r**8*(-2087+21060*logy*(-1+y)**6+33582*y-147135*y**2
        +301480*y**3-331410*y**4+195744*y**5-53684*y**6+630*y**7+6060*y**8
        -4320*y**9+1728*y**10-288*y**11))/(100800*r**2*(-1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr15(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r15 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-240*(-1+y)**6+195*r**10*(-1+y)**6+6*r**6*(-1+y)**2*(-260+90*logy*(
        -1+y)**4+1130*y-1875*y**2+1730*y**3-1455*y**4+472*y**5)-r**2*(-1
        +y)**4*(-245+240*logy*(-1+y)**2+730*y-605*y**2-1480*y**3+2255*y**4
        -766*y**5+15*y**6)+24*r**4*(-1+y)**2*(35-140*y+210*y**2-270*y**3
        +480*y**4-440*y**5+134*y**6)+4*r**8*(130-780*y+1950*y**2-2540*y**3
        +1275*y**4-78*y**5-197*y**6+60*y**7))/(180*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-60*(-1+y)**6-70*r**10*(-1+y)**6-9*r**12*(-1+y)**6-3*r**6*(-1+y)**2*(130
        +270*logy*(-1+y)**4-250*y-165*y**2+650*y**3-545*y**4+427*y**5-118*y**6)
        +r**2*(-1+y)**4*(-196+30*logy*(-1+y)**2+422*y-241*y**2+10*y**3+295*y**4
        -407*y**5+144*y**6-3*y**7)+r**4*(-1+y)**2*(745+420*logy*(-1+y)**4
        -2560*y+3000*y**2-1160*y**3-715*y**4+2064*y**5-1856*y**6+536*y**7)
        +r**8*(-20+120*y-300*y**2+400*y**3-255*y**4-402*y**5+427*y**6-180*y**7
        +30*y**8))/(90*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-600*(-1+y)**6-2400*r**10*(-1+y)**6+1154*r**12*(-1+y)**6-105*r**14*(
        -1+y)**6+5*r**6*(-1+y)**2*(6065+660*logy*(-1+y)**4-23600*y+34080*y**2
        -21400*y**3+4690*y**4+672*y**5-1753*y**6+472*y**7)+r**2*(-1+y)**4*(
        -4204+720*logy*(-1+y)**2+9128*y-5284*y**2+240*y**3+60*y**4+2364*y**5
        -3193*y**6+1154*y**7-25*y**8)+30*r**4*(-1+y)**2*(-679+720*logy*(-1
        +y)**4+3436*y-6594*y**2+5836*y**3-2179*y**4-12*y**5+548*y**6-472*y**7
        +134*y**8)-10*r**8*(380+60*logy*(-1+y)**6-2220*y+5370*y**2-6860*y**3
        +4845*y**4-1794*y**5+659*y**6-300*y**7+120*y**8-20*y**9))/(1800*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-4200*(-1+y)**6-69825*r**10*(-1+y)**6+40404*r**12*(-1+y)**6-13538*r**14*(
        -1+y)**6+1740*r**16*(-1+y)**6+210*r**6*(-1+y)**2*(2731+2520*logy*(
        -1+y)**4-8404*y+7566*y**2-4*y**3-2519*y**4+504*y**5+159*y**6-221*y**7
        +59*y**8)+r**2*(-1+y)**4*(-36579+4620*logy*(-1+y)**2+77778*y-43509*y**2
        +1540*y**3+385*y**4+154*y**5+13727*y**6-18406*y**7+6740*y**8-150*y**9)
        +84*r**4*(-1+y)**2*(-8193+4440*logy*(-1+y)**4+37212*y-64698*y**2
        +52012*y**3-17443*y**4+888*y**5-177*y**6+1128*y**7-952*y**8+268*y**9)
        +350*r**8*(562-3372*y+8430*y**2-11240*y**3+8430*y**4-3372*y**5+568*y**6
        -72*y**7+45*y**8-18*y**9+3*y**10))/(25200*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-16800*(-1+y)**6-1251950*r**10*(-1+y)**6+637392*r**12*(-1+y)**6-284774*r**14*(
        -1+y)**6+81608*r**16*(-1+y)**6-10395*r**18*(-1+y)**6+42*r**6*(-1+y)**2*(56351
        +176220*logy*(-1+y)**4-49184*y-278664*y**2+538216*y**3-310774*y**4
        +35244*y**5+5874*y**6+2964*y**7-3551*y**8+944*y**9)+r**2*(-1+y)**4*(
        -121767+3360*logy*(-1+y)**2+246894*y-126807*y**2+1120*y**3+280*y**4
        +112*y**5+56*y**6+46832*y**7-62605*y**8+23130*y**9-525*y**10)+112*r**4*(
        -1+y)**2*(-59373+24540*logy*(-1+y)**4+262032*y-442128*y**2+343832*y**3
        -110498*y**4+4908*y**5+818*y**6-602*y**7+2868*y**8-2392*y**9+670*y**10)
        +280*r**8*(18749+2340*logy*(-1+y)**6-110154*y+268365*y**2-346120*y**3
        +247890*y**4-92136*y**5+13016*y**6+360*y**7-270*y**8+180*y**9-72*y**10
        +12*y**11))/(201600*r**2*(-1+y)**6)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr16(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r16 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (-240*(-1+y)**5+1275*r**10*(-1+y)**5-r**2*(-1+y)**3*(-845+240*logy*(
        -1+y)**2+1930*y-1205*y**2-3520*y**3+5375*y**4-1774*y**5+15*y**6)
        +20*r**8*(22-110*y+220*y**2-484*y**3+485*y**4-241*y**5+48*y**6)+6*r**6*(380
        +90*logy*(-1+y)**5-1990*y+4205*y**2-5665*y**3+6165*y**4-4071*y**5
        +1024*y**6)+24*r**4*(-35+175*y-350*y**2+770*y**3-1770*y**4+2262*y**5
        -1355*y**6+303*y**7))/(360*r**2*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (-20*(-1+y)**5+115*r**10*(-1+y)**5-66*r**12*(-1+y)**5+r**2*(-1+y)**3*(
        -259+120*logy*(-1+y)**2+638*y-439*y**2+40*y**3+235*y**4-323*y**5
        +111*y**6-y**7)+10*r**8*(26-130*y+260*y**2-260*y**3+97*y**4+13*y**5
        -20*y**6+4*y**7)+2*r**4*(-1+y)*(205+180*logy*(-1+y)**4-640*y+600*y**2
        -40*y**3-485*y**4+892*y**5-728*y**6+202*y**7)+r**6*(-80-540*logy*(
        -1+y)**5+940*y-3230*y**2+5030*y**3-4300*y**4+2643*y**5-1235*y**6
        +256*y**7))/(60*r**2*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (-600*(-1+y)**5+7100*r**10*(-1+y)**5-4324*r**12*(-1+y)**5+1575*r**14*(
        -1+y)**5+r**2*(-1+y)**3*(-19976+7680*logy*(-1+y)**2+47632*y-31496*y**2
        +2560*y**3+640*y**4+5656*y**5-7597*y**6+2666*y**7-25*y**8)-50*r**8*(
        -440+12*logy*(-1+y)**5+2188*y-4346*y**2+4306*y**3-2123*y**4+571*y**5
        -160*y**6+80*y**7-16*y**8)+10*r**4*(-1+y)*(-2690+4380*logy*(-1+y)**4
        +15140*y-31470*y**2+29740*y**3-11815*y**4-636*y**5+4174*y**6-3316*y**7
        +909*y**8)+5*r**6*(-13025+660*logy*(-1+y)**5+64465*y-127280*y**2
        +125080*y**3-60890*y**4+9430*y**5+6325*y**6-4985*y**7+1024*y**8))/(3600*r**2*(
        -1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-2100*(-1+y)**5+27825*r**10*(-1+y)**5-25872*r**12*(-1+y)**5+17192*r**14*(
        -1+y)**5-4800*r**16*(-1+y)**5+r**2*(-1+y)**3*(-116853+40740*logy*(
        -1+y)**2+274446*y-177963*y**2+13580*y**3+3395*y**4+1358*y**5+16429*y**6
        -21887*y**7+7780*y**8-75*y**9)+700*r**8*(-79+395*y-790*y**2+790*y**3
        -395*y**4+79*y**5-33*y**6+30*y**7-15*y**8+3*y**9)+105*r**6*(-4860
        +3720*logy*(-1+y)**5+20580*y-31860*y**2+19460*y**3-430*y**4-3634*y**5
        +330*y**6+935*y**7-625*y**8+128*y**9)+84*r**4*(-1+y)*(-5488+4140*logy*(
        -1+y)**4+26092*y-47418*y**2+39892*y**3-14113*y**4+828*y**5-387*y**6
        +1418*y**7-1112*y**8+303*y**9))/(25200*r**2*(-1+y)**5)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-5600*(-1+y)**5-258650*r**10*(-1+y)**5-22064*r**12*(-1+y)**5+80990*r**14*(
        -1+y)**5-51048*r**16*(-1+y)**5+11655*r**18*(-1+y)**5+r**2*(-1+y)**3*(
        -441661+144480*logy*(-1+y)**2+1027802*y-658381*y**2+48160*y**3+12040*y**4
        +4816*y**5+2408*y**6+37376*y**7-49615*y**8+17790*y**9-175*y**10)+280*r**8*(
        -7439+780*logy*(-1+y)**5+36415*y-70880*y**2+68280*y**3-32190*y**4
        +5658*y**5+130*y**6-170*y**7+160*y**8-80*y**9+16*y**10)+560*r**4*(
        -1+y)*(-5189+2940*logy*(-1+y)**4+23696*y-41424*y**2+33496*y**3
        -11314*y**4+588*y**5+98*y**6-152*y**7+478*y**8-372*y**9+101*y**10)
        +14*r**6*(-107807+245340*logy*(-1+y)**5+293695*y+25960*y**2-843760*y**3
        +1035230*y**4-452386*y**5+40890*y**6+870*y**7+15755*y**8-10015*y**9
        +2048*y**10))/(134400*r**2*(-1+y)**5)

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr17(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r17 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (505*r**8*(-1+y)**6+60*logy*(4+3*r**4)*(-1+y)**6-(-1+y)**4*(385-1010*y
        +745*y**2-355*y**4+198*y**5+5*y**6)-8*r**2*(-1+y)**2*(-115+460*y
        -690*y**2+570*y**3-265*y**4+38*y**5+8*y**6)+6*r**4*(-100+630*y-1665*y**2
        +2490*y**3-2250*y**4+1212*y**5-365*y**6+48*y**7)+4*r**6*(-110+660*y
        -1650*y**2+2700*y**3-2935*y**4+1878*y**5-663*y**6+100*y**7))/(120*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (340*r**8*(-1+y)**6-225*r**10*(-1+y)**6+60*logy*(4+5*r**2)*(-1+y)**6
        -(-1+y)**4*(380-1000*y+740*y**2-80*y**3+25*y**4-203*y**5+111*y**6
        +3*y**7)-r**2*(-1+y)**2*(-425+1400*y-1500*y**2+400*y**3+695*y**4
        -648*y**5+82*y**6+32*y**7)+9*r**4*(-40+240*y-600*y**2+800*y**3-555*y**4
        +129*y**5+71*y**6-57*y**7+12*y**8)+r**6*(200-1200*y+3000*y**2-4000*y**3
        +4125*y**4-3834*y**5+2399*y**6-900*y**7+150*y**8))/(180*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (1750*r**8*(-1+y)**6-4206*r**10*(-1+y)**6+1715*r**12*(-1+y)**6-60*logy*(
        -42+40*r**2+45*r**4+10*r**6)*(-1+y)**6-10*r**2*(-1+y)**2*(-491+2204*y
        -3786*y**2+3004*y**3-991*y**4+444*y**5-416*y**6+44*y**7+24*y**8)-(
        -1+y)**4*(1994-6508*y+5774*y**2-840*y**3-210*y**4+276*y**5-1637*y**6
        +886*y**7+25*y**8)+10*r**6*y*(-60+330*y-740*y**2+855*y**3+378*y**4
        -1823*y**5+1500*y**6-600*y**7+100*y**8)+15*r**4*(-145+690*y-1185*y**2
        +680*y**3+390*y**4-480*y**5-205*y**6+450*y**7-243*y**8+48*y**9))/(3600*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==3):
        return (-700*r**8*(-1+y)**6-5481*r**10*(-1+y)**6+5621*r**12*(-1+y)**6-1670*r**14*(
        -1+y)**6-420*logy*(-6+61*r**2+15*r**4)*(-1+y)**6-(-1+y)**4*(-3056
        +3592*y+724*y**2-840*y**3-210*y**4-84*y**5+308*y**6-1599*y**7+860*y**8
        +25*y**9)-7*r**2*(-1+y)**2*(-3747+18648*y-35292*y**2+30848*y**3-11372*y**4
        +732*y**5+672*y**6-508*y**7+47*y**8+32*y**9)+175*r**6*(38-228*y+570*y**2
        -760*y**3+570*y**4-228*y**5+88*y**6-104*y**7+75*y**8-30*y**9+5*y**10)
        +105*r**4*(-321+1866*y-4485*y**2+5680*y**3-3960*y**4+1404*y**5-144*y**6
        -75*y**7+60*y**8-31*y**9+6*y**10))/(8400*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (-5950*r**8*(-1+y)**6-86688*r**10*(-1+y)**6+218330*r**12*(-1+y)**6-149144*r**14*(
        -1+y)**6+34965*r**16*(-1+y)**6+840*logy*(44-2000*r**2+27*r**4+1020*r**6)*(
        -1+y)**6-1120*r**2*(-1+y)**2*(-1716+8364*y-15546*y**2+13364*y**3
        -4841*y**4+300*y**5+50*y**6+85*y**7-60*y**8+5*y**9+4*y**10)-(-1
        +y)**4*(-281913+526866*y-226473*y**2-12320*y**3-3080*y**4-1232*y**5
        -616*y**6+6848*y**7-32995*y**8+17670*y**9+525*y**10)+280*r**6*(5917
        -32442*y+71925*y**2-80600*y**3+45150*y**4-8880*y**5-1580*y**6+1080*y**7
        -1230*y**8+900*y**9-360*y**10+60*y**11)+126*r**4*(-30731+184566*y
        -461955*y**2+616840*y**3-463530*y**4+185952*y**5-31172*y**6+540*y**7
        -1095*y**8+990*y**9-501*y**10+96*y**11))/(403200*(-1+y)**6)
    

    return 0. 

@jit(float64(int64, float64, float64, int64, int64), cache=True, nopython=True)
def Xr18(i,y,r,dQ2,dr):
    """ 1/mb^5 level functions of r18 for El moments and their derivatives """

    logy = math.log((1-y)/r**2)

    # tree level function
    if (dQ2 == 0 and dr == 0 and i==0):
        return (40*(-1+y)**6-485*r**10*(-1+y)**6-4*r**4*(-1+y)**3*(-70+210*y-210*y**2
        +560*y**3-775*y**4+299*y**5)+5*r**2*(-1+y)**4*(-23+46*y-23*y**2-112*y**3
        +157*y**4-50*y**5+y**6)-2*r**6*(-1+y)*(220+90*logy*(-1+y)**5-1190*y
        +2605*y**2-3505*y**3+3615*y**4-2301*y**5+568*y**6)-4*r**8*(-100+600*y
        -1500*y**2+2510*y**3-2705*y**4+1716*y**5-601*y**6+90*y**7))/(60*r**2*(
        -1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==1):
        return (60*(-1+y)**6-905*r**10*(-1+y)**6+459*r**12*(-1+y)**6-r**4*(-1+y)**3*(
        -715+1140*logy*(-1+y)**3+1005*y+705*y**2-1375*y**3+2490*y**4-3222*y**5
        +1196*y**6)+3*r**6*(-1+y)*(200+540*logy*(-1+y)**5-1540*y+4430*y**2
        -6230*y**3+4915*y**4-2833*y**5+1330*y**6-284*y**7)-3*r**2*(-1+y)**4*(
        -187+120*logy*(-1+y)**2+494*y-367*y**2+40*y**3+220*y**4-282*y**5
        +94*y**6-2*y**7)-3*r**8*(-380+2280*y-5700*y**2+7600*y**3-4935*y**4
        +658*y**5+947*y**6-540*y**7+90*y**8))/(180*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==2):
        return (60*(-1+y)**6-1735*r**10*(-1+y)**6+1145*r**12*(-1+y)**6-371*r**14*(
        -1+y)**6-r**4*(-1+y)**3*(4291+3900*logy*(-1+y)**3-16773*y+22623*y**2
        -11441*y**3+975*y**4+1959*y**5-2447*y**6+897*y**7)+r**2*(-1+y)**4*(1255
        -660*logy*(-1+y)**2-3170*y+2245*y**2-220*y**3-55*y**4-526*y**5+662*y**6
        -226*y**7+5*y**8)-r**6*(-1+y)*(-8045+660*logy*(-1+y)**5+39565*y
        -77480*y**2+75280*y**3-35990*y**4+5458*y**5+3385*y**6-2705*y**7+568*y**8)
        +2*r**8*(1700+60*logy*(-1+y)**6-10140*y+25170*y**2-33260*y**3+24645*y**4
        -10596*y**5+3351*y**6-1350*y**7+540*y**8-90*y**9))/(360*r**2*(-1+y)**6)

    if (dQ2 == 0 and dr == 0 and i==3):
        return (700*(-1+y)**6-35175*r**10*(-1+y)**6+28945*r**12*(-1+y)**6-15757*r**14*(
        -1+y)**6+3830*r**16*(-1+y)**6-7*r**4*(-1+y)**3*(26101+13380*logy*(
        -1+y)**3-91683*y+111753*y**2-50631*y**3+3345*y**4+669*y**5+2673*y**6
        -3283*y**7+1196*y**8)-5*r**2*(-1+y)**4*(-4211+2100*logy*(-1+y)**2
        +10522*y-7361*y**2+700*y**3+175*y**4+70*y**5+1015*y**6-1270*y**7
        +440*y**8-10*y**9)-35*r**6*(-1+y)*(-5113+4500*logy*(-1+y)**5+21065*y
        -30880*y**2+15880*y**3+3310*y**4-5162*y**5+450*y**6+1000*y**7-680*y**8
        +142*y**9)-175*r**8*(42-252*y+630*y**2-840*y**3+630*y**4-252*y**5
        +144*y**6-188*y**7+135*y**8-54*y**9+9*y**10))/(8400*r**2*(-1+y)**6)
    if (dQ2 == 0 and dr == 0 and i==4):
        return (8400*(-1+y)**6-220850*r**10*(-1+y)**6+620760*r**12*(-1+y)**6-486066*r**14*(
        -1+y)**6+217688*r**16*(-1+y)**6-42525*r**18*(-1+y)**6-56*r**4*(-1
        +y)**3*(85011+33180*logy*(-1+y)**3-288213*y+337983*y**2-145841*y**3
        +8295*y**4+1659*y**5+553*y**6+3387*y**7-4119*y**8+1495*y**9)-15*r**2*(
        -1+y)**4*(-20081+10080*logy*(-1+y)**2+50242*y-35201*y**2+3360*y**3
        +840*y**4+336*y**5+168*y**6+3456*y**7-4315*y**8+1510*y**9-35*y**10)
        -42*r**6*(-1+y)*(-30739+149580*logy*(-1+y)**5+4115*y+365720*y**2
        -864320*y**3+806110*y**4-310802*y**5+24930*y**6+990*y**7+8435*y**8
        -5455*y**9+1136*y**10)-840*r**8*(4605+780*logy*(-1+y)**6-26850*y
        +64785*y**2-82480*y**3+57960*y**4-20844*y**5+2694*y**6+330*y**7-370*y**8
        +270*y**9-108*y**10+18*y**11))/(201600*r**2*(-1+y)**6)

    return 0. 

"Here we define the 1/mb^4 and 1/mb^5 corrections to the centralized El-moments in the historical basis"

def moment_1_KIN_MS_HO(elcut, par, hqe, flagmb4 = 1, flagmb5 = 1):
    """ 1/mb^4 and 1/mb^5 corrections to the central moment of the El spectrum. Moment n. 1 """
    y=2*elcut/par.mbkin
    r=par.mcMS/par.mbkin
    elcuthat = elcut/par.mbkin

    rhoD=hqe.rhoD/par.mbkin**3
    rhoLS=hqe.rhoLS/par.mbkin**3
    muG=hqe.muG/par.mbkin**2
    mupi=hqe.mupi/par.mbkin**2

    m1=hqe.m1/par.mbkin**4
    m2=hqe.m2/par.mbkin**4
    m3=hqe.m3/par.mbkin**4
    m4=hqe.m4/par.mbkin**4
    m5=hqe.m5/par.mbkin**4
    m6=hqe.m6/par.mbkin**4
    m7=hqe.m7/par.mbkin**4
    m8=hqe.m8/par.mbkin**4
    m9=hqe.m9/par.mbkin**4
    r1=hqe.r1/par.mbkin**5
    r2=hqe.r2/par.mbkin**5
    r3=hqe.r3/par.mbkin**5
    r4=hqe.r4/par.mbkin**5
    r5=hqe.r5/par.mbkin**5
    r6=hqe.r6/par.mbkin**5
    r7=hqe.r7/par.mbkin**5
    r8=hqe.r8/par.mbkin**5
    r9=hqe.r9/par.mbkin**5
    r10=hqe.r10/par.mbkin**5
    r11=hqe.r11/par.mbkin**5
    r12=hqe.r12/par.mbkin**5
    r13=hqe.r13/par.mbkin**5
    r14=hqe.r14/par.mbkin**5
    r15=hqe.r15/par.mbkin**5
    r16=hqe.r16/par.mbkin**5
    r17=hqe.r17/par.mbkin**5
    r18=hqe.r18/par.mbkin**5

    res = 0
    
    if flagmb4 == 1:
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm1(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m1
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm2(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m2
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm3(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m3
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm4(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m4
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm5(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m5
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm6(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m6
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm7(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m7
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm8(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m8
        res += (-((SM.X(1,elcuthat,r,0,0)*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xm9(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m9
        res += ((SM.X(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        -(SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi**2
        res += ((SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG**2
        res += ((2*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*mupi

    if flagmb5 == 1:
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr1(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r1
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr2(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r2
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr3(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r3
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr4(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r4
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr5(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r5
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr6(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r6
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr7(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r7
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr8(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r8
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr9(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r9
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr10(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r10
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr11(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r11
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr12(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r12
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr13(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r13
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr14(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r14
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr15(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r15
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr16(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r16
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr17(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r17
        res += (-((SM.X(1,elcuthat,r,0,0)*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)
        +Xr18(1,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r18
        res += ((2*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoD
        res += ((2*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoD
        res += ((2*SM.X(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoLS
        res += ((2*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoLS

    return res*par.mbkin**1

def moment_2_KIN_MS_HO(elcut, par, hqe, flagmb4 = 1, flagmb5 = 1):
    """ 1/mb^4 and 1/mb^5 corrections to the central moment of the El spectrum. Moment n. 2 """
    y=2*elcut/par.mbkin
    r=par.mcMS/par.mbkin
    elcuthat = elcut/par.mbkin

    rhoD=hqe.rhoD/par.mbkin**3
    rhoLS=hqe.rhoLS/par.mbkin**3
    muG=hqe.muG/par.mbkin**2
    mupi=hqe.mupi/par.mbkin**2

    m1=hqe.m1/par.mbkin**4
    m2=hqe.m2/par.mbkin**4
    m3=hqe.m3/par.mbkin**4
    m4=hqe.m4/par.mbkin**4
    m5=hqe.m5/par.mbkin**4
    m6=hqe.m6/par.mbkin**4
    m7=hqe.m7/par.mbkin**4
    m8=hqe.m8/par.mbkin**4
    m9=hqe.m9/par.mbkin**4
    r1=hqe.r1/par.mbkin**5
    r2=hqe.r2/par.mbkin**5
    r3=hqe.r3/par.mbkin**5
    r4=hqe.r4/par.mbkin**5
    r5=hqe.r5/par.mbkin**5
    r6=hqe.r6/par.mbkin**5
    r7=hqe.r7/par.mbkin**5
    r8=hqe.r8/par.mbkin**5
    r9=hqe.r9/par.mbkin**5
    r10=hqe.r10/par.mbkin**5
    r11=hqe.r11/par.mbkin**5
    r12=hqe.r12/par.mbkin**5
    r13=hqe.r13/par.mbkin**5
    r14=hqe.r14/par.mbkin**5
    r15=hqe.r15/par.mbkin**5
    r16=hqe.r16/par.mbkin**5
    r17=hqe.r17/par.mbkin**5
    r18=hqe.r18/par.mbkin**5

    res = 0
    
    if flagmb4 == 1:
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm1(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m1
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm2(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m2
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm3(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m3
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm4(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m4
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm5(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m5
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm6(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m6
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm7(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m7
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm8(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m8
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xm9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm9(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m9
        res += ((-3*SM.X(1,elcuthat,r,0,0)**2*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(SM.X(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        +(4*SM.X(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -SM.Xpi(1,elcuthat,r,0,0)**2/SM.X(0,elcuthat,r,0,0)**2-(SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi**2
        res += ((-3*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -SM.XG(1,elcuthat,r,0,0)**2/SM.X(0,elcuthat,r,0,0)**2-(SM.XG(0,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG**2
        res += ((-6*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(2*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*mupi

    if flagmb5 == 1:
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr1(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r1
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr2(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r2
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr3(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r3
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr4(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r4
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr5(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r5
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr6(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r6
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr7(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r7
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr8(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r8
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr9(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r9
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr10(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr10(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r10
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr11(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr11(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r11
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr12(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr12(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r12
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr13(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr13(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r13
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr14(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr14(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r14
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr15(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr15(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r15
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr16(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr16(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r16
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr17(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr17(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r17
        res += ((2*SM.X(1,elcuthat,r,0,0)**2*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(2,elcuthat,r,0,0)*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(2*SM.X(1,elcuthat,r,0,0)*Xr18(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr18(2,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r18
        res += ((-6*SM.X(1,elcuthat,r,0,0)**2*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(2*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoD
        res += ((-6*SM.X(1,elcuthat,r,0,0)**2*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(2*SM.XD(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoD
        res += ((-6*SM.X(1,elcuthat,r,0,0)**2*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XLS(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(2*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoLS
        res += ((-6*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(4*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(2*SM.XG(1,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.XLS(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoLS

    return res*par.mbkin**2

def moment_3_KIN_MS_HO(elcut, par, hqe, flagmb4 = 1, flagmb5 = 1):
    """ 1/mb^4 and 1/mb^5 corrections to the central moment of the El spectrum. Moment n. 3 """
    y=2*elcut/par.mbkin
    r=par.mcMS/par.mbkin
    elcuthat = elcut/par.mbkin

    rhoD=hqe.rhoD/par.mbkin**3
    rhoLS=hqe.rhoLS/par.mbkin**3
    muG=hqe.muG/par.mbkin**2
    mupi=hqe.mupi/par.mbkin**2

    m1=hqe.m1/par.mbkin**4
    m2=hqe.m2/par.mbkin**4
    m3=hqe.m3/par.mbkin**4
    m4=hqe.m4/par.mbkin**4
    m5=hqe.m5/par.mbkin**4
    m6=hqe.m6/par.mbkin**4
    m7=hqe.m7/par.mbkin**4
    m8=hqe.m8/par.mbkin**4
    m9=hqe.m9/par.mbkin**4
    r1=hqe.r1/par.mbkin**5
    r2=hqe.r2/par.mbkin**5
    r3=hqe.r3/par.mbkin**5
    r4=hqe.r4/par.mbkin**5
    r5=hqe.r5/par.mbkin**5
    r6=hqe.r6/par.mbkin**5
    r7=hqe.r7/par.mbkin**5
    r8=hqe.r8/par.mbkin**5
    r9=hqe.r9/par.mbkin**5
    r10=hqe.r10/par.mbkin**5
    r11=hqe.r11/par.mbkin**5
    r12=hqe.r12/par.mbkin**5
    r13=hqe.r13/par.mbkin**5
    r14=hqe.r14/par.mbkin**5
    r15=hqe.r15/par.mbkin**5
    r16=hqe.r16/par.mbkin**5
    r17=hqe.r17/par.mbkin**5
    r18=hqe.r18/par.mbkin**5

    res = 0
    
    if flagmb4 == 1:
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm1(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm1(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m1
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm2(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm2(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m2
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm3(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm3(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m3
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm4(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm4(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m4
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm5(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm5(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m5
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm6(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm6(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m6
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm7(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm7(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m7
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm8(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm8(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m8
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xm9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xm9(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm9(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m9
        res += ((12*SM.X(1,elcuthat,r,0,0)**3*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**5
        -(9*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(SM.X(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.Xpi(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi**2
        res += ((12*SM.X(1,elcuthat,r,0,0)**3*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**5
        -(9*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XG(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG**2
        res += ((24*SM.X(1,elcuthat,r,0,0)**3*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XG(2,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*mupi

    if flagmb5 == 1:
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr1(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr1(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r1
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr2(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr2(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r2
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr3(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr3(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r3
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr4(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr4(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r4
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr5(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr5(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r5
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr6(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr6(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r6
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr7(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr7(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r7
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr8(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr8(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r8
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr9(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr9(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r9
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr10(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr10(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr10(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr10(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r10
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr11(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr11(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr11(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr11(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r11
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr12(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr12(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr12(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr12(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r12
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr13(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr13(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr13(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr13(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r13
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr14(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr14(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr14(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr14(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r14
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr15(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr15(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr15(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr15(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r15
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr16(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr16(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr16(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr16(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r16
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr17(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr17(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr17(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr17(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r17
        res += ((-6*SM.X(1,elcuthat,r,0,0)**3*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(3,elcuthat,r,0,0)*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr18(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.X(2,elcuthat,r,0,0)*Xr18(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(3*SM.X(1,elcuthat,r,0,0)*Xr18(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr18(3,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r18
        res += ((24*SM.X(1,elcuthat,r,0,0)**3*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(3,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XD(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XD(2,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoD
        res += ((24*SM.X(1,elcuthat,r,0,0)**3*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(3,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XD(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XD(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XD(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoD
        res += ((24*SM.X(1,elcuthat,r,0,0)**3*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(3,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XLS(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XLS(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XLS(2,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoLS
        res += ((24*SM.X(1,elcuthat,r,0,0)**3*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(3,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XG(2,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(3*SM.XG(1,elcuthat,r,0,0)*SM.XLS(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.XLS(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoLS

    return res*par.mbkin**3

def moment_4_KIN_MS_HO(elcut, par, hqe, flagmb4 = 1, flagmb5 = 1):
    """ 1/mb^4 and 1/mb^5 corrections to the central moment of the El spectrum. Moment n. 4 """
    y=2*elcut/par.mbkin
    r=par.mcMS/par.mbkin
    elcuthat = elcut/par.mbkin

    rhoD=hqe.rhoD/par.mbkin**3
    rhoLS=hqe.rhoLS/par.mbkin**3
    muG=hqe.muG/par.mbkin**2
    mupi=hqe.mupi/par.mbkin**2

    m1=hqe.m1/par.mbkin**4
    m2=hqe.m2/par.mbkin**4
    m3=hqe.m3/par.mbkin**4
    m4=hqe.m4/par.mbkin**4
    m5=hqe.m5/par.mbkin**4
    m6=hqe.m6/par.mbkin**4
    m7=hqe.m7/par.mbkin**4
    m8=hqe.m8/par.mbkin**4
    m9=hqe.m9/par.mbkin**4
    r1=hqe.r1/par.mbkin**5
    r2=hqe.r2/par.mbkin**5
    r3=hqe.r3/par.mbkin**5
    r4=hqe.r4/par.mbkin**5
    r5=hqe.r5/par.mbkin**5
    r6=hqe.r6/par.mbkin**5
    r7=hqe.r7/par.mbkin**5
    r8=hqe.r8/par.mbkin**5
    r9=hqe.r9/par.mbkin**5
    r10=hqe.r10/par.mbkin**5
    r11=hqe.r11/par.mbkin**5
    r12=hqe.r12/par.mbkin**5
    r13=hqe.r13/par.mbkin**5
    r14=hqe.r14/par.mbkin**5
    r15=hqe.r15/par.mbkin**5
    r16=hqe.r16/par.mbkin**5
    r17=hqe.r17/par.mbkin**5
    r18=hqe.r18/par.mbkin**5

    res = 0
    
    if flagmb4 == 1:
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm1(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm1(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm1(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m1
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm2(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm2(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm2(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m2
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm3(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm3(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm3(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m3
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm4(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm4(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm4(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m4
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm5(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm5(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm5(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m5
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm6(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm6(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm6(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m6
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm7(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm7(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm7(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m7
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm8(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm8(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm8(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m8
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xm9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xm9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xm9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xm9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xm9(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xm9(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xm9(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*m9
        res += ((-30*SM.X(1,elcuthat,r,0,0)**4*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**6
        +(36*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**5
        -(12*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(SM.X(4,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.Xpi(1,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(8*SM.X(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.Xpi(1,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.Xpi(0,elcuthat,r,0,0)*SM.Xpi(4,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi**2
        res += ((-30*SM.X(1,elcuthat,r,0,0)**4*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**6
        +(36*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**5
        -(12*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(SM.X(4,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XG(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(1,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**4
        +(6*SM.X(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)**2)/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XG(1,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.XG(4,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG**2
        res += ((-60*SM.X(1,elcuthat,r,0,0)**4*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**6
        +(72*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(24*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(4,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(4,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(36*SM.X(1,elcuthat,r,0,0)**2*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XG(3,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XG(1,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.Xpi(4,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*mupi

    if flagmb5 == 1:
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr1(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr1(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr1(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr1(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr1(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r1
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr2(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr2(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr2(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr2(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr2(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r2
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr3(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr3(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr3(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr3(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr3(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r3
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr4(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr4(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr4(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr4(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr4(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r4
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr5(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr5(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr5(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr5(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr5(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r5
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr6(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr6(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr6(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr6(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr6(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r6
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr7(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr7(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr7(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr7(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr7(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r7
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr8(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr8(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr8(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr8(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr8(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r8
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr9(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr9(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr9(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr9(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr9(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r9
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr10(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr10(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr10(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr10(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr10(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr10(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr10(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r10
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr11(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr11(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr11(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr11(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr11(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr11(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr11(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r11
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr12(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr12(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr12(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr12(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr12(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr12(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr12(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r12
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr13(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr13(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr13(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr13(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr13(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr13(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr13(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r13
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr14(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr14(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr14(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr14(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr14(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr14(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr14(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r14
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr15(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr15(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr15(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr15(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr15(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr15(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr15(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r15
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr16(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr16(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr16(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr16(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr16(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr16(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr16(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r16
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr17(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr17(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr17(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr17(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr17(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr17(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr17(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r17
        res += ((12*SM.X(1,elcuthat,r,0,0)**4*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.X(4,elcuthat,r,0,0)*Xr18(0,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(12*SM.X(1,elcuthat,r,0,0)**3*Xr18(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*Xr18(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(3,elcuthat,r,0,0)*Xr18(1,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(6*SM.X(1,elcuthat,r,0,0)**2*Xr18(2,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.X(1,elcuthat,r,0,0)*Xr18(3,y,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +Xr18(4,y,r,0,0)/SM.X(0,elcuthat,r,0,0))*r18
        res += ((-60*SM.X(1,elcuthat,r,0,0)**4*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**6
        +(72*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(24*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(4,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XD(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(4,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(36*SM.X(1,elcuthat,r,0,0)**2*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(2,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XD(2,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XD(3,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XD(1,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.Xpi(4,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoD
        res += ((-60*SM.X(1,elcuthat,r,0,0)**4*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**6
        +(72*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(24*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(4,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XD(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XD(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XD(4,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XD(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(36*SM.X(1,elcuthat,r,0,0)**2*SM.XD(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(2,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XD(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XD(3,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XD(0,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XD(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XD(0,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XD(1,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XD(0,elcuthat,r,0,0)*SM.XG(4,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoD
        res += ((-60*SM.X(1,elcuthat,r,0,0)**4*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**6
        +(72*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(24*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(4,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XLS(2,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XLS(3,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XLS(4,elcuthat,r,0,0)*SM.Xpi(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(36*SM.X(1,elcuthat,r,0,0)**2*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(2,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XLS(2,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XLS(3,elcuthat,r,0,0)*SM.Xpi(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XLS(1,elcuthat,r,0,0)*SM.Xpi(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XLS(0,elcuthat,r,0,0)*SM.Xpi(4,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*mupi*rhoLS
        res += ((-60*SM.X(1,elcuthat,r,0,0)**4*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**6
        +(72*SM.X(1,elcuthat,r,0,0)**2*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(24*SM.X(1,elcuthat,r,0,0)*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(2*SM.X(4,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XG(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(2,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XG(3,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(SM.XG(4,elcuthat,r,0,0)*SM.XLS(0,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        +(48*SM.X(1,elcuthat,r,0,0)**3*SM.XG(0,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**5
        -(36*SM.X(1,elcuthat,r,0,0)*SM.X(2,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(8*SM.X(3,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(36*SM.X(1,elcuthat,r,0,0)**2*SM.XG(1,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(2,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XG(2,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XG(3,elcuthat,r,0,0)*SM.XLS(1,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(18*SM.X(1,elcuthat,r,0,0)**2*SM.XG(0,elcuthat,r,0,0)*SM.XLS(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**4
        +(12*SM.X(1,elcuthat,r,0,0)*SM.XG(1,elcuthat,r,0,0)*SM.XLS(2,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        +(8*SM.X(1,elcuthat,r,0,0)*SM.XG(0,elcuthat,r,0,0)*SM.XLS(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**3
        -(4*SM.XG(1,elcuthat,r,0,0)*SM.XLS(3,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2
        -(SM.XG(0,elcuthat,r,0,0)*SM.XLS(4,elcuthat,r,0,0))/SM.X(0,elcuthat,r,0,0)**2)*muG*rhoLS

    return res*par.mbkin**4