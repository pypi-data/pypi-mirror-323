[project]
name = "agentifyme"
dynamic = ["version"]
description = "Framework for building agentic workflows"
authors = [
    { name = "Arun Reddy", email = "arun@agentifyme.ai" }
]
dependencies = [
    "openai~=1.60",
    "tenacity>=8.5",
    "httpx>=0.27",
    "wrapt>=1.16",
    "pydantic~=2.9",
    "cloudpickle>=3.0",
    "joblib>=1.4.2",
    "environs>=11.0.0",
    "docstring-parser>=0.16",
    "together>=1.2.4",
    "jinja2>=3.1.4",
    "python-slugify>=8.0.4",
    "loguru>=0.7.2",
    "orjson>=3.10.11",
    "opentelemetry-api>=1.28.1",
    "opentelemetry-sdk>=1.28.1",
    "opentelemetry-exporter-otlp-proto-grpc>=1.28.1",
    "sentry-sdk>=2.18.0",
    "grpcio>=1.68.0",
    "protobuf>=5.28.3",
    "grpcio-tools>=1.68.0",
    "qdrant-client>=1.12.1",
    "pyyaml>=6.0.2",
    "googleapis-common-protos>=1.66.0",
    "opentelemetry-processor-baggage>=0.50b0",
    "opentelemetry-instrumentation>=0.50b0",
    "openinference-instrumentation-openai>=0.1.18",
    "groq>=0.15.0",
]
readme = "README.md"
requires-python = ">= 3.11"

[project.scripts]
agnt5 = "agentifyme.worker.entrypoint:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff>=0.8.1",
    "pytest>=8.3.1",
    "coverage>=7.6.0",
    "pytest-cov>=5.0.0",
    "ipykernel>=6.29.5",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.23.8",
]


[tool.hatch.version]
path = "agentifyme/__init__.py"

[tool.hatch.metadata]
description = "Framework for building agentic workflows"
allow-direct-references = true
metadata-version = "2.1"


[tool.ruff.lint]
select = ["ALL"]