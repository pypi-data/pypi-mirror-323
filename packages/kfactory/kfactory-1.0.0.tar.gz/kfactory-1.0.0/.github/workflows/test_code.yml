name: Test pre-commit, code and docs

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: setup-mypy
        run: |
          python -m pip install uv wheel
          uv pip install --system -U -e .[ci] mypy
          mypy -p kfactory
          mypy --install-types --non-interactive
      - uses: pre-commit/action@v3.0.1
  test_code:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          python -m pip install wheel uv
          uv pip install --system -e .[ci] pytest
          make gds-download
      - name: Test with pytest
        env:
          KFACTORY_LOGFILTER_LEVEL: "ERROR"
        run: pytest
  test_docs:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version:
          - "3.13"
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
      - name: Install dependencies
        run: |
          python -m pip install --user -U uv wheel
          uv pip install --system -e .[docs,ci]
          python -m ipykernel install --user --name python3
          make install
      - name: Test documentation
        run: |
          make docs
