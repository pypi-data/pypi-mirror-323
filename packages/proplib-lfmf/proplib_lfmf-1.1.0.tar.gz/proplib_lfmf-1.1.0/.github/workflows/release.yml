# Action builds a universal (Win32/Win64/macOS-universal/Linux-x64) Python wheel
# from the source code, using Hatchling, and uploads it as an artifact. An sdist (.tar.gz) is
# also uploaded, which includes all platform shared library files. These artifacts should be
# used when creating new releases on PyPI and GitHub. The action is triggered by pushes into `main`
# or pull_requests into `main` or `dev` (for testing). To aid in releases, the workflow is
# also triggered when new SemVer tags are created.
name: Build Release Artifacts

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.*'
  pull_request:
    branches:
      - main
      - dev

env:
    LIBRARY_BASE_REPO: NTIA/LFMF
    LIBRARY_RELEASE_TAG: v1.1
    LIBRARY_DESTINATION_DIRECTORY: 'src/ITS/Propagation/LFMF/'

jobs:
  build_wheel:
    name: Build a universal, cross-platform wheel
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # Only the binaries required for the current platform are downloaded. Note that the distributed
      # wheel for proplib python packages includes all binaries, so that the wheel is inherently cross-platform.
      - name: Download required ${{ env.LIBRARY_RELEASE_TAG }} Windows binaries
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ env.LIBRARY_BASE_REPO }}
          tag: ${{ env.LIBRARY_RELEASE_TAG }}
          fileName: '*.dll'
          tarBall: false
          zipBall: false
          out-file-path: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

      - name: Download required ${{ env.LIBRARY_RELEASE_TAG }} Linux binaries
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ env.LIBRARY_BASE_REPO }}
          tag: ${{ env.LIBRARY_RELEASE_TAG }}
          fileName: '*.so'
          tarBall: false
          zipBall: false
          out-file-path: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

      - name: Download required ${{ env.LIBRARY_RELEASE_TAG }} macOS binaries
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ env.LIBRARY_BASE_REPO }}
          tag: ${{ env.LIBRARY_RELEASE_TAG }}
          fileName: '*.dylib'
          tarBall: false
          zipBall: false
          out-file-path: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install build dependencies
        run: pip install hatchling

      - name: Build wheels
        run: hatchling build

      - uses: actions/upload-artifact@v4
        with:
          name: Release Artifacts (sdist and wheel)
          path: dist/*
