Metadata-Version: 2.2
Name: pycoimset
Version: 0.1.8
Summary: Python library for optimization of sets
Author-email: Mirko Hahn <mirhahn@ovgu.de>
License: Apache License
        ==============
        
        _Version 2.0, January 2004_  
        _&lt;<http://www.apache.org/licenses/>&gt;_
        
        ### Terms and Conditions for use, reproduction, and distribution
        
        #### 1. Definitions
        
        “License” shall mean the terms and conditions for use, reproduction, and
        distribution as defined by Sections 1 through 9 of this document.
        
        “Licensor” shall mean the copyright owner or entity authorized by the copyright
        owner that is granting the License.
        
        “Legal Entity” shall mean the union of the acting entity and all other entities
        that control, are controlled by, or are under common control with that entity.
        For the purposes of this definition, “control” means **(i)** the power, direct or
        indirect, to cause the direction or management of such entity, whether by
        contract or otherwise, or **(ii)** ownership of fifty percent (50%) or more of the
        outstanding shares, or **(iii)** beneficial ownership of such entity.
        
        “You” (or “Your”) shall mean an individual or Legal Entity exercising
        permissions granted by this License.
        
        “Source” form shall mean the preferred form for making modifications, including
        but not limited to software source code, documentation source, and configuration
        files.
        
        “Object” form shall mean any form resulting from mechanical transformation or
        translation of a Source form, including but not limited to compiled object code,
        generated documentation, and conversions to other media types.
        
        “Work” shall mean the work of authorship, whether in Source or Object form, made
        available under the License, as indicated by a copyright notice that is included
        in or attached to the work (an example is provided in the Appendix below).
        
        “Derivative Works” shall mean any work, whether in Source or Object form, that
        is based on (or derived from) the Work and for which the editorial revisions,
        annotations, elaborations, or other modifications represent, as a whole, an
        original work of authorship. For the purposes of this License, Derivative Works
        shall not include works that remain separable from, or merely link (or bind by
        name) to the interfaces of, the Work and Derivative Works thereof.
        
        “Contribution” shall mean any work of authorship, including the original version
        of the Work and any modifications or additions to that Work or Derivative Works
        thereof, that is intentionally submitted to Licensor for inclusion in the Work
        by the copyright owner or by an individual or Legal Entity authorized to submit
        on behalf of the copyright owner. For the purposes of this definition,
        “submitted” means any form of electronic, verbal, or written communication sent
        to the Licensor or its representatives, including but not limited to
        communication on electronic mailing lists, source code control systems, and
        issue tracking systems that are managed by, or on behalf of, the Licensor for
        the purpose of discussing and improving the Work, but excluding communication
        that is conspicuously marked or otherwise designated in writing by the copyright
        owner as “Not a Contribution.”
        
        “Contributor” shall mean Licensor and any individual or Legal Entity on behalf
        of whom a Contribution has been received by Licensor and subsequently
        incorporated within the Work.
        
        #### 2. Grant of Copyright License
        
        Subject to the terms and conditions of this License, each Contributor hereby
        grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,
        irrevocable copyright license to reproduce, prepare Derivative Works of,
        publicly display, publicly perform, sublicense, and distribute the Work and such
        Derivative Works in Source or Object form.
        
        #### 3. Grant of Patent License
        
        Subject to the terms and conditions of this License, each Contributor hereby
        grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,
        irrevocable (except as stated in this section) patent license to make, have
        made, use, offer to sell, sell, import, and otherwise transfer the Work, where
        such license applies only to those patent claims licensable by such Contributor
        that are necessarily infringed by their Contribution(s) alone or by combination
        of their Contribution(s) with the Work to which such Contribution(s) was
        submitted. If You institute patent litigation against any entity (including a
        cross-claim or counterclaim in a lawsuit) alleging that the Work or a
        Contribution incorporated within the Work constitutes direct or contributory
        patent infringement, then any patent licenses granted to You under this License
        for that Work shall terminate as of the date such litigation is filed.
        
        #### 4. Redistribution
        
        You may reproduce and distribute copies of the Work or Derivative Works thereof
        in any medium, with or without modifications, and in Source or Object form,
        provided that You meet the following conditions:
        
        * **(a)** You must give any other recipients of the Work or Derivative Works a copy of
        this License; and
        * **(b)** You must cause any modified files to carry prominent notices stating that You
        changed the files; and
        * **(c)** You must retain, in the Source form of any Derivative Works that You distribute,
        all copyright, patent, trademark, and attribution notices from the Source form
        of the Work, excluding those notices that do not pertain to any part of the
        Derivative Works; and
        * **(d)** If the Work includes a “NOTICE” text file as part of its distribution, then any
        Derivative Works that You distribute must include a readable copy of the
        attribution notices contained within such NOTICE file, excluding those notices
        that do not pertain to any part of the Derivative Works, in at least one of the
        following places: within a NOTICE text file distributed as part of the
        Derivative Works; within the Source form or documentation, if provided along
        with the Derivative Works; or, within a display generated by the Derivative
        Works, if and wherever such third-party notices normally appear. The contents of
        the NOTICE file are for informational purposes only and do not modify the
        License. You may add Your own attribution notices within Derivative Works that
        You distribute, alongside or as an addendum to the NOTICE text from the Work,
        provided that such additional attribution notices cannot be construed as
        modifying the License.
        
        You may add Your own copyright statement to Your modifications and may provide
        additional or different license terms and conditions for use, reproduction, or
        distribution of Your modifications, or for any such Derivative Works as a whole,
        provided Your use, reproduction, and distribution of the Work otherwise complies
        with the conditions stated in this License.
        
        #### 5. Submission of Contributions
        
        Unless You explicitly state otherwise, any Contribution intentionally submitted
        for inclusion in the Work by You to the Licensor shall be under the terms and
        conditions of this License, without any additional terms or conditions.
        Notwithstanding the above, nothing herein shall supersede or modify the terms of
        any separate license agreement you may have executed with Licensor regarding
        such Contributions.
        
        #### 6. Trademarks
        
        This License does not grant permission to use the trade names, trademarks,
        service marks, or product names of the Licensor, except as required for
        reasonable and customary use in describing the origin of the Work and
        reproducing the content of the NOTICE file.
        
        #### 7. Disclaimer of Warranty
        
        Unless required by applicable law or agreed to in writing, Licensor provides the
        Work (and each Contributor provides its Contributions) on an “AS IS” BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
        including, without limitation, any warranties or conditions of TITLE,
        NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are
        solely responsible for determining the appropriateness of using or
        redistributing the Work and assume any risks associated with Your exercise of
        permissions under this License.
        
        #### 8. Limitation of Liability
        
        In no event and under no legal theory, whether in tort (including negligence),
        contract, or otherwise, unless required by applicable law (such as deliberate
        and grossly negligent acts) or agreed to in writing, shall any Contributor be
        liable to You for damages, including any direct, indirect, special, incidental,
        or consequential damages of any character arising as a result of this License or
        out of the use or inability to use the Work (including but not limited to
        damages for loss of goodwill, work stoppage, computer failure or malfunction, or
        any and all other commercial damages or losses), even if such Contributor has
        been advised of the possibility of such damages.
        
        #### 9. Accepting Warranty or Additional Liability
        
        While redistributing the Work or Derivative Works thereof, You may choose to
        offer, and charge a fee for, acceptance of support, warranty, indemnity, or
        other liability obligations and/or rights consistent with this License. However,
        in accepting such obligations, You may act only on Your own behalf and on Your
        sole responsibility, not on behalf of any other Contributor, and only if You
        agree to indemnify, defend, and hold each Contributor harmless for any liability
        incurred by, or claims asserted against, such Contributor by reason of your
        accepting any such warranty or additional liability.
        
        _END OF TERMS AND CONDITIONS_
        
        ### APPENDIX: How to apply the Apache License to your work
        
        To apply the Apache License to your work, attach the following boilerplate
        notice, with the fields enclosed by brackets `[]` replaced with your own
        identifying information. (Don't include the brackets!) The text should be
        enclosed in the appropriate comment syntax for the file format. We also
        recommend that a file or class name and description of purpose be included on
        the same “printed page” as the copyright notice for easier identification within
        third-party archives.
        
            Copyright [yyyy] [name of copyright owner]
            
            Licensed under the Apache License, Version 2.0 (the "License");
            you may not use this file except in compliance with the License.
            You may obtain a copy of the License at
            
              http://www.apache.org/licenses/LICENSE-2.0
            
            Unless required by applicable law or agreed to in writing, software
            distributed under the License is distributed on an "AS IS" BASIS,
            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            See the License for the specific language governing permissions and
            limitations under the License.
        
        
        
Project-URL: source, https://github.com/mirhahn/pycoimset
Project-URL: issues, https://github.com/mirhahn/pycoimset/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: numpy>=1.26

# Python library for COntinuous IMprovement of SETs

PyCoimset aims to provide a framework for the iterative solution of nonlinear
optimal control problems with distributed binary controls without the need for
standard binary optimization methods such as Branch and Bound. In the long
term, it is meant to relieve these solvers from the extreme computational
stresses that come with spatially distributed control variables so that their
efforts can be directed more towards their primary purpose, i.e., making
decisions that are actually discrete in nature.

Mathematically, PyCoimset approximately solves infimization problems of the
form
```math
\begin{alignedat}{4}
  \inf_U\ && F(U) \\
  \text{s.t.}\ %
  && G_j(U) &\leq 0 \quad && \forall j \in \lbrack n \rbrack, \\
  && U &\in \Sigma \quad
\end{alignedat}
```
where $\Sigma$ is a $\sigma$-algebra and $F \colon \Sigma \to \mathbb{R}$ as
well as $G_j \colon \Sigma \to \mathbb{R}$ are appropriately differentiable
functionals defined on the quotient space resulting from equating sets in
$\Sigma$ if their symmetric difference is a nullset.

The primary intended field of application is one where the functionals are
evaluated by approximately solving ordinary or partial differential equations.
The algorithms are designed to be resilient to evaluation errors and agnostic
with respect to the formatting of the underlying evaluation data structure.
This is intended to give the user a lot of flexibility in how they want to
implement differential equation solvers.

PyCoimset follows semantic versioning rules. It is currently in a pre-`1.0.0`
version. Therefore, the API is still in a lot of flux and breaking changes may
occur on each version.


## Installing

PyCoimset is a pure Python library with a minimal dependency footprint. To use
it, you need Python 3.11 or newer. The main library depends only on NumPy. You
can install PyCoimset using `pip`:
```bash
pip install git+https://www.github.com/mirhahn/pycoimset.git@[version]
```
The `@[version]` part at the end is optional and can be used to install a
specific branch or tag.

Additional dependencies must be installed to run the examples located in the
`examples` subfolder. Each example comes with its own `requirements.txt` file
so that you can install those dependencies using
```bash
pip install -r requirements.txt
```
Please note that some of the examples require SciPy, which may still depend on
NumPy 1.x, so you may experience some downgrading if you install PyCoimset and
the example dependencies separately. This should not be an issue.

## Usage

Once you have installed PyCoimset, you can import the main package using
```python
import pycoimset
```
Currently, implementing your own problem requires that you create
implementations of the `SimilaritySpace`, `SimilarityClass`, and
`SignedMeasure` protocols for your particular measure space discretization as
well as one `Functional` per functional in your problem. These protocols are
defined and documented in `pycoimset.typing.space` and
`pycoimset.typing.functional`. You can then pass your functionals to either the
`pycoimset.UnconstrainedSolver` or the `pycoimset.PenaltySolver` and use them
to solve the infimization problem.

You can refer to the examples to see how these protocols can be implemented.
There are currently no standard implementations, though such standard
implementations are intended to be added in the future.

## Contributing

PyCoimset is currently in a very immature state and one of the primary sources
of this immaturity is API instability. The API cannot stabilize until a
sufficiently large pool of applications exists to accurately assess what the
practical demands on the API are. Therefore, the best way to help develop
PyCoimset is to use it. If you have problems using PyCoimset, feel free to open
an issue and we will try to help you. Keep in mind that this is not a full-time
project, so the response cycle may feel slow sometimes.

## Citing

PyCoimset is part of a doctoral thesis project. At the moment, the thesis is
not published. If you use PyCoimset in your scientific work, we would be most
grateful if you would cite it once it is published. Once this is the case,
you will find the correct citation here.

## Roadmap

Currently, the following changes to PyCoimset's API are planned prior to
version `1.0.0`:

- [ ] Replacing the `Functional` protocol with a function-based interface similar to the "simplified evaluator" API internally used by the solvers;
- [ ] Standard implementation of `SimilarityClass` for time intervals using variable-length switching time lists;
- [ ] Standard mesh-based implementations of `SimilarityClass` based on FEniCS and/or scikit-fem;
- [ ] Facilities to pull parallelization from the implementation layer to the solver layer with an abstract IPC layer;
- [ ] IPC facility implementation for MPI.

The following changes are planned for an unspecified major release past `1.0.0`:

- [ ] Reimplementation of time-critical code in a compiled language;
- [ ] Reimplementation of the example code in a compiled language.

## License

PyCoimset is released under the Apache License, Version 2.0, which is an
OSI-approved open source license that permits commercial use, but limits
developer liability to the greatest extent possible. See the `LICENSE.md` file
for more details.
