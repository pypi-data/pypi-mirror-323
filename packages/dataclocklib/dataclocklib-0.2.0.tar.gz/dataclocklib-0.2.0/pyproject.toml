[project]
name = "dataclocklib"
description = "Data clock charts using matplotlib."
authors = [{name = "Andrew Ridyard", email = "andrew.ridyard@proton.me"}]
maintainers = [{name = "Andrew Ridyard", email = "andrew.ridyard@proton.me"}]
dynamic = ["version"]
license = { file = "LICENSE" }
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
classifiers=[
    # 3 - Alpha | 4 - Beta | 5 - Production/Stable
    "Development Status :: 5 - Production/Stable",
    "Framework :: Matplotlib",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["matplotlib", "dataclock", "visualisation", "analysis"]
dependencies = [
    "matplotlib",
    "pandas[parquet]>=2.2.2",
    "pypalettes>=0.1.5",
]

[dependency-groups]
dev = [
    "bump-my-version>=0.28.3",
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-mpl",
    "ruff>=0.7.4",
]

[project.optional-dependencies]
docs = [
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-rtd-theme>=3.0.2",
    "myst-nb>=1.1.2",
]

[project.urls]
Repository = "https://github.com/andyrids/dataclocklib"
Issues = "https://github.com/andyrids/dataclocklib/issues"
Documentation = "https://andyrids.github.io/dataclocklib/"
Changelog = "https://github.com/andyrids/dataclocklib/blob/main/CHANGELOG.md"

[tool.ruff]
exclude = ["*.ipynb"]
indent-width = 4
line-length = 79

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"

[tool.ruff.lint]
select = [
    "D1",  # pydocstyle
    "E",   # pycodestyle
    "ERA", # commented out code
    "I",   # isort
    "W",   # pycodestyle
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
reportGeneralTypeIssues = false

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
tmp_path_retention_count = 1
tmp_path_retention_policy = "failed"

[tool.bumpversion]
current_version = "0.2.0"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "v{new_version}"
tag_message = "chore: tag version update {current_version} -> {new_version}."
allow_dirty = false
message = "chore: version update {current_version} -> {new_version}."

# [[tool.bumpversion.files]]
# filename = "src/dataclocklib/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[build-system]
requires = ["setuptools>=64.0", "setuptools_scm[toml]", "wheel>=0.37.0"]
build-backend = "setuptools.build_meta"

[tool.distutils.metadata]
metadata_version = "2.4"

# license-file introduced in metadata version 2.4, not 2.2 error
# https://github.com/pypa/setuptools/issues/4759
[tool.setuptools]
license-files = []

[tool.setuptools_scm]
# this section enables setuptools_scm
# can use:
# git tag -a v0.1.4 -m "chore: tag version update."
# or:
# bump-my-version bump patch"
# git describe will indicate if setuptools_scm can identify your tag
# update a tag to the current head
# git tag v0.1.4 -f
