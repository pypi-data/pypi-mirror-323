# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest.models.v0036_partitions_response import V0036PartitionsResponse

class TestV0036PartitionsResponse(unittest.TestCase):
    """V0036PartitionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0036PartitionsResponse:
        """Test V0036PartitionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0036PartitionsResponse`
        """
        model = V0036PartitionsResponse()
        if include_optional:
            return V0036PartitionsResponse(
                errors = [
                    aind_slurm_rest.models.v0/0/36_error.v0.0.36_error(
                        error = '', 
                        errno = 56, )
                    ],
                partitions = [
                    aind_slurm_rest.models.v0/0/36_partition.v0.0.36_partition(
                        flags = [
                            ''
                            ], 
                        preemption_mode = '', 
                        allowed_allocation_nodes = '', 
                        allowed_accounts = '', 
                        allowed_groups = '', 
                        allowed_qos = '', 
                        alternative = '', 
                        billing_weights = '', 
                        default_memory_per_cpu = 56, 
                        default_time_limit = 56, 
                        denied_accounts = '', 
                        denied_qos = '', 
                        preemption_grace_time = 56, 
                        maximum_cpus_per_node = 56, 
                        maximum_memory_per_node = 56, 
                        maximum_nodes_per_job = 56, 
                        max_time_limit = 56, 
                        min_nodes_per_job = 56, 
                        name = '', 
                        nodes = '', 
                        over_time_limit = 56, 
                        priority_job_factor = 56, 
                        priority_tier = 56, 
                        qos = '', 
                        nodes_online = 56, 
                        total_cpus = 56, 
                        total_nodes = 56, 
                        tres = '', )
                    ]
            )
        else:
            return V0036PartitionsResponse(
        )
        """

    def testV0036PartitionsResponse(self):
        """Test V0036PartitionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
