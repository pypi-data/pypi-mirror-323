# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest.models.dbv0036_account_info import Dbv0036AccountInfo

class TestDbv0036AccountInfo(unittest.TestCase):
    """Dbv0036AccountInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0036AccountInfo:
        """Test Dbv0036AccountInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0036AccountInfo`
        """
        model = Dbv0036AccountInfo()
        if include_optional:
            return Dbv0036AccountInfo(
                errors = [
                    aind_slurm_rest.models.dbv0/0/36_error.dbv0.0.36_error(
                        errno = 56, 
                        error = '', )
                    ],
                accounts = [
                    aind_slurm_rest.models.dbv0/0/36_account.dbv0.0.36_account(
                        associations = [
                            aind_slurm_rest.models.dbv0/0/36_association_short_info.dbv0.0.36_association_short_info(
                                account = '', 
                                cluster = '', 
                                partition = '', 
                                user = '', )
                            ], 
                        coordinators = [
                            aind_slurm_rest.models.dbv0/0/36_coordinator_info.dbv0.0.36_coordinator_info(
                                name = '', 
                                direct = 56, )
                            ], 
                        description = '', 
                        name = '', 
                        organization = '', 
                        flags = [
                            ''
                            ], )
                    ]
            )
        else:
            return Dbv0036AccountInfo(
        )
        """

    def testDbv0036AccountInfo(self):
        """Test Dbv0036AccountInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
