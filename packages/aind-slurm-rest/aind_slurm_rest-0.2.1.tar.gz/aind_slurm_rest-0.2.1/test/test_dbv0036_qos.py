# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest.models.dbv0036_qos import Dbv0036Qos

class TestDbv0036Qos(unittest.TestCase):
    """Dbv0036Qos unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0036Qos:
        """Test Dbv0036Qos
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0036Qos`
        """
        model = Dbv0036Qos()
        if include_optional:
            return Dbv0036Qos(
                description = '',
                flags = [
                    ''
                    ],
                id = '',
                limits = aind_slurm_rest.models.dbv0_0_36_qos_limits.dbv0_0_36_qos_limits(
                    max = aind_slurm_rest.models.dbv0_0_36_qos_limits_max.dbv0_0_36_qos_limits_max(
                        wall_clock = aind_slurm_rest.models.dbv0_0_37_qos_limits_max_wall_clock.dbv0_0_37_qos_limits_max_wall_clock(
                            per = aind_slurm_rest.models.dbv0_0_37_qos_limits_max_wall_clock_per.dbv0_0_37_qos_limits_max_wall_clock_per(
                                qos = 56, 
                                job = 56, ), ), 
                        jobs = aind_slurm_rest.models.dbv0_0_36_qos_limits_max_jobs.dbv0_0_36_qos_limits_max_jobs(), 
                        accruing = aind_slurm_rest.models.dbv0_0_37_qos_limits_max_accruing.dbv0_0_37_qos_limits_max_accruing(), 
                        tres = aind_slurm_rest.models.dbv0_0_36_qos_limits_max_tres.dbv0_0_36_qos_limits_max_tres(
                            minutes = aind_slurm_rest.models.dbv0_0_36_qos_limits_max_tres_minutes.dbv0_0_36_qos_limits_max_tres_minutes(), ), ), 
                    min = aind_slurm_rest.models.dbv0_0_36_qos_limits_min.dbv0_0_36_qos_limits_min(
                        priority_threshold = 56, ), ),
                preempt = aind_slurm_rest.models.dbv0_0_37_qos_preempt.dbv0_0_37_qos_preempt(
                    list = [
                        ''
                        ], 
                    mode = [
                        ''
                        ], 
                    exempt_time = 56, ),
                priority = 56,
                usage_factor = 1.337,
                usage_threshold = 1.337
            )
        else:
            return Dbv0036Qos(
        )
        """

    def testDbv0036Qos(self):
        """Test Dbv0036Qos"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
