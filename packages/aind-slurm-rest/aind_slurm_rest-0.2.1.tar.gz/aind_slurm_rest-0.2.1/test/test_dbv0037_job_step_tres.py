# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest.models.dbv0037_job_step_tres import Dbv0037JobStepTres

class TestDbv0037JobStepTres(unittest.TestCase):
    """Dbv0037JobStepTres unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0037JobStepTres:
        """Test Dbv0037JobStepTres
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0037JobStepTres`
        """
        model = Dbv0037JobStepTres()
        if include_optional:
            return Dbv0037JobStepTres(
                requested = aind_slurm_rest.models.dbv0_0_37_job_step_tres_requested.dbv0_0_37_job_step_tres_requested(
                    average = [
                        aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                            type = '', 
                            name = '', 
                            id = 56, 
                            count = 56, )
                        ], 
                    max = [
                        aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                            type = '', 
                            name = '', 
                            id = 56, 
                            count = 56, )
                        ], 
                    min = , 
                    total = , ),
                consumed = aind_slurm_rest.models.dbv0_0_37_job_step_tres_requested.dbv0_0_37_job_step_tres_requested(
                    average = [
                        aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                            type = '', 
                            name = '', 
                            id = 56, 
                            count = 56, )
                        ], 
                    max = [
                        aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                            type = '', 
                            name = '', 
                            id = 56, 
                            count = 56, )
                        ], 
                    min = , 
                    total = , ),
                allocated = [
                    aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ]
            )
        else:
            return Dbv0037JobStepTres(
        )
        """

    def testDbv0037JobStepTres(self):
        """Test Dbv0037JobStepTres"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
