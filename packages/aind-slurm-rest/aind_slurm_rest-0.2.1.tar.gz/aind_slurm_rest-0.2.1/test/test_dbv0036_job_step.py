# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest.models.dbv0036_job_step import Dbv0036JobStep

class TestDbv0036JobStep(unittest.TestCase):
    """Dbv0036JobStep unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0036JobStep:
        """Test Dbv0036JobStep
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0036JobStep`
        """
        model = Dbv0036JobStep()
        if include_optional:
            return Dbv0036JobStep(
                time = aind_slurm_rest.models.dbv0_0_37_job_step_time.dbv0_0_37_job_step_time(
                    elapsed = 56, 
                    end = 56, 
                    start = 56, 
                    suspended = 56, 
                    system = aind_slurm_rest.models.dbv0_0_37_job_time_system.dbv0_0_37_job_time_system(
                        seconds = 56, 
                        microseconds = 56, ), 
                    total = aind_slurm_rest.models.dbv0_0_37_job_time_total.dbv0_0_37_job_time_total(
                        seconds = 56, 
                        microseconds = 56, ), 
                    user = aind_slurm_rest.models.dbv0_0_37_job_time_user.dbv0_0_37_job_time_user(
                        seconds = 56, 
                        microseconds = 56, ), ),
                exit_code = aind_slurm_rest.models.dbv0/0/36_job_exit_code.dbv0.0.36_job_exit_code(
                    status = '', 
                    return_code = 56, 
                    signal = aind_slurm_rest.models.dbv0_0_37_job_exit_code_signal.dbv0_0_37_job_exit_code_signal(
                        signal_id = 56, 
                        name = '', ), ),
                nodes = aind_slurm_rest.models.dbv0_0_37_job_step_nodes.dbv0_0_37_job_step_nodes(
                    count = 56, 
                    range = '', ),
                tasks = aind_slurm_rest.models.dbv0_0_37_job_step_tasks.dbv0_0_37_job_step_tasks(
                    count = 56, ),
                pid = '',
                cpu = aind_slurm_rest.models.dbv0_0_37_job_step_cpu.dbv0_0_37_job_step_CPU(
                    requested_frequency = aind_slurm_rest.models.dbv0_0_37_job_step_cpu_requested_frequency.dbv0_0_37_job_step_CPU_requested_frequency(
                        min = 56, 
                        max = 56, ), 
                    governor = [
                        ''
                        ], ),
                kill_request_user = '',
                state = '',
                statistics = aind_slurm_rest.models.dbv0_0_37_job_step_statistics.dbv0_0_37_job_step_statistics(
                    cpu = aind_slurm_rest.models.dbv0_0_37_job_step_statistics_cpu.dbv0_0_37_job_step_statistics_CPU(
                        actual_frequency = 56, ), 
                    energy = aind_slurm_rest.models.dbv0_0_37_job_step_statistics_energy.dbv0_0_37_job_step_statistics_energy(
                        consumed = 56, ), ),
                step = aind_slurm_rest.models.dbv0_0_37_job_step_step.dbv0_0_37_job_step_step(
                    job_id = 56, 
                    het = aind_slurm_rest.models.dbv0_0_37_job_step_step_het.dbv0_0_37_job_step_step_het(
                        component = 56, ), 
                    id = '', 
                    name = '', ),
                task = aind_slurm_rest.models.dbv0_0_37_job_step_task.dbv0_0_37_job_step_task(
                    distribution = '', ),
                tres = aind_slurm_rest.models.dbv0_0_36_job_step_tres.dbv0_0_36_job_step_tres(
                    requested = aind_slurm_rest.models.dbv0_0_36_job_step_tres_requested.dbv0_0_36_job_step_tres_requested(
                        average = [
                            aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                                type = '', 
                                name = '', 
                                id = 56, 
                                count = 56, )
                            ], 
                        max = [
                            aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                                type = '', 
                                name = '', 
                                id = 56, 
                                count = 56, )
                            ], 
                        min = , 
                        total = , ), 
                    consumed = aind_slurm_rest.models.dbv0_0_36_job_step_tres_requested.dbv0_0_36_job_step_tres_requested(), 
                    allocated = , )
            )
        else:
            return Dbv0036JobStep(
        )
        """

    def testDbv0036JobStep(self):
        """Test Dbv0036JobStep"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
