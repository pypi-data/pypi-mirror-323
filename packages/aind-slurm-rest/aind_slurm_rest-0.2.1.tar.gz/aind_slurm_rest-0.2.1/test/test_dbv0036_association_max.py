# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest.models.dbv0036_association_max import Dbv0036AssociationMax

class TestDbv0036AssociationMax(unittest.TestCase):
    """Dbv0036AssociationMax unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0036AssociationMax:
        """Test Dbv0036AssociationMax
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0036AssociationMax`
        """
        model = Dbv0036AssociationMax()
        if include_optional:
            return Dbv0036AssociationMax(
                jobs = aind_slurm_rest.models.dbv0_0_36_association_max_jobs.dbv0_0_36_association_max_jobs(
                    per = aind_slurm_rest.models.dbv0_0_37_association_max_jobs_per.dbv0_0_37_association_max_jobs_per(
                        wall_clock = 56, ), ),
                per = aind_slurm_rest.models.dbv0_0_37_association_max_per.dbv0_0_37_association_max_per(
                    account = aind_slurm_rest.models.dbv0_0_37_association_max_per_account.dbv0_0_37_association_max_per_account(
                        wall_clock = 56, ), ),
                tres = aind_slurm_rest.models.dbv0_0_36_association_max_tres.dbv0_0_36_association_max_tres(
                    per = aind_slurm_rest.models.dbv0_0_36_association_max_tres_per.dbv0_0_36_association_max_tres_per(
                        job = [
                            aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                                type = '', 
                                name = '', 
                                id = 56, 
                                count = 56, )
                            ], 
                        node = [
                            aind_slurm_rest.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                                type = '', 
                                name = '', 
                                id = 56, 
                                count = 56, )
                            ], ), 
                    total = , 
                    minutes = aind_slurm_rest.models.dbv0_0_36_association_max_tres_minutes.dbv0_0_36_association_max_tres_minutes(
                        total = , ), )
            )
        else:
            return Dbv0036AssociationMax(
        )
        """

    def testDbv0036AssociationMax(self):
        """Test Dbv0036AssociationMax"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
